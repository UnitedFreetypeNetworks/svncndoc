<chapter id="scm-frontends">
  <title>SCM前台</title>
    

  <section id="cvs">
    <title>CVS</title>

    <para>
      <glossterm linkend="glossary-cvs">CVS</glossterm> 在开源领域中是网络透明的并发版本控制系统。
    </para>

    <para>
      &devel-product-name; 支持核查,与bug跟踪系统使用一体化的日志信息，而且为CVS提供了操作标识。 
      CVS的各种缺陷会给集成带来许多的麻烦。建议用户到<xref linkend="svn" endterm="svn-short">中升级CVS。
    </para>

    <para>
      当将目录提交到库中时，CVS不会要求你为日志加上批注。&devel-product-name;不能客服这个局限性，虽然它<ulink
      url="&devel-product-bugtracker;/show_bug.cgi?id=285">可以/ulink>做到。
    </para>

    <para>
      CVS的另一个局限是：它没有在 '<ulink
      url="&devel-product-bugtracker;/show_bug.cgi?id=176"><filename>cvs
      admin -o</filename></ulink>'中提供集成调用。
    </para>

    <para>
      CVS 1.11.x的确认调用，没有提供允许更改的文件列表。 这导致CVS 1.11.x的<xref
      linkend="verification-checks-valid-product-name"
      endterm="verification-checks-valid-product-name-short">策略不能被设置成<filename>auto</filename>。
      这一策略，将会在CVS 1.12.x中得到<ulink url="&devel-product-bugtracker;/show_bug.cgi?id=746">实现</ulink>
      并且，如果可能的话，它也会被应用于CVSNT。
    </para>

    <para>
      CVS 1.11.x的临时日志文件记录了目录变更的信息。然而它没有分别记录库路径。这导致了，<xref
      linkend="additional-features-mail-notification"
      endterm="additional-features-mail-notification-short"> 策略只记录了一组目录变更的信息。
      此功能将在<ulink url="&devel-product-bugtracker;/show_bug.cgi?id=826">CVS 1.12.x和CVSNT中实现。
    </para>

    <para>
      集成bug跟踪的CVS与其它系统整合时，存在一个普遍的限制，这是由于CVS 1.11.x提供提交时变更影响文件列表
      的结构不适当导致的。对于每一个文件，旧版本，新版本，文件名，所有这一切都用逗号分隔开，以命令行参数
      形式传给集成触发脚本(integration trigger script)。当文件名们或者文件存储的目录，无论是包含逗号或者
      是空格，都将导致使用简单正则表达式的解析脚本产生混乱。一些系统通过<ulink
      url="http://www.einval.com/~steve/software/cvs-bugzilla/#loginfo">修改CVS的二进制源码</ulink>来解决
      这个问题,并且发布了补丁包。&devel-product-name;解决这一问题时，使用了<ulink url="&devel-product-bugtracker;/show_bug.cgi?id=286#c2">
      状态解析器</ulink>。使用这个解析器，在文件名和目录名中所包含的空格或者逗号，对集成整合的混乱作用，将
      是微不足道的。例如，<xref linkend="fig-complex-cvs-filename">所现实的文件名，是可以被接受的。
    </para>

    <figure id="fig-complex-cvs-filename">
      <title>CVS整合器接受复杂文件名</title>
      <programlisting>
a file with spaces,NONEs, commas, digits,1.1,2.numbers close to dots.1.2,NONe.txt
      </programlisting>
      </figure>

    <para>
      对于CVS的确认调用，由于没有提供将会提交的文件名列表，所以它是不可能动态地检测产品的名称。动态检测产品的名称是
      <ulink url="http://bugzilla.mkgnu.net/show_bug.cgi?id=746">不被CVS所支持</ulink>的。
    </para>

    <para>
      &devel-product-name;已经被证实可以和下面的CVS版本紧密的结合： 
      <itemizedlist>
	<listitem>
	  <para>
	    <emphasis>1.11.21</emphasis>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <emphasis>1.12.13</emphasis>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <emphasis>CVSNT 2.5.03 Build 2260</emphasis>
	  </para>
	</listitem>
      </itemizedlist>
      在CVS (e.g. 1.12.9)的 1.12.x间的某一个版本上，命令行模版发生了<ulink url=
      "https://www.cvshome.org/docs/manual/cvs-1.12.10/cvs_18.html#SEC186">变化</ulink>。这种新格式<ulink
      url="http://bugzilla.mkgnu.net/show_bug.cgi?id=464">也</ulink>被&devel-product-name;所支持。
      
    </para>

  </section>


  <section id="git">
    <title>Git</title>

    <para>
      <glossterm linkend="glossary-git">Git</glossterm> 是一个源码发布管理工具，它用来快速有效地处理巨大的工程，
      例如：linux内核。
    </para>

    <para>
      &devel-product-name;目前对于Git来说，仅支持确认检查。也就是说Git的调用需要额外地支持
      <filename>&devel-config-activity-commit;</filename>以便于记录使用bug跟踪的
      <ulink url="http://bugzilla.mkgnu.net/show_bug.cgi?id=992">日志信息集成</ulink>，和
      <filename>&devel-config-activity-tag;</filename>来<ulink
      url="http://bugzilla.mkgnu.net/show_bug.cgi?id=991">标识集成操作</ulink>。
    </para>

    <para>
      对于Git的确认调用，由于没有提供将会提交的文件名列表，，所以它是不可能动态地检测产品的名称。动态检测产品的名称是
      <ulink url="http://bugzilla.mkgnu.net/show_bug.cgi?id=994">不被Git所支持</ulink>的。
    </para>

    <para>
      &devel-product-name;已经被证实可以和下面的Git版本紧密的结合：
     <itemizedlist>
	<listitem>
	  <para>
	    <emphasis>1.5.3.5</emphasis>
	  </para>
	</listitem>
      </itemizedlist>
    </para>

  </section>

  <section id="svn">
    <title>Subversion</title>
    <titleabbrev id="svn-short">Subversion</titleabbrev>
    <para>
      <glossterm linkend="glossary-svn">Subversion</glossterm> 是一个值得关注的CVS替代者。
    </para>
    
    <para>
     对于Subversion来说，&devel-product-name;支持确认检查，整合bug跟踪系统的日志信息，以及操作标识的整合。
    </para>

    <para>
      当用户使用编辑打开一条日志注释时，Subversion <ulink url="http://subversion.tigris.org/issues/show_bug.cgi?id=1973">
      并</ulink>没有能力使用一个预定义的日志模版。于是，&devel-product-name;想要的日志模版就必须由用户来输入。
    </para>

    <para>
      &devel-product-name; 已经被证实可以和下面的Subversion版本紧密的结合：
      <itemizedlist>
	<listitem>
	  <para>
	    <emphasis>1.0.6</emphasis>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <emphasis>1.1.3</emphasis>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <emphasis>1.2.3</emphasis>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <emphasis>1.3.0</emphasis>
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <emphasis>1.4.0,1.4.5</emphasis>
	  </para>
	</listitem>
      </itemizedlist>
     </para>

  </section>



  <section id="other-scm">
    <title>其它的SCM系统</title>
    <para>
      能被&devel-product-name;支持的其它SCM前台。下列SCM系统的开发者和系统集成商给予了SCM集成前台<emphasis role="bold">
      大力的鼓励</emphasis>并做出了贡献：
      <itemizedlist>
	<listitem>
	  <para>
            <glossterm linkend="glossary-aegis">Aegis</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-arch">Arch</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-bazzar-ng">Bazaar-NG</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-bitkeeper">Bitkeeper</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-clearcase">Clearcase</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-katie">Katie</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-mercurial">Mercurial</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-monotone">Monotone</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-opencm">OpenCM</glossterm>
	  </para>
	</listitem>
	<listitem>
	  <para>
            <glossterm linkend="glossary-perforce">Perforce</glossterm>
	  </para>
	</listitem>
      </itemizedlist>
    </para>

    <para>
      开发一个前台的需求:
      <itemizedlist>
	<listitem>
	  <para>
	  	    提交将支持此前台的&devel-product-name;未来版本。
	  </para>
	</listitem>
	<listitem>
	  <para>
	        创建一个新的前台模块命名为<filename>src/lib/product/Glue/FrontendName.pm.in</filename>。
	        CVS前台<filename>src/lib/product/Glue/CVS.pm.in</filename>服务是一个很好的例子。
	  </para>
	</listitem>
	<listitem>
	  <para>
	       依照<filename>src/lib/product/Glue/Glue.pm.in:check_configuration</filename>进行更新。
	  </para>
	</listitem>
	<listitem>
	  <para>
	        更新配置管理文件<filename>configure.in</filename>和<filename>Makefile.in</filename>以便
	        自动生成，和自动清除新的前台。
	  </para>
	</listitem>
	<listitem>
	  <para>
	        更新<filename>Makefile.in</filename>的<filename>install-tools</filename>规则，以便于从根安装前的前台。
	  </para>
	</listitem>
	<listitem>
	  <para>
	       创建一个目录命名为<filename>src/glue/templates/frontendname</filename>，它包含了调用和触发的脚本模版。CVS触发器
	       脚本模版在<filename>src/glue/templates/cvs</filename>的服务是一个很好的例子。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    更新<filename>src/glue/templates/cvs/*/checkoutlist.in</filename>并通常从中提取<filename>lib/scmbug/Scmbug/Glue/FrontendName.pm</filename>
            这样做不会对CVS SCM前台产生破坏。
	  </para>
	</listitem>
	<listitem>
	  <para>
            更新<xref linkend="glue" endterm="glue-installer-short"><filename>src/scripts/install_glue.pl.in</filename>并且
            它的主页<filename>doc/manpages/install_glue.sgml.1.in</filename>支持新的前台。
	  </para>
	</listitem>
	<listitem>
	
	  <para>
	        更新<xref linkend="vdd" endterm="vdd-short"><filename>src/scripts/vdd_generator.pl.in</filename> 并且
            它的主页<filename>doc/manpages/vdd_generator.sgml.1.in</filename>支持新的前台。
	  </para>
	</listitem>
	<listitem>
	  <para>
	        更新<xref linkend="merger" endterm="merger-short"><filename>src/scripts/merge.pl.in</filename>并且
            它的主页<filename>doc/manpages/merge.sgml.1.in</filename>支持新的前台。
	  </para>
	</listitem>
	<listitem>
	  <para>
	       更新<filename>doc/manual/content</filename>中的文档来反映对新前台的支持。
	  </para>
	</listitem>
      </itemizedlist>
    </para>


  </section>

</chapter>
