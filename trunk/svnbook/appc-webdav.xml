<appendix xml:id="svn.webdav">
    <info>
      <title>WebDAV 和自动版本</title>
    </info>
    <para>WebDAV是HTTP的一个扩展，作为一个文件共享的标准不断发展。当今的操作系统变得极端的web化，许多内置了对装配WebDAV服务器导出的<quote>共享</quote>的支持。</para>
    <para>如果你使用Apache/mod_dav_svn作为你的Subversion网络服务器，某种程度上，你也是在运行一个WebDAV服务器。这个附录提供了这种协议一些背景知识，Subversion如何使用它，Subversion如何和认识WebDAV的软件交互工作。</para>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.webdav.basic">
      <info>
        <title>什么是 WebDAV？</title>
      </info>
      <para><firstterm>DAV</firstterm>的意思是<quote>Distributed Authoring and Versioning</quote>。RFC 2518为HTTP 1.1定义了一组概念和附加扩展方法来把web变成一个更加普遍的读/写媒体，基本思想是一个WebDAV兼容的web服务器可以像普通的文件服务器一样工作；客户端可以通过HTTP装配类似于NFS或SMB的WebDAV共享文件夹。</para>
      <para>悲惨的是，RFC规范并没有提供任何版本控制模型。基本的DAV客户端和服务器只是假定每个文件或目录只有一个版本存在，可以重复的覆盖。</para>
      <para>因为RFC 2518漏下了版本概念，几年之后，另一个委员会留下来负责撰写RFC 3253来添加WebDAV的版本化，也就是<quote>DeltaV</quote>。WebDAV/DeltaV客户端和服务器经常叫做<quote>DeltaV</quote>客户端和服务器，因为DeltaV暗含了基本的WebDAV。</para>
      <para>最初的WebDAV标准得到了广泛的成功，所有的现代操作系统拥有内置的(后面有详细资料)对普通WebDAV的支持，许多流行的应用程序也可以使用WebDAV—Microsoft Office，Dreamweaver和Photoshop。在服务器方面，Apache从1998年就开始支持WebDAV，并被认为是一个事实上的开源标准，也有许多商业的WebDAV服务器，例如Microsoft的IIS。</para>
      <para>不幸的是，DeltaV没有这样的成功，很难寻找到任何DeltaV客户端和服务器。只有一些不太出名的商业产品，因此很难测试交互性，不清楚为什么DeltaV还这样停滞，一些人说规范太复杂了，还有些人认为尽管DeltaV的特性有很大的吸引力(即使最新的技术用户也喜欢使用网络文件共享)，版本控制特性对大多数用户还不是这样有趣和必须。最后，有些人认为DeltaV还这样不流行主要是因为一直没有开源的服务器产品实现它。</para>
      <para>当Subversion还在设计阶段时，使用Apache的httpd作为主要网络服务器就是一个很好的想法，已经有了支持WebDAV服务的模块(<command>mod_dav_svn</command>)。DeltaV有一个很新的规范，希望就是Subversion服务器模块最终能够成为一个开源的DeltaV参考实现，但非常不幸，DeltaV得版本模型过于详细，与Subversion的模型并不匹配，虽然有些概念可以对应起来，但有些则不能。</para>
      <para>这是什么意思呢？</para>
      <para>首先，Subversion客户端不是一个完全实现的DeltaV客户端，它需要从服务器得到DeltaV不能提供的东西，因此非常依赖于只有<command>mod_dav_svn</command>理解的Subversion特定的<literal>REPORT</literal>请求。</para>
      <para>其次，<command>mod_dav_svn</command>不是一个完全的DeltaV服务，许多与Subversion不相关的DeltaV规范还没有实现。</para>
      <para>在开发者社区一直有这样的讨论，是否值得弥补这种形势。改变Subversion的设计来匹配DeltaV看起来并不现实，所以可能没有办法让客户端从普通的DeltaV服务器上得到所有的东西。另一方面，mod_dav_svn<emphasis>可以</emphasis>继续开发来实现所有的DeltaV，但缺乏这样做的动力—几乎没有能与之交户的DeltaV客户端。</para>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.webdav.autoversioning">
      <info>
        <title>自动版本化</title>
      </info>
      <para>因为Subversion客户端不是完整的DeltaV客户端，Subversion服务器也不是完整的DeltaV服务器，但仍有值得高兴的交互特性：叫做<firstterm>自动版本化</firstterm>。</para>
      <para>自动版本化是DeltaV标准中的可选特性，一个典型的DeltaV服务器会拒绝一个对版本控制之下文件的<literal>PUT</literal>操作，为了修改一个版本控制下的文件，服务器只会接受一系列正确的版本请求：例如<literal>MKACTIVITY</literal>、<literal>CHECKOUT</literal>、<literal>PUT</literal>和<literal>CHECKIN</literal>。但是如果DeltaV服务器支持自动版本化，服务器可以在后台假装客户端执行了一些列正确的版本请求，也就是说，DeltaV服务器可以与一个对版本化一无所知的普通WebDAV客户端交互。</para>
      <para>因为有许多操作系统已经集成了WebDAV客户端，这个特性的用例可能是这样的：假设一个办公室有许多使用Microsoft Windows或Mac OS的普通用户，每个用户<quote>装载</quote>了一个Subversion版本库，看起来就是普通的网络共享文件夹。他们像普通目录一样的操作这个目录：打开文件、编辑它们，保存它们。同时，服务器自动的版本化所有的东西，任何管理员(或有知识的用户)可以一直使用Subversion客户端来查询历史来检索旧版本的数据。</para>
      <para>这个场景不是小说：对于Subversion 1.2来说，是真实的和有效的。为了激活<command>mod_dav_svn</command>的自动版本化，需要使用<filename>httpd.conf</filename>中Location区块的<literal>SVNAutoversioning</literal>指示，例如：</para>
      <screen>
&lt;Location /repos&gt;
  DAV svn
  SVNPath /var/svn/repository
  SVNAutoversioning on
&lt;/Location&gt;
</screen>
      <para>当激活了SVNAutoversioning，来自WebDAV的客户端请求会导致自动提交，每个修订版本会自动附加一个原始的日志信息。</para>
      <para>然而，在激活这个特性之前，需要理解你做的事情。WebDAV会做许多写请求，导致了产生数量<emphasis>非常多</emphasis>的自动提交修订版本。例如，当保存数据，许多客户端会使用一个<literal>PUT</literal>一个0字节的文件，然后紧跟一个<literal>PUT</literal>真实的文件数据。一个单独的文件写操作产生了两个不同的提交。考虑到许多应用程序隔几分钟的自动保存，会产生更多的提交。</para>
      <para>如果你有发送邮件的post-commit钩子程序，例如，你会根据是否有价值来开启和关闭邮件通知，另外，一个聪明的post-commit钩子也应该能够区分自动版本化和<command>svn commit</command>产生的事务。技巧就是检查修订版本的<literal>svn:autoversioned</literal>属性，如果有，则提交来自一个原始的WebDAV客户端。</para>
      <para>另一个作为<literal>SVNAutoversioning</literal>特性补充的特性来自Apache的<literal>mod_mime</literal>模块，如果一个原始的WebDAV客户端在版本库添加了一个新文件，用户就没有机会设置<literal>svn:mime-type</literal>属性，这会导致使用WebDAV共享目录查看时会看到原始的图标，而没有关联到任何应用。一个补救办法就是让系统管理员(或其他理解Subversion)的人检出一份工作拷贝，然后为需要的文件手动设置<literal>svn:mime-type</literal>属性，但是这个整理工作永远不会结束，作为替代，你可以在你的Subversion<literal>&lt;Location&gt;</literal>区使用<literal>ModMimeUsePathInfo</literal>指示：</para>
      <screen>
&lt;Location /repos&gt;
  DAV svn
  SVNPath /var/svn/repository
  SVNAutoversioning on

  ModMimeUsePathInfo on

&lt;/Location&gt;
</screen>
      <para>这个指示允许<literal>mod_mime</literal>在使用自动版本化添加新文件时尝试自动检测新文件的mime-type，这个模块查看文件的扩展名，有可能的话还包括检查内容；如果文件符合某个常用模式，就会自动设置文件的<literal>svn;mime-type</literal>。</para>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.webdav.clients">
      <info>
        <title>客户端交互性</title>
      </info>
      <para>所有的WebDAV客户端分为三类—独立应用程序，文件浏览器扩展或文件系统实现，这些分类定义了WebDAV用户可用的功能性。<xref linkend="svn.webdav.clients.tbl-1"/>给WebDAV常见软件进行了分类，并提供了的简短描述。这些软件支持的细节，以及总体的分类，可以在本章后面找到。</para>
      <table xml:id="svn.webdav.clients.tbl-1">
        <info>
          <title>常用的 WebDAV 客户端</title>
        </info>
        <tgroup cols="6">
          <thead>
            <row>
              <entry>软件</entry>
              <entry>类型</entry>
              <entry>Windows</entry>
              <entry>Mac</entry>
              <entry>Linux</entry>
              <entry>描述</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Adobe Photoshop</entry>
              <entry>独立的WebDAV应用程序</entry>
              <entry>X</entry>
              <entry/>
              <entry/>
              <entry>图像编辑软件，允许直接从WebDAV的URL打开文件和修改。</entry>
            </row>
            <row>
              <entry>Cadaver</entry>
              <entry>独立的WebDAV应用程序</entry>
              <entry/>
              <entry>X</entry>
              <entry>X</entry>
              <entry>命令行的WebDAV客户端，支持文件传输，目录树显示和锁定操作</entry>
            </row>
            <row>
              <entry>DAV Explorer</entry>
              <entry>独立的WebDAV应用程序</entry>
              <entry>X</entry>
              <entry>X</entry>
              <entry>X</entry>
              <entry>浏览WebDAV共享的Java GUI工具</entry>
            </row>
            <row>
              <entry>Macromedia Dreamweaver</entry>
              <entry>独立的WebDAV应用程序</entry>
              <entry>X</entry>
              <entry/>
              <entry/>
              <entry>Web制作软件，可以直接读写WebDAV的URL</entry>
            </row>
            <row>
              <entry>Microsoft Office</entry>
              <entry>独立的WebDAV应用程序</entry>
              <entry>X</entry>
              <entry/>
              <entry/>
              <entry>Office上产套件，可以直接读写WebDAV的URL</entry>
            </row>
            <row>
              <entry>Microsoft Web 文件夹</entry>
              <entry>文件浏览器WebDAV扩展</entry>
              <entry>X</entry>
              <entry/>
              <entry/>
              <entry>可以在WebDAV执行树操作的GUI文件浏览器。</entry>
            </row>
            <row>
              <entry>GNOME Nautilus</entry>
              <entry>文件浏览器WebDAV扩展</entry>
              <entry/>
              <entry/>
              <entry>X</entry>
              <entry>GUI文件浏览器，可以对WebDAV共享执行目录树操作。</entry>
            </row>
            <row>
              <entry>KDE Konqueror</entry>
              <entry>文件浏览器WebDAV扩展</entry>
              <entry/>
              <entry/>
              <entry>X</entry>
              <entry>GUI文件浏览器，可以对WebDAV共享执行目录树操作。</entry>
            </row>
            <row>
              <entry>Mac OS X</entry>
              <entry>WebDAV文件系统实现</entry>
              <entry/>
              <entry>X</entry>
              <entry/>
              <entry>内置支持加载WebDAV共享的操作系统</entry>
            </row>
            <row>
              <entry>驱动器映射程序，可以将Windows驱动器加载为远程的WebDAV共享</entry>
              <entry>WebDAV文件系统实现</entry>
              <entry>X</entry>
              <entry/>
              <entry/>
              <entry>驱动器映射程序为了远程WebDAV共享分配Windows驱动器盘符。</entry>
            </row>
            <row>
              <entry>文件传输软件，可以将Windows驱动器加载为远程的WebDAV共享</entry>
              <entry>WebDAV文件系统实现</entry>
              <entry>X</entry>
              <entry/>
              <entry/>
              <entry>文件传输软件，也就是可以为加载的远程WebDAV共享赋予Windows驱动器盘符。</entry>
            </row>
            <row>
              <entry>davfs2</entry>
              <entry>WebDAV文件系统实现</entry>
              <entry/>
              <entry/>
              <entry>X</entry>
              <entry>Linux文件系统驱动允许加载WebDAV共享</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <!-- =============================================================== -->
      <section xml:id="svn.webdav.clients.standalone">
        <info>
          <title>独立的 WebDAV 应用程序</title>
        </info>
        <para>WebDAV应用使用WebDAV协议与WebDAV服务器通讯，我们将会介绍一些支持WebDAV的流行程序。</para>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <section xml:id="svn.webdav.clients.standalone.windows">
          <info>
            <title>Microsoft Office，Dreamweaver，Photoshop</title>
          </info>
          <para>在Windows下，有许多已知的应用程序支持WebDAV客户端功能，例如微软Office，<footnote><para>在Windows下，有一些有名的集成WebDAV客户端功能的软件，例如Microsoft's Office、Adobe的Photoshop和Macromedia的Dreamweaver。它们都可以直接打开和保存URL，也可以在编辑时大量的使用WebDAV的锁定。</para></footnote>Adobe的Photoshop和Macromedia的Dreamweaver程序，他们可以直接打开和保存URL，并且在编辑文件时经常使用WebDAV的锁。 </para>
          <para>需要注意尽管这些程序也存在于Mac OS X，但是在这个平台上并不是直接支持WebDAV。实际上在Mac OS X，<guimenu>File→Open</guimenu>对话框不允许人们输入path或URL，这好像看起来我们的这个Macintosh应用不会支持WebDAV特性了，但实际上是因为OS X已经实现了底层的文件系统级WebDAV支持。</para>
        </section>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <section xml:id="svn.webdav.clients.standalone.free">
          <info>
            <title>Cadaver，DAV 浏览器</title>
          </info>
          <para>Cadaver是一个简单的Unix命令行的WebDAV共享浏览程序，就像Subversion客户端，它使用neon的HTTP库，毫不奇怪，因为其作者就是neon的作者，Cadaver是一个自由软件(是用GPL许可证)，可以通过<uri href="http://www.webdav.org/cadaver/">http://www.webdav.org/cadaver/</uri>访问。</para>
          <para>使用cadaver与命令行FTP程序类似，因此它在基本的WebDAV调试中非常有用，它可以用来在紧急情况下上传或下载文件，也可以用来验证属性，并拷贝、移动、锁定或解锁文件：</para>
          <screen>
$ cadaver http://host/repos
dav:/repos/&gt; ls
Listing collection `/repos/': succeeded.
Coll: &gt; foobar                                 0  May 10 16:19
      &gt; playwright.el                       2864  May  4 16:18
      &gt; proofbypoem.txt                     1461  May  5 15:09
      &gt; westcoast.jpg                      66737  May  5 15:09

dav:/repos/&gt; put README
Uploading README to `/repos/README':
Progress: [=============================&gt;] 100.0% of 357 bytes succeeded.

dav:/repos/&gt; get proofbypoem.txt
Downloading `/repos/proofbypoem.txt' to proofbypoem.txt:
Progress: [=============================&gt;] 100.0% of 1461 bytes succeeded.
</screen>
          <para>DAV Explorer是另一个独立运行的WebDAV客户端，使用Java编写，有一个类Apache的许可证，网站是<uri href="http://www.ics.uci.edu/~webdav/">http://www.ics.uci.edu/~webdav/</uri>。DAV Explorer与cadaver功能差不多，优点可移植，并有一个用户友好的GUI程序。它也是最早的支持WebDAV访问控制协议(RFC 3744)的客户端之一。</para>
          <para>当然，在这个情况下DAV Explorer的ACL支持没有任何用处，因为<command>mod_dav_svn</command>不支持它，事实上，Cadaver和DAV Explorer支持的一些有限的DeltaV命令也并不有效，因为他们不允许<literal>MKACTIVITY</literal>请求，但是这都不相干；我们假定这些客户端都是针对自动版本化版本库工作。</para>
        </section>
      </section>
      <!-- =============================================================== -->
      <section xml:id="svn.webdav.clients.file-explorer-extensions">
        <info>
          <title>文件浏览器的 WebDAV 扩展</title>
        </info>
        <para>一些流行的文件浏览器GUI程序支持WebDAV扩展，允许用户将DAV共享当作本地文件夹访问，例如Windows浏览器可以以<quote>network place</quote>方式浏览WebDAV服务器。用户可以拖入和拖出文件，或者是改名、拷贝或删除其中的文件。但是因为它只是文件浏览器的一个特性，DAV对普通应用不可见，所有的DAV交互必须通过浏览器界面。</para>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <section xml:id="svn.webdav.clients.file-explorer-extensions.windows">
          <info>
            <title>Microsoft Web 文件夹</title>
          </info>
          <para>Microsoft是WebDAV规范最早的支持者，最早在Windows 98配置客户端，被称作<quote>网络文件夹</quote>，这个客户端在Windows NT4和2000上也存在。</para>
          <para>最早的Webfolders客户端是浏览器的扩展，主要的浏览文件系统的GUI程序，工作良好。在Windows 98，如果<quote>我的电脑</quote>里没有网络文件夹，这个特性需要明确安装。在Windows 2000，只需要添加一个新的<quote>网络位置</quote>，输入URL，WebDAV共享就会弹出让你浏览。</para>
          <para>伴随着Windows XP，Microsoft开始了另一种网络文件夹的实现，叫做<quote>WebDAV mini-redirector</quote>，这个新的实现是文件系统级的客户端，允许WebDAV转载到驱动器盘符上。不幸的是，这个实现充满难以相信的bug。客户端经常会尝试把http的URL(<literal>http://host/repos</literal>)转化为UNC共享符号(<literal>\\host\repos</literal>)，它也经常使用Windows域认证来回应基本的HTTP认证，按照<literal>HOST\username</literal>发送用户名。这类互动性问题在网络上大量传播，使大量用户受挫。即使是ApacheWebDAV的作者Greg Stein也建议不要对Apache服务器使用XP的网络文件夹。</para>
          <para>Windows Vista's initial implementation of Web Folders seems to
          be almost the same as XP's, so it has the same sort of
          problems.  With luck, Microsoft will remedy these issues in
          a Vista Service Pack.</para>
          <para>However, there seem to be workarounds for both XP and
          Vista that allow Web Folders to work against Apache.  Users
          have mostly reported success with these techniques, so we'll
          relay them here.</para>
          <para>On Windows XP, you have two options.  First, search
          Microsoft's web site for update KB90730, <quote>Software
          Update for Web Folders.</quote>  This may fix all your
          problems.  If it doesn't, it seems that the original pre-XP
          Web Folders implementation is still buried within the
          system.  You can unearth it by going to Network
          Places and adding a new network place.  When prompted,
          enter the URL of the repository, but <emphasis>include a
          port number</emphasis> in the URL.  For
          example, you should enter <userinput>http://host/repos</userinput> 
          as <userinput>http://host:80/repos</userinput> instead.
          Respond to any authentication prompts with your Subversion
          credentials.</para>
          <para>On Windows Vista, the same KB90730 update may clear
          everything up.  But there may still be other issues.  Some
          users have reported that Vista considers
          all <literal>http://</literal> connections insecure, and thus
          will always fail any authentication challenges from Apache
          unless the connection happens
          over <literal>https://</literal>.  If you're unable to connect
          to the Subversion repository via SSL, you can tweak the
          system registry to turn off this behavior.  Just change the
          value of the <literal>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters\BasicAuthLevel</literal>
          key from <userinput>1</userinput> to <userinput>2</userinput>.  A final warning:  be sure to set up the Web
          Folder to point to the repository's root directory
          (<filename>/</filename>), rather than some subdirectory
          such as <filename>/trunk</filename>.  Vista Web Folders
          seems to work only against repository roots.</para>
          <para>In general, while these workarounds may function for
          you, you might get a better overall experience using a
          third-party WebDAV client such as WebDrive or NetDrive.</para>
        </section>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <section xml:id="svn.webdav.clients.file-explorer-extensions.linux-de">
          <info>
            <title>Nautilus，Konqueror</title>
          </info>
          <para>Nautilus是GNOME桌面(<uri href="http://www.gnome.org">http://www.gnome.org)http://www.kde.org)</uri></para>
          <para>GNOME的Nautilus里，打开<guimenuitem>File→Open location</guimenuitem>，并且输入URL。版本库就会显示出来，就像其他文件系统。</para>
          <para>KDE的Konqueror里你需要在地址栏使用<literal>webdav://</literal>模式来输入URL，如果你输入<literal>http://</literal>的URL，Konqueror会像普通的web浏览器。你会看到mod_dav_svn输出的普通HTML目录列表。通过输入<literal>webdav://host/repos</literal>代替<literal>http://host/repos</literal>，Konqueror就成为了一个WebDAV客户端，并且按照文件系统的方式显示版本库。</para>
        </section>
      </section>
      <section xml:id="svn.webdav.clients.fs-impl">
        <info>
          <title>WebDAV 的文件系统实现</title>
        </info>
        <para>WebDAV文件系统实现被认为是最佳的WebDAV客户端，它通过低级的文件系统模块实现，通常在操作系统的核心。这意味着DAV共享像网络的其他文件系统一样装载，就像在Unix下面装载NFS，或者是在Windows下装载一个SMB共享。结果就是这种客户端为所有程序提供了对WebDAV得透明访问，应用程序甚至意识不到发生了WebDAV请求。</para>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <section xml:id="svn.webdav.clients.fs-impl.windows">
          <info>
            <title>WebDrive，NetDrive</title>
          </info>
          <para>WebDrive和NetDrive都是优秀的商业产品，允许将WebDAV绑定到Windows的盘符，结果是你可以同对真实硬盘一样操作这些WebDAV后端支持的共享。WebDrive可以从South River Technologies(<uri href="http://www.southrivertech.com">http://www.southrivertech.com</uri>)购买。Netware的NetDrive可以在网络上免费下载，但用户还是需要有一个Netware许可证。</para>
        </section>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <section xml:id="svn.webdav.clients.fs-impl.macosx">
          <info>
            <title>Mac OS X</title>
          </info>
          <para>Apple的OS X操作系统是集成的文件系统级的WebDAV客户端，通过Finder，选择<guimenu moreinfo="none">Go menu</guimenu>的<guimenuitem moreinfo="none">Connect to Server</guimenuitem>条目，输入WebDAV的URL，会在桌面显示一个磁盘，就像其他装载的卷。你也可以从Darwin终端通过<command>mount</command>类型为<literal>webdav</literal>的文件系统实现。</para>
          <screen>
$ mount -t webdav http://svn.example.com/repos/project /some/mountpoint
$
</screen>
          <para>注意如果<command>mod_dav_svn</command>是1.2之前的版本，OS X不能按照可读写装载，而是会成为只读。这是因为，OS X坚持要读写共享支持锁定，而锁定文件出现在Subversion 1.2。</para>
          <para>警告一句话：OS X的WebDAV客户端有时候对HTTP重定向很敏感，如果OS X不能装载版本库，你或许需要开启Apache服务器<filename>httpd.conf</filename>的BrowserMatch指示：</para>
          <screen>
BrowserMatch "^WebDAVFS/1.[012]" redirect-carefully
</screen>
        </section>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
        <section xml:id="svn.webdav.clients.fs-impl.linux">
          <info>
            <title>Linux davfs2</title>
          </info>
          <para>Linux davfs2是一个Linux核心的文件系统模块，开发坐落在<uri href="http://dav.sourceforge.net/">http://dav.sourceforge.net/</uri>。一旦安装，一个WebDAV网络共享可以使用mount命令装载：</para>
          <screen>
$ mount.davfs http://host/repos /mnt/dav
</screen>
        </section>
      </section>
    </section>
  </appendix>
  <!--
local variables:
sgml-parent-document: ("book.xml" "appendix")
end:
-->