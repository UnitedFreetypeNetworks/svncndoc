<chapter xml:id="svn.ref">
    <info>
      <title>Subversion 完全参考</title>
    </info>
    <para>本章是使用Subversion的一个完全手册，包括了命令行客户端(<command>svn</command>)和它的所有子命令，也有版本库管理程序(<command>svnadmin</command>和<command>svnlook</command>)和它们各自的子命令。</para>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.svn">
      <info>
        <title>Subversion 命令行客户端：<command>svn</command></title>
      </info>
      <para>为了使用命令行客户端，只需要输入<command>svn</command>和它的子命令<footnote><para>是的，使用<option>--version</option>选项不需要子命令，几分钟后我们会到达那个部分。</para></footnote>以及相关的选项或操作的对象―输入的子命令和选项没有特定的顺序，下面使用<command>svn status</command>的方式都是合法的：</para>
      <screen>
$ svn -v status
$ svn status -v 
$ svn status -v myfile
</screen>
      <para>你可以在<xref linkend="svn.tour"/>发现更多使用客户端命令的例子，以及<xref linkend="svn.advanced.props"/>中的管理属性的命令。</para>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svn.sw">
        <info>
          <title>svn 选项</title>
        </info>
        <para>虽然Subversion的子命令有一些不同的选项，但有的选项是全局的―也就是说，每个选项保证是表示同样的事情，而不管是哪个子命令使用的。举个例子，<option>--verbose</option>(<option>-v</option>)一直意味着<quote>冗长输出</quote>，而不管使用它的命令是什么。</para>
        <para>The <command>svn</command> command-line client usually
        exits quickly with an error if you pass it an option which
        does not apply to the specified subcommand.  But as of
        Subversion 1.5, several of the options which apply to
        all―or nearly all―of the subcommands have been
        deemed acceptable by all subcommands, even if they have no
        effect on some of them.  They appear grouped together in the
        command-line client's usage messages as global options.  This
        was done to assist folks who write scripts which wrap the
        command-line client.  These global options are as
        follows:</para>
        <variablelist>
          <varlistentry>
            <term>
              <option>--config-dir</option>
              <replaceable>DIR</replaceable>
            </term>
            <listitem>
              <para>指导Subversion从指定目录而不是默认位置(用户主目录的<filename>.subversion</filename>)读取配置信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-auth-cache</option>
            </term>
            <listitem>
              <para>阻止在Subversion管理区缓存认证信息(如用户名密码)。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--non-interactive</option>
            </term>
            <listitem>
              <para>如果认证失败，或者是不充分的凭证时，防止出现要求凭证的提示(例如用户名和密码)。这在运行自动脚本时非常有用，只是让Subversion失败而不是提示更多的信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--password</option>
              <replaceable>PASS</replaceable>
            </term>
            <listitem>
              <para>Specifies the password to use when authenticating
              against a Subversion server.  If not provided, or if
              incorrect, Subversion will prompt you for this
              information as needed.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--username</option>
              <replaceable>NAME</replaceable>
            </term>
            <listitem>
              <para>Specifies the username to use when authenticating
              against a Subversion server.  If not provided, or if
              incorrect, Subversion will prompt you for this
              information as needed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>The rest of the options apply and are accepted by only a
        subset of the subcommand.  They are as follows:</para>
        <variablelist>
          <varlistentry>
            <term>
              <option>--accept</option>
              <replaceable>ACTION</replaceable>
            </term>
            <listitem>
              <para>Specifies an action for automatic conflict resolution.
              Possible actions are <literal>postpone</literal>,
              <literal>base</literal>, <literal>mine-full</literal>,
              <literal>theirs-full</literal>, <literal>edit</literal>, and
              <literal>launch</literal>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--auto-props</option>
            </term>
            <listitem>
              <para>开启auto-props，覆盖<filename>config</filename>文件中的<literal>enable-auto-props</literal>指示。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--change</option> (<option>-c</option>) <replaceable>ARG</replaceable></term>
            <listitem>
              <para>作为引用特定<quote>修改</quote>(也叫做修订版本)的方法，这个选项是<quote>-r ARG-1:ARG</quote>语法上的甜头。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--changelist</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>Instructs Subversion to operate only on members of the changelist named
              <replaceable>ARG</replaceable>.  You can use this option
              multiple times to specify sets of changelists.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--cl</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>这是<option>--changelist</option>选项的一个别名。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--depth</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>Instructs Subversion to limit the scope of an operation to a particular tree
              depth.  <replaceable>ARG</replaceable> is one of
              <literal>empty</literal>, <literal>files</literal>,
              <literal>immediates</literal>, or
              <literal>infinity</literal>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--diff-cmd</option>
              <replaceable>CMD</replaceable>
            </term>
            <listitem>
              <para>指定用来表示文件区别的外部程序，当<command>svn diff</command>调用时，会使用Subversion的内置区别引擎，默认会提供统一区别输出，如果你希望使用一个外置区别程序，使用<option>--diff-cmd</option>。你可以通过<option>--extensions</option>(本小节后面有更多介绍)把选项传递到区别程序。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--diff3-cmd</option>
              <replaceable>CMD</replaceable>
            </term>
            <listitem>
              <para>指定一个外置程序用来合并文件。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--dry-run</option>
            </term>
            <listitem>
              <para>检验运行一个命令的效果，但没有实际的修改―可以用在磁盘和版本库。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--editor-cmd</option>
              <replaceable>CMD</replaceable>
            </term>
            <listitem>
              <para>指定一个外部程序来编辑日志信息或是属性值。如何设定缺省编辑器见<xref linkend="svn.advanced.confarea.opts.config"/>的<literal>editor-cmd</literal>小节。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--encoding</option>
              <replaceable>ENC</replaceable>
            </term>
            <listitem>
              <para>告诉Subversion你的提交日志信息是通过提供的字符集编码的，缺省时是你的操作系统的本地编码，如果你的提交信息使用其它编码，你一定要指定这个值。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--extensions</option> (<option>-x</option>) <replaceable>ARGS</replaceable></term>
            <listitem>
              <para>指定一个或多个Subversion传递给提供文件区别的外部区别程序的参数，如果你要传递多个参数，你一定能够要用引号(例如，<command>svn diff --diff-cmd /usr/bin/diff -x "-b -E"</command>)括起所有的参数。这个选项<emphasis>只有</emphasis>在使用<option>--diff-cmd</option>选项时使用。</para>
            </listitem>
            <!-- TODO(fitz): Document -u -b -w and - -ignore-eol-style -->
          </varlistentry>
          <varlistentry>
            <term><option>--file</option> (<option>-F</option>) <replaceable>FILENAME</replaceable></term>
            <listitem>
              <para>为特定子命令使用命名文件的的内容，尽管不同的子命令对这些内容做不同的事情。例如，<command>svn commit</command>使用内容作为提交日志，而<command>svn propset</command>使用它作为属性值。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--force</option>
            </term>
            <listitem>
              <para>强制一个特定的命令或操作运行。Subversion有一些操作防止你做普通的使用，但是你可以传递force选项告诉Subversion<quote>我知道我做的事情，也知道这样的结果，所以让我做吧</quote>。这个选项在程序上等同于在打开电源的情况下做你自己的电子工作―如果你不知道你在做什么，你很有可能会得到一个威胁的警告。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--force-log</option>
            </term>
            <listitem>
              <para>将传递给<option>--message</option>(<option>-m</option>)或者<option>--file</option>(<option>-F</option>)的可疑参数指定为有效可接受。缺省情况下，如果选项的参数看起来会成为子命令的目标，Subversion会提出一个错误，例如，你传递一个版本化的文件路径给<option>--file</option>(<option>-F</option>)选项，Subversion会认为出了点错误，认为你将目标对象当成了参数，而你并没有提供其它的―未版本化的文件作为日志信息的文件。为了确认你的意图并且不考虑这类错误，传递<option>--force-log</option>选项给命令来接受它作为日志信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--help</option> (<option>-h</option>或<option>-?</option>)</term>
            <listitem>
              <para>如果同一个或多个子命令一起使用，会显示每个子命令内置的帮助文本，如果单独使用，它会显示常规的客户端帮助文本。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-ancestry</option>
            </term>
            <listitem>
              <para>告诉Subversion在计算区别(只依赖于路径内容)时忽略祖先。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-externals</option>
            </term>
            <listitem>
              <para>告诉Subversion忽略外部定义和外部定义管理的工作拷贝。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--incremental</option>
            </term>
            <listitem>
              <para>打印适合串联的输出格式。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--keep-changelist</option>
            </term>
            <listitem>
              <para>Tells Subversion not to delete changelists after committing.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--keep-local</option>
            </term>
            <listitem>
              <para>Keeps the local copy of a file or directory (used
              with the <command>svn delete</command> command).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--file</option> (<option>-F</option>) <replaceable>FILENAME</replaceable></term>
            <listitem>
              <para>只显示第一个<replaceable>NUM</replaceable>日志信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--message</option> (<option>-m</option>) <replaceable>MESSAGE</replaceable></term>
            <listitem>
              <para>表示你会在命令行中指定日志信息，紧跟这个开关，例如：</para>
              <screen>
$ svn commit -m "They don't make Sunday."
</screen>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--new</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>使用<replaceable>ARG</replaceable>作为新的目标(结合<command>svn diff</command>使用)。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-auto-props</option>
            </term>
            <listitem>
              <para>关闭auto-props，覆盖<filename>config</filename>文件中的<literal>enable-auto-props</literal>指示。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-diff-deleted</option>
            </term>
            <listitem>
              <para>防止Subversion打印删除文件的区别信息，缺省的行为方式是当你删除了一个文件后运行<command>svn diff</command>打印的区别与删除文件所有的内容得到的结果一样。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-ignore</option>
            </term>
            <listitem>
              <para>在状态列表中显示<literal>global-ignores</literal>配置选项或者是<literal>svn:ignore</literal>属性忽略的文件。见<xref linkend="svn.advanced.confarea.opts.config"/>和<xref linkend="svn.advanced.props.special.ignore"/>查看详情。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-unlock</option>
            </term>
            <listitem>
              <para>不自动解锁文件(缺省的提交行为是解锁提交列出的所有文件)，更多信息见<xref linkend="svn.advanced.locking"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--non-recursive</option> (<option>-N</option>)</term>
            <listitem>
              <para><emphasis>废弃的</emphasis>。防止子命令迭代到子目录，大多数子命令缺省是迭代的，但是一些子命令―通常是那些潜在的删除或者是取消本地修改的命令―千万不要。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--notice-ancestry</option>
            </term>
            <listitem>
              <para>在计算区别时关注祖先。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--old</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>使用<replaceable>ARG</replaceable>作为旧的目标(结合<command>svn diff</command>使用)。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--parents</option>
            </term>
            <listitem>
              <para>Creates and adds nonexistent or nonversioned parent
              subdirectories to the working copy or repository as part
              of an operation.  This is useful for automatically
              creating multiple subdirectories where none currently
              exist.  If performed on a URL, all the directories will
              be created in a single commit.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--quiet</option> (<option>-q</option>)</term>
            <listitem>
              <para>请求客户端在执行操作时只显示重要信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--record-only</option>
            </term>
            <listitem>
              <para>标记修订版本已合并(通过<option>--revision</option> (<option>-r</option>)使用)</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--recursive</option> (<option>-R</option>)</term>
            <listitem>
              <para><emphasis>废弃的</emphasis>。让子命令迭代到子目录，大多数子命令缺省是迭代的。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--non-interactive</option>
            </term>
            <listitem>
              <para>Used with the <command>svn merge</command>
              subcommand, merges all of the source URL's changes into
              the working copy.  See
              <xref linkend="svn.branchemerge.basicmerging.stayinsync"/>
              for details.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--relocate</option>
              <replaceable>目的路径[PATH...]</replaceable>
            </term>
            <listitem>
              <para><command>svn switch</command>子命令中使用，用来修改你的工作拷贝所引用的版本库位置。当版本库的位置修改了，而你有一个工作拷贝，希望继续使用时非常有用。见<command>svn switch</command>的例子。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--remove</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>从<replaceable>ARG</replaceable>变更列表清除</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--revision</option> (<option>-r</option>) <replaceable>REV</replaceable></term>
            <listitem>
              <para>指出你将为特定操作提供一个修订版本(或修订版本的范围)，你可以提供修订版本号，修订版本关键字或日期(在华括号中)作为修订版本开关的参数。如果你希望提供一个修订版本范围，你可以提供用冒号隔开的两个修订版本，举个例子：</para>
              <screen>
$ svn log -r 1729
$ svn log -r 1729:HEAD
$ svn log -r 1729:1744
$ svn log -r {2001-12-04}:{2002-02-17}
$ svn log -r 1729:{2002-02-17}
</screen>
              <para>见<xref linkend="svn.tour.revs.keywords"/>查看更多信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--revprop</option>
            </term>
            <listitem>
              <para>操作针对修订版本属性，而不是Subversion文件或目录的属性。这个选项需要你传递<option>--revision</option>(<option>-r</option>)参数。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--set-depth</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>Sets the sticky depth on a directory in a working
              copy to one of <literal>empty</literal>,
              <literal>files</literal>, <literal>immediates</literal>,
              or <literal>infinity</literal>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--show-ids</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>Used to make <command>svn mergeinfo</command>
              display either <literal>merged</literal>
              or <literal>eligible</literal> revisions.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--show-updates</option> (<option>-u</option>)</term>
            <listitem>
              <para>导致客户端显示本地拷贝哪些文件已经过期，这不会实际更新你的任何文件―只是显示了如果你运行<command>svn update</command>时更新的文件。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--stop-on-copy</option>
            </term>
            <listitem>
              <para>导致Subversion子命令在传递历史时会在版本化资源拷贝时停止收集历史信息―也就是历史中资源从另一个位置拷贝过来的位置―如果遇到。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--strict</option>
            </term>
            <listitem>
              <para>导致Subversion使用严格的语法，就是明确使用特定而不是含糊的子命令(也就是，<command>svn propget</command>)。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--targets</option>
              <replaceable>FILENAME</replaceable>
            </term>
            <listitem>
              <para>告诉Subversion从你提供的文件中得到希望操作的文件列表，而不是在命令行列出所有的文件。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--use-merge-history</option> (<option>-g</option>)</term>
            <listitem>
              <para>Uses or displays additional information from merge
              history.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--verbose</option> (<option>-v</option>)</term>
            <listitem>
              <para>请求客户端在运行子命令打印尽量多的信息，会导致Subversion打印额外的字段，每个文件的细节信息或者是关于动作的附加信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--version</option>
            </term>
            <listitem>
              <para>打印客户端版本信息，这个信息不仅仅包括客户端的版本号，也有所有客户端可以用来访问Subversion版本库的版本库访问模块列表。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--with-all-revprops</option>
            </term>
            <listitem>
              <para>Used with the <option>--xml</option> option to <command>svn log</command>,
            will retrieve and display all revision
            properties in the log output.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--with-revprop</option>
              <replaceable>ARG</replaceable>
            </term>
            <listitem>
              <para>When used with any command that writes to the
              repository, sets the revision property, using the
              <replaceable>NAME=VALUE</replaceable> format,
              <replaceable>NAME</replaceable> to
              <replaceable>VALUE</replaceable>.  When used with
              <command>svn log</command> in <option>--xml</option> mode, this displays the value of
              <replaceable>ARG</replaceable> in the log output.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--xml</option>
            </term>
            <listitem>
              <para>使用XML格式打印输出。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svn.c">
        <info>
          <title>svn 子命令</title>
        </info>
        <para>Here are the various subcommands for the <command>svn</command> program.  For the sake of
        brevity, we omit the global options (described in <xref linkend="svn.ref.svn.sw"/>) from the subcommand descriptions
        which follow.</para>
        <refentry xml:id="svn.ref.svn.c.add">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>add</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn add</refname>
            <refpurpose>添加文件、目录或符号链。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn add PATH...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>文件、目录或符号链到你的工作拷贝并且预定添加到版本库。它们会在下次提交上传并添加到版本库，如果你在提交之前改变了主意，你可以使用<command>svn revert</command>取消预定。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>否</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--auto-props
--depth ARG
--force
--no-auto-props
--no-ignore
--parents
--quiet (-q)
--targets FILENAME
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>添加一个文件到工作拷贝：</para>
            <screen>
$ svn add foo.c 
A         foo.c
</screen>
            <para>当添加一个目录，<command>svn add</command>缺省的行为方式是递归的：</para>
            <screen>
$ svn add testdir
A         testdir
A         testdir/a
A         testdir/b
A         testdir/c
A         testdir/d
</screen>
            <para>你可以只添加一个目录而不包括其内容：</para>
            <screen>
$ svn add --depth=empty otherdir
A         otherdir
</screen>
            <para>通常情况下，命令<command>svn add *</command>会忽略所有已经在版本控制之下的目录，有时候，你会希望添加所有工作拷贝的未版本化文件，包括那些隐藏在深处的文件，可以使用<command>svn add</command>的<option>--force</option>递归到版本化的目录下：</para>
            <screen>
$ svn add * --force
A         foo.c
A         somedir/bar.c
A         otherdir/docs/baz.doc
…
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.blame">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>blame</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn blame</refname>
            <refpurpose>显示特定文件和URL内嵌的作者和修订版本信息。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn blame TARGET[@REV]...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>显示特定文件和URL内嵌的作者和修订版本信息。每一行文本在开头都放了最后修改的作者(用户名)和修订版本号。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--extensions (-x) ARG
--force
--incremental
--revision (-r) ARG
--use-merge-history (-g)
--verbose (-v)
--xml
</screen>
            <!--

TODO(fitz): doc this:
  - -incremental            : give output suitable for concatenation
  - -xml                    : output in XML
  -x [- -extensions] arg    : Default: '-u'. When Subversion is invoking an
                             external diff program, ARG is simply passed along
                             to the program. But when Subversion is using its
                             default internal diff implementation, or when
                             Subversion is displaying blame annotations, ARG
                             could be any of the following:
                                -u (- -unified):
                                   Output 3 lines of unified context.
                                -b (- -ignore-space-change):
                                   Ignore changes in the amount of white space.
                                -w (- -ignore-all-space):
                                   Ignore all white space.
                                - -ignore-eol-style:
                                   Ignore changes in EOL style
  - -force                  : force operation to run

-->
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>如果你希望在测试版本库看到blame标记的<filename>readme.txt</filename>源代码：</para>
            <screen>
$ svn blame http://svn.red-bean.com/repos/test/readme.txt
     3      sally This is a README file.
     5      harry You should read this.
</screen>
            <para>即使<command>svn blame</command>说明Harry最后在修订版本5修改了<filename>readme.txt</filename>，你也需要验证Harry在修订版本修改行的<emphasis>上下文</emphasis>―也许他只是调整了空格。</para>
            <para>If you use the <option>--xml</option> option, you can
            get XML output describing the blame annotations, but not
            the contents of the lines themselves:</para>
            <screen>
$ svn blame --xml http://svn.red-bean.com/repos/test/readme.txt
&lt;?xml version="1.0"?&gt;
&lt;blame&gt;
&lt;target
   path="sandwich.txt"&gt;
&lt;entry
   line-number="1"&gt;
&lt;commit
   revision="3"&gt;
&lt;author&gt;sally&lt;/author&gt;
&lt;date&gt;2008-05-25T19:12:31.428953Z&lt;/date&gt;
&lt;/commit&gt;
&lt;/entry&gt;
&lt;entry
   line-number="2"&gt;
&lt;commit
   revision="5"&gt;
&lt;author&gt;harry&lt;/author&gt;
&lt;date&gt;2008-05-29T03:26:12.293121Z&lt;/date&gt;
&lt;/commit&gt;
&lt;/entry&gt;
&lt;/target&gt;
&lt;/blame&gt;
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.cat">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>cat</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn cat</refname>
            <refpurpose>输出特定文件或URL的内容。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn cat TARGET[@REV]...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>输出特定文件或URL的内容。列出目录的内容可以使用<command>svn list</command>。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--show-ids
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>如果你希望不检出而察看版本库的readme.txt的内容：</para>
            <screen>
$ svn cat http://svn.red-bean.com/repos/test/readme.txt
This is a README file.
You should read this.
</screen>
            <tip>
              <para>如果你的工作拷贝已经过期(或者你有本地修改)，并且希望察看工作拷贝的<literal>HEAD</literal>修订版本的一个文件，如果你给定一个路径，<command>svn cat -r HEAD</command>会自动取得<literal>HEAD</literal>的修订版本：</para>
            </tip>
            <screen>
$ cat foo.c
This file is in my local working copy 
and has changes that I've made.

$ svn cat -r HEAD foo.c
Latest revision fresh from the repository!
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.changelist">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>changelist</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn changelist</refname>
            <refpurpose>Associate (or deassociate) local paths with a
            changelist.</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>changelist CLNAME TARGET...</programlisting>
            <programlisting>changelist --remove TARGET...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Used for dividing files in a working copy into a
            changelist (logical named grouping) in order to allow
            users to easily work on multiple file collections within a
            single working copy.</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>cl</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>否</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--targets FILENAME
--depth ARG
--quiet (-q)
--config-dir DIR
--changelist ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>Edit three files, add them to a changelist, then
            commit only files in that changelist:</para>
            <screen>
$ svn cl issue1729 foo.c bar.c baz.c
Path 'foo.c' is now a member of changelist 'issue1729'.
Path 'bar.c' is now a member of changelist 'issue1729'.
Path 'baz.c' is now a member of changelist 'issue1729'.

$ svn status
A      someotherfile.c
A      test/sometest.c

--- Changelist 'issue1729':
A      foo.c
A      bar.c
A      baz.c

$ svn commit --changelist issue1729 -m "Fixing Issue 1729."
Adding         bar.c
Adding         baz.c
Adding         foo.c
Transmitting file data ...
Committed revision 2.

$ svn status
A      someotherfile.c
A      test/sometest.c
</screen>
            <para>注意，只有在变更列表<replaceable>issue1729</replaceable>中的文件被提交了。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.checkout">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>checkout</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn checkout</refname>
            <refpurpose>从版本库取出一个工作拷贝。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn checkout URL[@REV]... [PATH]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>从版本库取出一个工作拷贝，如果省略<replaceable>PATH</replaceable>，URL的基名称会作为目标，如果给定多个URL，每一个都会检出到<replaceable>PATH</replaceable>的子目录，使用URL基名称的子目录名称。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>co</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>创建一个工作拷贝。</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--depth ARG
--force
--ignore-externals
--quiet (-q)
--revision (-r) REV
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>取出一个工作拷贝到<filename>mine</filename>目录：</para>
            <screen>
$ svn checkout file:///var/svn/repos/test mine
A  mine/a
A  mine/b
A  mine/c
A  mine/d
Checked out revision 20.
$ ls
mine
</screen>
            <para>检出两个目录到两个单独的工作拷贝：</para>
            <screen>
$ svn checkout file:///var/svn/repos/test  file:///var/svn/repos/quiz
A  test/a
A  test/b
A  test/c
A  test/d
Checked out revision 20.
A  quiz/l
A  quiz/m
Checked out revision 13.
$ ls
quiz  test
</screen>
            <para>检出两个目录到两个单独的工作拷贝，但是将两个目录都放到<filename>working-copies</filename>：</para>
            <screen>
$ svn checkout file:///var/svn/repos/test  file:///var/svn/repos/quiz working-copies
A  working-copies/test/a
A  working-copies/test/b
A  working-copies/test/c
A  working-copies/test/d
Checked out revision 20.
A  working-copies/quiz/l
A  working-copies/quiz/m
Checked out revision 13.
$ ls
working-copies
</screen>
            <para>如果你打断一个检出(或其它打断检出的事情，如连接失败。)，你可以使用同样的命令重新开始或者是更新不完整的工作拷贝：</para>
            <screen>
$ svn checkout file:///var/svn/repos/test mine
A  mine/a
A  mine/b
^C
svn: The operation was interrupted
svn: caught SIGINT

$ svn checkout file:///var/svn/repos/test mine
A  mine/c
^C
svn: The operation was interrupted
svn: caught SIGINT

$ svn update mine
A  mine/d
Updated to revision 20.
</screen>
            <para>If you wish to check out some revision other than the
            most recent one, you can do so by providing the
            <option>--revision</option> (<option>-r</option>) option
            to the <command>svn checkout</command> command:</para>
            <screen>
$ svn checkout -r 2 file:///var/svn/repos/test mine
A  mine/a
Checked out revision 2.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.cleanup">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>cleanup</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn cleanup</refname>
            <refpurpose>递归清理工作拷贝。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn cleanup [PATH...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>递归清理工作拷贝，删除未完成的工作拷贝锁定，并恢复未完成的操作。如果你得到一个<quote>工作拷贝已锁定</quote>的错误，运行这个命令可以删除无效的锁定，让你的工作拷贝再次回到可用的状态。</para>
            <para>如果，因为一些原因，运行外置的区别程序(例如，用户输入或是网络错误)有时候会导致一个<command>svn update</command>失败，使用<option>--diff3-cmd</option>选项可以完全清除你的外置区别程序所作的合并，你也可以使用<option>--config-dir</option>指定任何配置目录，但是你应该不会经常使用这些选项。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>否</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--diff3-cmd CMD
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para><command>svn cleanup</command>没有输出，没有太多的例子，如果你没有传递<replaceable>PATH</replaceable>，会使用<quote><filename>.</filename></quote>。</para>
            <screen>
$ svn cleanup

$ svn cleanup /var/svn/working-copy
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.commit">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>commit</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn commit</refname>
            <refpurpose>将修改从工作拷贝发送到版本库。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn commit [PATH...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>将修改从工作拷贝发送到版本库。如果你没有使用<option>--file</option>或<option>--message</option>提供一个提交日志信息，<command>svn</command>会启动你的编辑器来编写一个提交信息，见<xref linkend="svn.advanced.confarea.opts.config"/>的<literal>editor-cmd</literal>小节。</para>
            <para><command>svn commit</command>会返回所有找到的锁定令牌并释放所有提交<replaceable>PATHS</replaceable>的锁定，除非传递<option>--no-unlock</option>参数。</para>
            <tip>
              <para>如果你开始一个提交并且Subversion启动了你的编辑器来编辑提交信息，你仍可以退出而不会提交你的修改，如果你希望取消你的提交，只需要退出编辑器而不保存你的提交信息，Subversion会提示你是选择取消提交、空信息继续还是重新编辑信息。</para>
            </tip>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>ci(<quote>check in</quote>的缩写；不是<quote>checkout</quote>的缩写<quote>co</quote>。)</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--changelist ARG
--depth ARG
--editor-cmd ARG
--encoding ENC
--file (-F) FILE
--force-log
--keep-changelists
--message (-m) TEXT
--no-unlock
--quiet (-q)
--targets FILENAME
--with-revprop ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>使用命令行提交一个包含日志信息的文件修改，当前目录(<quote><filename>.</filename></quote>)是没有说明的目标路径：</para>
            <screen>
$ svn commit -m "added howto section."
Sending        a
Transmitting file data .
Committed revision 3.
</screen>
            <para>提交一个修改到<filename>foo.c</filename>(在命令行明确指明)，并且<literal>msg</literal>文件中保存了提交信息：</para>
            <screen>
$ svn commit -F msg foo.c
Sending        foo.c
Transmitting file data .
Committed revision 5.
</screen>
            <para>如果你希望使用在<option>--file</option>选项中使用在版本控制之下的文件作为参数，你需要使用<option>--force-log</option>选项：</para>
            <screen>
$ svn commit --file file_under_vc.txt foo.c
svn: The log message file is under version control
svn: Log message file is a versioned file; use '--force-log' to override

$ svn commit --force-log --file file_under_vc.txt foo.c
Sending        foo.c
Transmitting file data .
Committed revision 6.
</screen>
            <para>提交一个已经预定要删除的文件：</para>
            <screen>
$ svn commit -m "removed file 'c'."
Deleting       c

Committed revision 7.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.copy">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>copy</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn copy</refname>
            <refpurpose>拷贝工作拷贝的一个文件或目录到版本库。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn copy SRC[@REV]... DST</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>拷贝工作拷贝的一个文件或目录到版本库。<replaceable>SRC</replaceable>和<replaceable>DST</replaceable>既可以是工作拷贝(WC)路径也可以是URL：</para>
            <variablelist>
              <varlistentry>
                <term>WC → WC</term>
                <listitem>
                  <para>拷贝并且预定一个添加的项目(包含历史)。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>WC → URL</term>
                <listitem>
                  <para>将WC或URL的拷贝立即提交。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>URL → WC</term>
                <listitem>
                  <para>检出URL到WC，并且加入到添加计划。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>URL → URL</term>
                <listitem>
                  <para>完全的服务器端拷贝，通常用在分支和标签。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>When copying multiple sources, they will be added as
            children of <replaceable>DST</replaceable>, which must be
            a directory.</para>
            <para>If no peg revision (i.e.,
            <replaceable>@REV</replaceable>) is supplied, by default
            the <literal>BASE</literal> revision will be used for
            files copied from the working copy, while the
            <literal>HEAD</literal> revision will be used for files
            copied from a URL.</para>
            <note>
              <para>你只可以在单个版本库中拷贝文件，Subversion还不支持跨版本库的拷贝。</para>
            </note>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>cp</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>如果目标是WC路径，则是工作拷贝。</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>如果目标是版本库，或者需要查看修订版本号，则会访问版本库。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--editor-cmd EDITOR
--encoding ENC
--file (-F) FILE
--force-log
--message (-m) TEXT
--parents
--quiet (-q)
--revision (-r) REV
--with-revprop ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>拷贝工作拷贝的一个项目(只是预定要拷贝―在提交之前不会影响版本库)：</para>
            <screen>
$ svn copy foo.txt bar.txt
A         bar.txt
$ svn status
A  +   bar.txt
</screen>
            <para>拷贝工作拷贝的一个文件或目录到版本库：</para>
            <screen>
$ svn cp bat.c baz.c qux.c src
A         src/bat.c
A         src/baz.c
A         src/qux.c
</screen>
            <para>Copy revision 8 of <filename>bat.c</filename> into your
            working copy under a different name:</para>
            <screen>
$ svn cp bat.c ya-old-bat.c
A         ya-old-bat.c
</screen>
            <para>拷贝你的工作拷贝的一个项目到版本库的URL(直接的提交，所以需要提供一个提交信息)：</para>
            <screen>
$ svn copy near.txt file:///var/svn/repos/test/far-away.txt -m "Remote copy."

Committed revision 8.
</screen>
            <para>拷贝版本库的一个项目到你的工作拷贝(只是预定要拷贝―在提交之前不会影响版本库)：</para>
            <screen>
$ svn copy file:///var/svn/repos/test/far-away near-here
A         near-here
</screen>
            <tip>
              <para>这是恢复死掉文件的推荐方式！</para>
            </tip>
            <para>最后，是在URL之间拷贝：</para>
            <screen>
$ svn copy file:///var/svn/repos/test/far-away file:///var/svn/repos/test/over-there -m "remote copy."

Committed revision 9.
</screen>
            <screen>
$ svn copy file:///var/svn/repos/test/trunk \
    file:///var/svn/repos/test/tags/0.6.32-prerelease -m "tag tree"

Committed revision 12.
</screen>
            <tip>
              <para>这是在版本库里作<quote>标签</quote>最简单的方法―<command>svn copy</command>那个修订版本(通常是<literal>HEAD</literal>)到你的tags目录。</para>
            </tip>
            <para>不要担心忘记作标签―你可以在以后任何时候给一个旧版本作标签：</para>
            <screen>
$ svn copy -r 11 file:///var/svn/repos/test/trunk \
     file:///var/svn/repos/test/tags/0.6.32-prerelease -m "Forgot to tag at rev 11"

Committed revision 13.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.delete">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>delete</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn delete</refname>
            <refpurpose>从工作拷贝或版本库删除一个项目。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn delete PATH...</programlisting>
            <programlisting>svn delete URL...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para><replaceable>PATH</replaceable>指定的项目会在下次提交删除，除非给定<option>--keep-local</option>选项，否则文件(和没有提交的目录)会立即从版本库删除，这个命令不会删除任何未版本化或已经修改的项目；使用<option>--force</option>选项可以覆盖这种行为方式。</para>
            <para>URL指定的项目会在直接提交中从版本库删除，多个URL的提交是原子操作。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>如果操作对象是文件则是工作拷贝变化；如果对象是URL则会影响版本库。</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>对URL操作时访问</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--editor-cmd EDITOR
--encoding ENC
--file (-F) FILE
--force
--force-log
--keep-local
--message (-m) TEXT
--quiet (-q)
--targets FILENAME
--with-revprop ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>使用<command>svn</command>从工作拷贝删除文件只是预定要删除，当你提交，文件才会从版本库删除。</para>
            <screen>
$ svn delete myfile
D         myfile

$ svn commit -m "Deleted file 'myfile'."
Deleting       myfile
Transmitting file data .
Committed revision 14.
</screen>
            <para>然而直接删除一个URL，你需要提供一个日志信息：</para>
            <screen>
$ svn delete -m "Deleting file 'yourfile'" file:///var/svn/repos/test/yourfile

Committed revision 15.
</screen>
            <para>如下是强制删除本地已修改文件的例子：</para>
            <screen>
$ svn delete over-there 
svn: Attempting restricted operation for modified resource
svn: Use --force to override this restriction
svn: 'over-there' has local modifications

$ svn delete --force over-there 
D         over-there
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.diff">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>diff</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn diff</refname>
            <refpurpose>比较两条路径的区别。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>diff [-c M | -r N[:M]] [TARGET[@REV]...]</programlisting>
            <programlisting>diff [-r N[:M]] --old=OLD-TGT[@OLDREV] [--new=NEW-TGT[@NEWREV]] [PATH...]</programlisting>
            <programlisting>diff OLD-URL[@OLDREV] NEW-URL[@NEWREV]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <itemizedlist>
              <listitem>
                <para>显示两条路径的区别，你可以通过下面的方式使用<command>svn diff</command>：</para>
              </listitem>
              <listitem>
                <para>运行<command>svn diff</command>以标准差别格式查看本地工作拷贝修改的内容。</para>
              </listitem>
              <listitem>
                <para>显示<replaceable>TARGET</replaceable>在<replaceable>REV</replaceable>的样子时两个修订版本之间所作的修改，<replaceable>TARGET</replaceable>可以是任何工作拷贝路径或任何<replaceable>URL</replaceable>，如果<replaceable>TARGET</replaceable>是工作拷贝路径，则<replaceable>N</replaceable>缺省是<literal>BASE</literal>，而<replaceable>M</replaceable>是工作拷贝；如果是<replaceable>URL</replaceable>，则必须指定<replaceable>N</replaceable>，而<replaceable>M</replaceable>缺省是<literal>HEAD</literal>。<quote>-c M</quote>选项与<quote>-r N:M</quote>等价，其中<literal>N = M-1</literal>。使用<quote>-c -M</quote>则相反：<quote>-r M:N</quote>的意思是<literal>N = M-1</literal>。</para>
              </listitem>
              <listitem>
                <para>显示在<replaceable>OLDREV</replaceable>的<replaceable>OLD-TGT</replaceable>和<replaceable>NEWREV</replaceable>的<replaceable>NEW-TGT</replaceable>之间的区别。如果提供<replaceable>PATH</replaceable>，则与<replaceable>OLD-TGT</replaceable>和<replaceable>NEW-TGT</replaceable>关联，将输出限制在那些路径。<replaceable>OLD-TGT</replaceable>和<replaceable>NEW-TGT</replaceable>可能是工作拷贝路经或<replaceable>URL[@REV]</replaceable>。如果没有指定，<replaceable>NEW-TGT</replaceable>缺省是<replaceable>OLD-TGT</replaceable>。<quote>-r N</quote>设置OLDREV缺省为N，而-r N:M设置<replaceable>OLDREV</replaceable>缺省为<replaceable>N</replaceable>，而<replaceable>NEWREV</replaceable>缺省为<replaceable>M</replaceable>。</para>
              </listitem>
            </itemizedlist>
            <para><command>diff OLD-URL[@OLDREV] NEW-URL[@NEWREV]</command>是<command>svn diff --old=OLD-URL[@OLDREV] --new=NEW-URL[@NEWREV].</command>的简写。</para>
            <para><command>svn diff -r N:M URL</command>是<command>svn diff -r N:M --old=URL --new=URL</command>的简写。</para>
            <para><command>svn diff [-r N[:M]] URL1[@N] URL2[@M]</command>是 <command>svn diff [-r N[:M]] --old=URL1 --new=URL2</command>的简写。</para>
            <para><replaceable>TARGET</replaceable>是一个URL，然后可以使用前面提到的<option>--revision</option>或<quote>@</quote>符号来指定N和M。</para>
            <para>If <replaceable>TARGET</replaceable> is a working copy
            path, the default behavior (when no
            <option>--revision</option> option is provided) is to
            display the differences between the base and working
            copies of <replaceable>TARGET</replaceable>.  If a
            <option>--revision</option> option is specified in this
            scenario, though, it means:</para>
            <variablelist>
              <varlistentry>
                <term>
                  <option>--revision N:M</option>
                </term>
                <listitem>
                  <para>服务器比较<replaceable>TARGET@N</replaceable>和<replaceable>TARGET<replaceable>TARGET@M</replaceable>。</replaceable></para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <option>--revision N</option>
                </term>
                <listitem>
                  <para>客户端比较<replaceable>TARGET@N</replaceable>和工作拷贝。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>如果使用其他语法，服务器会比较<replaceable>URL1</replaceable>和<replaceable>URL2</replaceable>各自的<replaceable>N</replaceable>和<replaceable>M</replaceable>。如果省掉<replaceable>N</replaceable>或<replaceable>M</replaceable>，会假定为<literal>HEAD</literal>。</para>
            <para>缺省情况下，<command>svn diff</command>忽略文件的祖先，只会比较两个文件的内容。如果你使用<option>--notice-ancestry</option>，比较修订版本(也就是，当你运行<command>svn diff</command>比较两个内容相同，但祖先历史不同的对象会看到所有的内容被删除又再次添加)时就会考虑路径的祖先。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>di</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>获得工作拷贝非<literal>BASE</literal>修订版本的区别时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) ARG
--change (-c) ARG
--old ARG
--new ARG
--depth ARG
--diff-cmd CMD
--extensions (-x) "ARGS"
--no-diff-deleted
--notice-ancestry
--summarize
--force
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
--changelist ARG
--xml
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>比较<literal>BASE</literal>和你的工作拷贝(<command>svn diff</command>最经常的用法)：</para>
            <screen>
$ svn diff COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 4404)
+++ COMMITTERS	(working copy)
</screen>
            <para>查看文件<literal>COMMITTERS</literal>在修订版本9115修改的内容：</para>
            <screen>
$ svn diff -c 9115 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3900)
+++ COMMITTERS	(working copy)
</screen>
            <para>察看你的工作拷贝对旧的修订版本的修改：</para>
            <screen>
$ svn diff -r 3900 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3900)
+++ COMMITTERS	(working copy)
</screen>
            <para>使用<quote>@</quote>语法与修订版本3000和35000比较：</para>
            <screen>
$ svn diff http://svn.collab.net/repos/svn/trunk/COMMITTERS@3000 \
    http://svn.collab.net/repos/svn/trunk/COMMITTERS@3500
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
…
</screen>
            <para>使用范围符号来比较修订版本3000和3500(在这种情况下只能传递一个URL)：</para>
            <screen>
$ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk/COMMITTERS
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
</screen>
            <para>使用范围符号比较修订版本3000和3500<filename>trunk</filename>中的所有文件：</para>
            <screen>
$ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk
          </screen>
            <para>使用范围符号比较修订版本3000和3500<filename>trunk</filename>中的三个文件：</para>
            <screen>
$ svn diff -r 3000:3500 --old http://svn.collab.net/repos/svn/trunk COMMITTERS README HACKING
          </screen>
            <para>如果你有工作拷贝，你不必输入这么长的URL：</para>
            <screen>
$ svn diff -r 3000:3500 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
</screen>
            <para>使用<option>--diff-cmd</option><replaceable>CMD</replaceable><option>-x</option>来指定外部区别程序</para>
            <screen>
$ svn diff --diff-cmd /usr/bin/diff -x "-i -b" COMMITTERS 
Index: COMMITTERS
===================================================================
0a1,2
&gt; This is a test
&gt; 
</screen>
            <para>Lastly, you can use the <option>--xml</option> option
            along with the <option>--summarize</option> option to view
            XML describing the changes that occurred between
            revisions, but not the contents of the diff itself:</para>
            <screen>
$ svn diff --summarize --xml http://svn.red-bean.com/repos/test@r2 \
           http://svn.red-bean.com/repos/test
&lt;?xml version="1.0"?&gt;
&lt;diff&gt;
&lt;paths&gt;
&lt;path
   props="none"
   kind="file"
   item="modified"&amp;gt;http://svn.red-bean.com/repos/test/sandwich.txt&amp;lt;/path&amp;gt;
&lt;path
   props="none"
   kind="file"
   item="deleted"&amp;gt;http://svn.red-bean.com/repos/test/burrito.txt&amp;lt;/path&amp;gt;
&lt;path
   props="none"
   kind="dir"
   item="added"&amp;gt;http://svn.red-bean.com/repos/test/snacks&amp;lt;/path&amp;gt;
&lt;/paths&gt;
&lt;/diff&gt;
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.export">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>export</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn export</refname>
            <refpurpose>导出一个干净的目录树。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn export [-r REV] URL[@PEGREV] [PATH]</programlisting>
            <programlisting>svn export [-r REV] PATH1[@PEGREV] [PATH2]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>第一种从版本库导出干净工作目录树的形式是指定URL，如果指定了修订版本<replaceable>REV</replaceable>，会导出相应的版本，如果没有指定修订版本，则会导出<literal>HEAD</literal>，导出到<replaceable>PATH</replaceable>。如果省略<replaceable>PATH</replaceable>，<replaceable>URL</replaceable>的最后一部分会作为本地目录的名字。</para>
            <para>从工作拷贝导出干净目录树的第二种形式是指定<replaceable>PATH1</replaceable>到<replaceable>PATH2</replaceable>，所有的本地修改将会保留，但是不再版本控制下的文件不会拷贝。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>本地磁盘</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有当从URL导出时会访问</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--depth ARG
--force
--ignore-externals
--native-eol EOL
--quiet (-q)
--revision (-r) REV
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>从你的工作拷贝导出(不会打印每一个文件和目录)：</para>
            <screen>
$ svn export a-wc my-export
Export complete.
</screen>
            <para>从版本库导出目录(打印所有的文件和目录)：</para>
            <screen>
$ svn export file:///var/svn/repos my-export
A  my-export/test
A  my-export/quiz
…
Exported revision 15.
</screen>
            <para>当使用操作系统特定的分发版本，使用特定的EOL字符作为行结束符号导出一棵树会非常有用。<option>--native-eol</option>选项会这样做，但是只会影响拥有<literal>svn:eol-style = native</literal>属性的文件。举个例子，导出一棵使用CRLF作为行结束的树(可能是为了做一个Windows的<literal>.zip</literal>文件分发版本)：</para>
            <screen>
$ svn export file:///var/svn/repos my-export --native-eol CRLF
A  my-export/test
A  my-export/quiz
…
Exported revision 15.
</screen>
            <para>你可以为<option>--native-eol</option>选项指定<literal>LR</literal>、<literal>CR</literal>或<literal>CRLF</literal>作为行结束符。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.help">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>help</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn help</refname>
            <refpurpose>求助！</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn help [SUBCOMMAND...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>当手边没有这本书时，这是你使用Subversion最好的朋友！</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
            <para>使用<option>-?</option>、<option>-h</option>和<option>--help</option>选项与使用<command>help</command>子命令效果相同。</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>否</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.import">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>import</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn import</refname>
            <refpurpose>递归提交一个路径的拷贝到版本库。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn import [PATH] URL</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>递归提交一个<replaceable>PATH</replaceable>到<replaceable>URL</replaceable>。如果省略<replaceable>PATH</replaceable>，默认是<quote><filename>.</filename></quote>。版本库中对应的父目录必须已经创建。未版本化的文件和管道会被忽略，即使设置了<option>--force</option>选项。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--auto-props
--depth ARG
--editor-cmd EDITOR
--encoding ENC
--file (-F) FILE
--force
--force-log
--message (-m) TEXT
--no-auto-props
--no-ignore
--quiet (-q)
--with-revprop ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这将本地目录<filename>myproj</filename>导入到版本库的<filename>trunk/misc</filename>，<filename>trunk/misc</filename>在导入之前不需要存在―<command>svn import</command>会递归的为你创建目录。</para>
            <screen>
$ svn import -m "New import" myproj http://svn.red-bean.com/repos/trunk/misc
Adding         myproj/sample.txt
…
Transmitting file data .........
Committed revision 16.
</screen>
            <para>需要知道这样<emphasis>不</emphasis>会在版本库创建目录<filename>myproj</filename>，如果你希望这样，请在URL后添加<filename>myproj</filename>：</para>
            <screen>
$ svn import -m "New import" myproj http://svn.red-bean.com/repos/trunk/misc/myproj
Adding         myproj/sample.txt
…
Transmitting file data .........
Committed revision 16.
</screen>
            <para>在导入数据之后，你会发现原先的目录树<emphasis>并没有</emphasis>纳入版本控制，为了开始工作，你还是要运行<command>svn checkout</command>得到一个干净的目录树工作拷贝。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.info">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>info</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn info</refname>
            <refpurpose>显示本地或远程条目的信息。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn info [TARGET[@REV]...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印你的工作拷贝路径和URL的信息，包括：</para>
            <itemizedlist>
              <listitem>
                <para>路经</para>
              </listitem>
              <listitem>
                <para>名称</para>
              </listitem>
              <listitem>
                <para>URL</para>
              </listitem>
              <listitem>
                <para>版本库的根</para>
              </listitem>
              <listitem>
                <para>版本库的UUID</para>
              </listitem>
              <listitem>
                <para>Revision</para>
              </listitem>
              <listitem>
                <para>节点类型</para>
              </listitem>
              <listitem>
                <para>最后修改的作者</para>
              </listitem>
              <listitem>
                <para>最后修改的修订版本</para>
              </listitem>
              <listitem>
                <para>最后修改的日期</para>
              </listitem>
              <listitem>
                <para>锁定令牌</para>
              </listitem>
              <listitem>
                <para>锁定拥有者</para>
              </listitem>
              <listitem>
                <para>锁定创建时间(date)</para>
              </listitem>
              <listitem>
                <para>Lock失效时间(date)</para>
              </listitem>
            </itemizedlist>
            <para>Additional kinds of information available only for working copy paths are:</para>
            <itemizedlist>
              <listitem>
                <para>Schedule</para>
              </listitem>
              <listitem>
                <para>拷贝自的URL</para>
              </listitem>
              <listitem>
                <para>拷贝自的修订版本</para>
              </listitem>
              <listitem>
                <para>数据最后更新</para>
              </listitem>
              <listitem>
                <para>属性最后更新</para>
              </listitem>
              <listitem>
                <para>Checksum</para>
              </listitem>
              <listitem>
                <para>Conflict previous base file</para>
              </listitem>
              <listitem>
                <para>Conflict previous working file</para>
              </listitem>
              <listitem>
                <para>Conflict current base file</para>
              </listitem>
              <listitem>
                <para>Conflict properties file</para>
              </listitem>
            </itemizedlist>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>对URL操作时访问</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--changelist ARG
--depth ARG
--incremental
--recursive (-R)
--revision (-r) REV
--targets FILENAME
--xml
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para><command>svn info</command>会展示工作拷贝所有项目的所有有用信息，它会显示文件的信息：</para>
            <screen>
$ svn info foo.c
Path: foo.c
Name: foo.c
URL: http://svn.red-bean.com/repos/test/foo.c
Repository Root: http://svn.red-bean.com/repos/test
Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25
Revision: 4417
Node Kind: file
Schedule: normal
Last Changed Author: sally
Last Changed Rev: 20
Last Changed Date: 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003)
Text Last Updated: 2003-01-16 21:18:16 -0600 (Thu, 16 Jan 2003)
Properties Last Updated: 2003-01-13 21:50:19 -0600 (Mon, 13 Jan 2003)
Checksum: /3L38YwzhT93BWvgpdF6Zw==
</screen>
            <para>它也会展示目录的信息：</para>
            <screen>
$ svn info vendors
Path: vendors
URL: http://svn.red-bean.com/repos/test/vendors
Repository Root: http://svn.red-bean.com/repos/test
Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25
Revision: 19
Node Kind: directory
Schedule: normal
Last Changed Author: harry
Last Changed Rev: 19
Last Changed Date: 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003)
</screen>
            <para><command>svn info</command>也可以针对URL操作(另外，可以注意一下例子中的<filename>readme.doc</filename>文件已经被锁定，所以也会显示锁定信息)：</para>
            <screen>
$ svn info http://svn.red-bean.com/repos/test/readme.doc
Path: readme.doc
Name: readme.doc
URL: http://svn.red-bean.com/repos/test/readme.doc
Repository Root: http://svn.red-bean.com/repos/test
Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25
Revision: 1
Node Kind: file
Schedule: normal
Last Changed Author: sally
Last Changed Rev: 42
Last Changed Date: 2003-01-14 23:21:19 -0600 (Tue, 14 Jan 2003)
Text Last Updated: 2003-01-14 23:21:19 -0600 (Tue, 14 Jan 2003)
Checksum: d41d8cd98f00b204e9800998ecf8427e
Lock Token: opaquelocktoken:14011d4b-54fb-0310-8541-dbd16bd471b2
Lock Owner: harry
Lock Created: 2003-01-15 17:35:12 -0600 (Wed, 15 Jan 2003)
</screen>
            <para>Lastly, <command>svn info</command> output is
             available in XML format by passing
             the<option>--xml</option> option:</para>
            <screen>
$ svn info --xml http://svn.red-bean.com/repos/test
&lt;?xml version="1.0"?&gt;
&lt;info&gt;
&lt;entry
   kind="dir"
   path="."
   revision="1"&gt;
&lt;url&gt;http://svn.red-bean.com/repos/test&lt;/url&gt;
&lt;repository&gt;
&lt;root&gt;http://svn.red-bean.com/repos/test&lt;/root&gt;
&lt;uuid&gt;5e7d134a-54fb-0310-bd04-b611643e5c25&lt;/uuid&gt;
&lt;/repository&gt;
&lt;wc-info&gt;
&lt;schedule&gt;normal&lt;/schedule&gt;
&lt;depth&gt;infinity&lt;/depth&gt;
&lt;/wc-info&gt;
&lt;commit
   revision="1"&gt;
&lt;author&gt;sally&lt;/author&gt;
&lt;date&gt;2003-01-15T23:35:12.847647Z&lt;/date&gt;
&lt;/commit&gt;
&lt;/entry&gt;
&lt;/info&gt;
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.list">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>list</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn list</refname>
            <refpurpose>列出版本库目录的条目。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn list [TARGET[@REV]...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>列出每一个<replaceable>TARGET</replaceable>文件和<replaceable>TARGET</replaceable>目录的内容，如果<replaceable>TARGET</replaceable>是工作拷贝路径，会使用对应的版本库URL。</para>
            <para>缺省的<replaceable>TARGET</replaceable>是<quote><filename>.</filename></quote>，意味着当前工作拷贝的版本库URL。</para>
            <para>如果一个客户端连接到<command>svnserve</command>进程，如下事情会发生：</para>
            <itemizedlist>
              <listitem>
                <para>最后一次提交的修订版本号</para>
              </listitem>
              <listitem>
                <para>最后一次提交的作者</para>
              </listitem>
              <listitem>
                <para>如果锁定，字符为<quote>O</quote>(更多细节见<xref linkend="svn.ref.svn.c.info"/>)</para>
              </listitem>
              <listitem>
                <para>大小(单位字节)</para>
              </listitem>
              <listitem>
                <para>最后提交的日期时间</para>
              </listitem>
            </itemizedlist>
            <para>使用选项<option>--xml</option>，输出是XML格式(如果没有指定<option>--incremental</option>，会包括一个头和一个围绕的元素)。会展示所有的信息；不接受<option>--verbose</option>选项。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>ls</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--depth ARG
--incremental
--recursive (-R)
--revision (-r) REV
--verbose (-v)
--xml
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>如果你希望在没有下载工作拷贝时查看版本库有哪些文件，<command>svn list</command>会非常有用：</para>
            <screen>
$ svn list http://svn.red-bean.com/repos/test/support
README.txt
INSTALL
examples/
…
</screen>
            <para>你也可以传递<option>--verbose</option>选项来得到额外信息，非常类似UNIX的<command>ls -l</command>命令：</para>
            <screen>
$ svn list --verbose file:///var/svn/repos
     16 sally         28361 Jan 16 23:18 README.txt
     27 sally             0 Jan 18 15:27 INSTALL
     24 harry               Jan 18 11:27 examples/
</screen>
            <para>You can also get <command>svn list</command> output in
            XML format with the <option>--xml</option> option:</para>
            <screen>
$ svn list --xml http://svn.red-bean.com/repos/test
&lt;?xml version="1.0"?&gt;
&lt;lists&gt;
&lt;list
   path="http://svn.red-bean.com/repos/test"&gt;
&lt;entry
   kind="dir"&gt;
&lt;name&gt;examples&lt;/name&gt;
&lt;size&gt;0&lt;/size&gt;
&lt;commit
   revision="24"&gt;
&lt;author&gt;harry&lt;/author&gt;
&lt;date&gt;2008-01-18T06:35:53.048870Z&lt;/date&gt;
&lt;/commit&gt;
&lt;/entry&gt;
...
&lt;/list&gt;
&lt;/lists&gt;
</screen>
            <para>更多细节见<xref linkend="svn.tour.history.browsing.list"/>。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.lock">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>lock</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn lock</refname>
            <refpurpose>锁定版本库的工作拷贝路径或URL，所以没有其他用户可以提交这些文件的修改。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>Synopsis</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>svn lock TARGET...</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝，版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--encoding ENC
--file (-F) FILE
--force
--force-log
--message (-m) TEXT
--targets FILENAME
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>在工作拷贝锁定两个文件：</para>
            <screen>
$ svn lock tree.jpg house.jpg
'tree.jpg' locked by user 'harry'.
'house.jpg' locked by user 'harry'.
</screen>
            <para>锁定工作拷贝的一个被其它用户锁定的文件：</para>
            <screen>
$ svn lock tree.jpg
svn: warning: Path '/tree.jpg is already locked by user 'sally in \
     filesystem '/var/svn/repos/db'

$ svn lock --force tree.jpg
'tree.jpg' locked by user 'harry'.
</screen>
            <para>没有工作拷贝的情况下锁定文件：</para>
            <screen>
$ svn lock http://svn.red-bean.com/repos/test/tree.jpg
'tree.jpg' locked by user 'harry'.
</screen>
            <para>更多细节见<xref linkend="svn.advanced.locking"/>。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.log">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>log</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn log</refname>
            <refpurpose>显示提交日志信息。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn log [PATH]</programlisting>
            <programlisting>svn log URL[@REV] [PATH...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>缺省目标是你的当前目录的路径，如果没有提供参数，<command>svn log</command>会显示当前目录下的所有文件和目录的日志信息，你可以通过指定路径来精炼结果，一个或多个修订版本，或者是任何两个的组合。对于本地路径的缺省修订版本范围<literal>BASE:1</literal>。</para>
            <para>如果你只是指定一个URL，就会打印这个URL上所有的日志信息，如果添加部分路径，只有这条路径下的URL信息会被打印，URL缺省的修订版本范围是<literal>HEAD:1</literal>。</para>
            <para><command>svn log</command>使用<option>--verbose</option>选项也会打印所有影响路径的日志信息，使用<option>--quiet</option>选项不会打印日志信息正文本身(这与<option>--verbose</option>协调一致)。</para>
            <para>每个日志信息只会打印一次，即使是那些明确请求不止一次的路径，日志会跟随在拷贝过程中，使用<option>--stop-on-copy</option>可以关闭这个特性，可以用来监测分支点。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--change (-c) ARG
--incremental
--limit (-l) NUM
--quiet (-q)
--revision (-r) REV
--stop-on-copy
--targets FILENAME
--use-merge-history (-g)
--verbose (-v)
--with-all-revprops
--with-revprop ARG
--xml
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>你可以在顶级目录运行<command>svn log</command>看到工作拷贝中所有修改的路径的日志信息：</para>
            <screen>
$ svn log
------------------------------------------------------------------------
r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Tweak.
------------------------------------------------------------------------
r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines
…
</screen>
            <para>检验一个特定文件所有的日志信息：</para>
            <screen>
$ svn log foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
…
</screen>
            <para>如果你手边没有工作拷贝，你可以查看一个URL的日志：</para>
            <screen>
$ svn log http://svn.red-bean.com/repos/test/foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
…
</screen>
            <para>如果你希望查看某个URL下面不同的多个路径，你可以使用<literal>URL [PATH...]</literal>语法。</para>
            <screen>
$ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line

Added new file bar.c
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
…
</screen>
            <para>The <option>--verbose</option> option causes
            <command>svn log</command> to include information about
            the paths that were changed in each displayed revision.
            These paths appear, one path per line of output, with
            action codes that indicate what type of change was made to
            the path.</para>
            <screen>
$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line
Changed paths:
   M /foo.c

Added defines.
------------------------------------------------------------------------
r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line
Changed paths:
   A /bar.c

Added new file bar.c
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
…
</screen>
            <para><command>svn log</command> uses just a handful of action codes,
            and they are similar to the
            ones the <command>svn update</command>
            command uses:</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>A</literal>
                </term>
                <listitem>
                  <para>The item was added.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>D</literal>
                </term>
                <listitem>
                  <para>The item was deleted.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>M</literal>
                </term>
                <listitem>
                  <para>条目属性改变了，注意开头的空格。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>R</literal>
                </term>
                <listitem>
                  <para>The item was replaced by a different one
                at the same location.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>In addition to the action codes which precede the
            changed paths, <command>svn log</command> with the <option>--verbose</option> option will
            note whether a path was added or replaced as the result of a copy
            operation.  It does so by printing <literal>(from
            <replaceable>COPY-FROM-PATH</replaceable>:<replaceable>COPY-FROM-REV</replaceable>)</literal>
            after such paths.</para>
            <para>当你想连接多个对日志命令的调用结果，你会希望使用<option>--incremental</option>选项。<command>svn log</command>通常会在日志信息的开头和每一小段间打印一行虚线，如果你对一段修订版本运行<command>svn log</command>，你会得到下面的结果：</para>
            <screen>
$ svn log -r 14:15
------------------------------------------------------------------------
r14 | ...

------------------------------------------------------------------------
r15 | ...

------------------------------------------------------------------------
</screen>
            <para>然而，如果你希望收集两个不连续的日志信息到一个文件，你会这样做：</para>
            <screen>
$ svn log -r 14 &gt; mylog
$ svn log -r 19 &gt;&gt; mylog
$ svn log -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | ...

------------------------------------------------------------------------
------------------------------------------------------------------------
r19 | ...

------------------------------------------------------------------------
------------------------------------------------------------------------
r27 | ...

------------------------------------------------------------------------
</screen>
            <para>你可以使用incremental选项来避免两行虚线带来的混乱：</para>
            <screen>
$ svn log --incremental -r 14 &gt; mylog
$ svn log --incremental -r 19 &gt;&gt; mylog
$ svn log --incremental -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | ...

------------------------------------------------------------------------
r19 | ...

------------------------------------------------------------------------
r27 | ...
</screen>
            <para><option>--incremental</option>选项为<option>--xml</option>提供了一个相似的输出控制。</para>
            <screen>
$ svn log --xml --incremental -r 1 sandwich.txt
&lt;logentry
   revision="1"&gt;
&lt;author&gt;harry&lt;/author&gt;
&lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt;
&lt;msg&gt;Initial Import.&lt;/msg&gt;
&lt;/logentry&gt;
</screen>
            <tip>
              <para>如果你在特定路径和修订版本运行<command>svn log</command>，输出结果为空</para>
              <screen>
$ svn log -r 20 http://svn.red-bean.com/untouched.txt
------------------------------------------------------------------------
</screen>
              <para>这只意味着这条路径在那个修订版本没有修改，如果从版本库的顶级目录运行这个命令，或者是你知道那个修订版本修改了那个文件，你可以明确的指定它：</para>
              <screen>
$ svn log -r 20 touched.txt 
------------------------------------------------------------------------
r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Made a change.
------------------------------------------------------------------------
</screen>
            </tip>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.merge">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>merge</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn merge</refname>
            <refpurpose>应用两组源文件的差别到工作拷贝路径。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn merge sourceURL1[@N] sourceURL2[@M] [WCPATH]</programlisting>
            <programlisting>svn merge sourceWCPATH1@N sourceWCPATH2@M [WCPATH]</programlisting>
            <programlisting>svn merge [[-c M]... | [-r N:M]...] [SOURCE[@REV] [WCPATH]]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>第一种形式里，源路径(第一种是URL，第二种是工作拷贝路径)用修订版本号<literal>N</literal>和<literal>M</literal>指定，这是要比较的两组源文件，如果省略修订版本号，缺省是<literal>HEAD</literal>。</para>
            <para>In the second form, the URLs corresponding to the
            source working copy paths define the sources to be
            compared.  The revisions must be specified.</para>
            <para>在第三种形式里，<replaceable>SOURCE</replaceable>可以是URL或工作拷贝路径(会使用对应的URL)，如果没有指定，<replaceable>SOURCE</replaceable>将会与<replaceable>WCPATH</replaceable>相同。修订版本<replaceable>REV</replaceable>的<replaceable>SOURCE</replaceable>会比较存在的<replaceable>N</replaceable>和<replaceable>。如果没有指定<replaceable>REV</replaceable>，则假定是<literal>HEAD</literal>。</replaceable></para>
            <para><literal>-c M</literal> is equivalent to <literal>-r
            &lt;M-1&gt;:M</literal>, and <literal>-c -M</literal> does
            the reverse: <literal>-r M:&lt;M-1&gt;</literal>.  If no
            revision ranges are specified, the default range of
            <literal>1:HEAD</literal> is used.  Multiple
            <literal>-c</literal> and/or <literal>-r</literal>
            instances may be specified, and mixing of forward and
            reverse ranges is allowed―the ranges are internally
            compacted to their minimum representation before merging
            begins (which may result in no-op).</para>
            <para><replaceable>WCPATH</replaceable>是接收变化的工作拷贝路径，如果省略<replaceable>WCPATH</replaceable>，会假定缺省值<quote><filename>.</filename></quote>，除非源有相同基本名称与<quote><filename>.</filename></quote>中的某一文件名字匹配：在这种情况下，区别会应用到那个文件。</para>
            <para>如果两个源是祖先相关的，Subversion只会在合并操作时内部跟踪元数据―如果第一个源是第二个的祖先或相反，这是使用第三种形式时对这种形式的担保。不像<command>svn diff</command>，合并操作在执行时会考虑文件的祖先，当你从一个分支合并到另一个分支，而这两个分支有各自重命名的文件时，这一点会非常重要。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URL操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--accept ARG
--change (-c) REV
--depth ARG
--diff3-cmd CMD
--dry-run
--extensions (-x) ARG
--force
--ignore-ancestry
--quiet (-q)
--record-only
--reintegrate
--revision (-r) REV
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>将一个分支合并回主干(假定你有一份主干的最新工作拷贝)：</para>
            <screen>
$ svn merge --reintegrate http://svn.example.com/repos/calc/branches/my-calc-branch
--- Merging differences between repository URLs into '.':
U    button.c
U    integer.c
U    Makefile
 U   .

$ # build, test, verify, ...

$ svn commit -m "Merge my-calc-branch back into trunk!"
Sending        .
Sending        button.c
Sending        integer.c
Sending        Makefile
Transmitting file data ..
Committed revision 391.
</screen>
            <para>合并一个单独文件的修改：</para>
            <screen>
$ cd myproj
$ svn merge -r 30:31 thhgttg.txt 
U  thhgttg.txt
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.mergeinfo">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>mergeinfo</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn mergeinfo</refname>
            <refpurpose>查询合并相关信息，见<xref linkend="svn.branchmerge.basicmerging.mergeinfo"/>。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn mergeinfo [TARGET[@REV]...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Query information related to merges (or potential
            merges) between <replaceable>SOURCE-URL</replaceable> and
            <replaceable>TARGET</replaceable>.  If
            the <option>--show-revs</option> option is not provided,
            display revisions which have been merged
            from <replaceable>SOURCE-URL</replaceable>
            to <replaceable>TARGET</replaceable>.  Otherwise, display
            either <literal>merged</literal>
            or <literal>eligible</literal> revisions as specified by
            the <option>--show-revs</option> option.</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--show-ids
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>Find out which changesets your trunk directory has
            already received as well as what changesets it's still
            eligible to receive:</para>
            <screen>
$ svn mergeinfo branches/test
Path: branches/test
  Source path: /trunk
    Merged ranges: r2:13
    Eligible ranges: r13:15
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.mkdir">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>mkdir</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn mkdir</refname>
            <refpurpose>创建一个纳入版本控制的新目录。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn mkdir PATH...</programlisting>
            <programlisting>svn mkdir URL...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>创建一个目录，名字是提供的<replaceable>PATH</replaceable>或者URL的最后一部分，工作拷贝<replaceable>PATH</replaceable>指定的目录会预定要添加，而通过URL指定的目录会作为一次立即提交在版本库建立。多个目录URL的提交是原子操作，在两种情况下，除非使用<option>--parents</option>选项，中介目录必须已经存在。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；如果是对URL操作则会影响版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URl操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--editor-cmd EDITOR
--encoding ENC
--file (-F) FILE
--force-log
--message (-m) TEXT
--parents
--quiet (-q)
--with-revprop ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>在工作拷贝创建一个目录：</para>
            <screen>
$ svn mkdir newdir
A         newdir
</screen>
            <para>在版本库创建一个目录(立即提交，所以需要日志信息)：</para>
            <screen>
$ svn mkdir -m "Making a new dir." http://svn.red-bean.com/repos/newdir

Committed revision 26.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.move">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>move</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn move</refname>
            <refpurpose>移动一个文件或目录。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn move SRC... DST</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>这个命令移动文件或目录到你的工作拷贝或者是版本库。</para>
            <tip>
              <para>这个命令同<command>svn copy</command>加一个<command>svn delete</command>等同。</para>
            </tip>
            <para>When moving multiple sources, they will be added as
            children of <replaceable>DST</replaceable>, which must be
            a directory.</para>
            <note>
              <para>Subversion不支持在工作拷贝和URL之间拷贝，此外，你只可以一个版本库内移动文件―Subversion不支持跨版本库的移动。</para>
            </note>
            <variablelist>
              <varlistentry>
                <term>WC → WC</term>
                <listitem>
                  <para>移动和预订一个文件或目录将要添加(包含历史)。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>URL → URL</term>
                <listitem>
                  <para>完全服务器端的重命名。</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；如果是对URL操作则会影响版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URl操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--editor-cmd EDITOR
--encoding ENC
--file (-F) FILE
--force
--force-log
--message (-m) TEXT
--parents
--quiet (-q)
--revision (-r) REV
--with-revprop ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>移动工作拷bede一个文件：</para>
            <screen>
$ svn move foo.c bar.c
A         bar.c
D         foo.c
</screen>
            <para>移动工作拷贝的一些文件到子目录：</para>
            <screen>
$ svn move baz.c bat.c qux.c src
A         src/baz.c
D         baz.c
A         src/bat.c
D         bat.c
A         src/qux.c
D         qux.c
</screen>
            <para>移动版本库中的一个文件(一个立即提交，所以需要提交信息)：</para>
            <screen>
$ svn move -m "Move a file" http://svn.red-bean.com/repos/foo.c \
                            http://svn.red-bean.com/repos/bar.c

Committed revision 27.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.propdel">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>propdel</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn propdel</refname>
            <refpurpose>删除一个项目的一个属性。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn propdel PROPNAME [PATH...]</programlisting>
            <programlisting>svn propdel PROPNAME --revprop -r REV [TARGET]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>这会删除文件、目录或修订版本的属性。第一种形式是在工作拷贝删除版本化属性，第二种是在一个版本库修订版本中删除未版本化的属性(<replaceable>TARGET</replaceable>只是用来确定访问哪个版本库)。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；对URL操作时是版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URl操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--changelist ARG
--depth ARG
--quiet (-q)
--recursive (-R)
--revision (-r) REV
--revprop
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>删除你的工作拷贝中一个文件的一个属性</para>
            <screen>
$ svn propdel svn:mime-type  some-script
property 'svn:mime-type' deleted from 'some-script'.
</screen>
            <para>删除一个修订版本的属性：</para>
            <screen>
$ svn propdel --revprop -r 26 release-date 
property 'release-date' deleted from repository revision '26'
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.propedit">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>propedit</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn propedit</refname>
            <refpurpose>修改一个或多个版本控制之下文件的属性。见<xref linkend="svn.ref.svn.c.propset"/>。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn propedit PROPNAME TARGET...</programlisting>
            <programlisting>svn propedit PROPNAME --revprop -r REV [TARGET]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>使用喜欢的编辑器编辑一个或多个属性，第一种形式是在工作拷贝编辑版本化的属性，第二种形式是远程编辑未版本化的版本库修订版本属性(<replaceable>TARGET</replaceable>只是用来确定访问哪个版本库)。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；对URL操作时是版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URl操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--editor-cmd EDITOR
--encoding ENC
--file (-F) ARG
--force
--force-log
--message (-m) ARG
--revision (-r) REV
--revprop
--with-revprop ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para><command>svn propedit</command>对修改多个值的属性非常简单：</para>
            <screen>
$ svn propedit svn:keywords  foo.c 
    &lt;svn will launch your favorite editor here, with a buffer open
    containing the current contents of the svn:keywords property.  You
    can add multiple values to a property easily here by entering one
    value per line.&gt;
Set new value for property 'svn:keywords' on 'foo.c'
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.propget">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>propget</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn propget</refname>
            <refpurpose>打印一个属性的值。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn propget PROPNAME [TARGET[@REV]...]</programlisting>
            <programlisting>svn propget PROPNAME --revprop -r REV [URL]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印一个文件、目录或修订版本的一个属性的值，第一种形式是打印工作拷贝中一个或多个项目的版本化的属性，第二种形式是远程打印版本库修订版本的未版本化的属性。属性的详情见<xref linkend="svn.advanced.props"/>。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；对URL操作时是版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URl操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--changelist ARG
--depth ARG
--recursive (-R)
--revision (-r) REV
--revprop
--strict
--xml
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>检查工作拷贝的一个文件的一个属性：</para>
            <screen>
$ svn propget svn:keywords foo.c
Author
Date
Rev
</screen>
            <para>对于修订版本属性相同：</para>
            <screen>
$ svn propget svn:log --revprop -r 20 
Began journal.
</screen>
            <para>Lastly, you can get <command>svn propget</command>
            output in XML format with the <option>--xml</option>
            option:</para>
            <screen>
$ svn propget --xml svn:ignore .
&lt;?xml version="1.0"?&gt;
&lt;properties&gt;
&lt;target
   path=""&gt;
&lt;property
   name="svn:ignore"&gt;*.o
&lt;/property&gt;
&lt;/target&gt;
&lt;/properties&gt;
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.proplist">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>proplist</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn proplist</refname>
            <refpurpose>列出所有的属性。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn proplist [TARGET[@REV]...]</programlisting>
            <programlisting>svn proplist --revprop -r REV [TARGET]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>列出文件、目录或修订版本的属性，第一种形式是列出工作拷贝的所有版本化的属性，第二种形式是列出版本库修订版本的未版本化的属性(<replaceable>TARGET</replaceable>只是用来确定访问哪个版本库)。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；对URL操作时是版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URl操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--changelist ARG
--depth ARG
--quiet (-q)
--recursive (-R)
--revision (-r) REV
--revprop
--verbose (-v)
--xml
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>你可以使用proplist察看你的工作拷贝的一个项目的属性：</para>
            <screen>
$ svn proplist foo.c
Properties on 'foo.c':
  svn:mime-type
  svn:keywords
  owner
</screen>
            <para>通过<option>--verbose</option>选项，svn proplist也可以非常便利的显示属性的值：</para>
            <screen>
$ svn proplist --verbose foo.c
Properties on 'foo.c':
  svn:mime-type : text/plain
  svn:keywords : Author Date Rev
  owner : sally
</screen>
            <para>Lastly, you can get <command>svn proplist</command>
            output in xml format with the <option>--xml</option>
            option:</para>
            <screen>
$ svn proplist --xml 
&lt;?xml version="1.0"?&gt;
&lt;properties&gt;
&lt;target
   path="."&gt;
&lt;property
   name="svn:ignore"/&gt;
&lt;/target&gt;
&lt;/properties&gt;
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.propset">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>propset</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn propset</refname>
            <refpurpose><replaceable>NAME</replaceable>。删除工作拷贝文件或目录的<replaceable>NAME</replaceable>状态。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn propset PROPNAME [PROPVAL | -F VALFILE] PATH...</programlisting>
            <programlisting>svn propset PROPNAME --revprop -r REV [PROPVAL | -F VALFILE] [TARGET]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>设置文件、目录或者修订版本的属性<replaceable>PROPNAME</replaceable>为<replaceable>PROPVAL</replaceable>。第一个例子在工作拷贝创建了一个版本化的本地属性修改，第二个例子创建了一个未版本化的远程的对版本库修订版本的属性修改(<replaceable>TARGET</replaceable>只是用来确定访问哪个版本库)。</para>
            <tip>
              <para>Subversion有一系列<quote>特殊的</quote>影响行为方式的属性，关于这些属性的详情请见<xref linkend="svn.ref.properties"/>。</para>
            </tip>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>服务器比较<replaceable>TARGET@N</replaceable>和<replaceable>TARGET<replaceable>TARGET@M</replaceable>。</replaceable></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝；对URL操作时是版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有在对URl操作时会</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--changelist ARG
--depth ARG
--encoding ENC
--file (-F) FILE
--force
--quiet (-q)
--recursive (-R)
--revision (-r) REV
--revprop
--targets FILENAME
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>设置文件的mimetype：</para>
            <screen>
$ svn propset svn:mime-type image/jpeg foo.jpg 
property 'svn:mime-type' set on 'foo.jpg'
</screen>
            <para>在UNIX系统，如果你希望一个文件设置执行权限：</para>
            <screen>
$ svn propset svn:executable ON somescript
property 'svn:executable' set on 'somescript'
</screen>
            <para>或许为了合作者的利益你有一个内部的属性设置：</para>
            <screen>
$ svn propset owner sally foo.c
property 'owner' set on 'foo.c'
</screen>
            <para>如果你在特定修订版本的日志信息里有一些错误，并且希望修改，可以使用<option>--revprop</option>设置<literal>svn:log</literal>为新的日志信息：</para>
            <screen>
$ svn propset --revprop -r 25 svn:log "Journaled about trip to New York."
property 'svn:log' set on repository revision '25'
</screen>
            <para>或者，你没有工作拷贝，你可以提供一个URL：</para>
            <screen>
$ svn propset --revprop -r 26 svn:log "Document nap." http://svn.red-bean.com/repos
property 'svn:log' set on repository revision '25'
</screen>
            <para>最后，你可以告诉propset从一个文件得到输入，你甚至可以使用这个方式来设置一个属性为二进制内容：</para>
            <screen>
$ svn propset owner-pic -F sally.jpg moo.c 
property 'owner-pic' set on 'moo.c'
</screen>
            <note>
              <para>缺省，你不可以在Subversion版本库修改修订版本属性，你的版本库管理员必须显示的通过创建一个名字为<literal>pre-revprop-change</literal>的钩子来允许修订版本属性修改，关于钩子脚本的详情请见<xref linkend="svn.reposadmin.create.hooks"/>。</para>
            </note>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.resolve">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>resolve</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn resolved</refname>
            <refpurpose>解决工作拷贝文件或目录的冲突。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn resolve PATH...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>解决工作拷贝文件或目录的<quote>conflicted</quote>状态。这个程序不是语义上的改变冲突标志，而且，它使用<option>--accept</option>参数指定的版本来替换<replaceable>PATH</replaceable>，然后删除冲突相关的人造文件，从而重新允许<replaceable>PATH</replaceable>提交―也就是说，它告诉Subversion冲突已经<quote>解决了</quote>。根据你的期望解决办法，你可以为 <option>--accept</option>命令传递如下参数：</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>base</literal>
                </term>
                <listitem>
                  <para>这是你的做更新操作以前的<literal>BASE</literal>版本文件，就是你在上次更新之后未作更改的版本。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>working</literal>
                </term>
                <listitem>
                  <para>Assuming that you've manually handled the
                conflict resolution, choose the version of the file as
                it currently stands in your working copy.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>mine-full</literal>
                </term>
                <listitem>
                  <para>Resolve all conflicted files with copies of the
                files as they stood immediately before you
                ran <command>svn update</command>.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>theirs-full</literal>
                </term>
                <listitem>
                  <para>Resolve all conflicted files with copies of the
                files that were fetched from the server when you
                ran <command>svn update</command>.</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>关于解决冲突的深入介绍可以看<xref linkend="svn.tour.cycle.resolve"/>。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>否</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--targets FILENAME
--depth ARG
--quiet (-q)
--config-dir DIR
--changelist ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>Here's an example where, after a postponed conflict
            resolution during update, <command>svn resolve</command>
            replaces the all conflicts in
            file <filename>foo.c</filename> with your edits:</para>
            <screen>
$ svn up
Conflict discovered in 'foo.c'.
Select: (p) postpone, (df) diff-full, (e) edit,
        (h) help for more options: p
C    foo.c
Updated to revision 5.

$ svn resolve --accept mine-full foo.c
Resolved conflicted state of 'foo.c'
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.resolved">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>resolved</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn resolved</refname>
            <refpurpose><emphasis>废弃的</emphasis>。删除工作拷贝文件或目录的<emphasis>废弃的</emphasis>状态。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn resolved PATH...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>This command has been deprecated in favor of
            running <userinput>svn resolve --accept working <replaceable>PATH</replaceable></userinput>.
            See <xref linkend="svn.ref.svn.c.resolve"/> in the preceding section for
            details.</para>
            <para>删除工作拷贝文件或目录的<quote>conflicted</quote>状态。这个程序不是语义上的改变冲突标志，它只是删除冲突相关的人造文件，从而重新允许<replaceable>PATH</replaceable>提交；也就是说，它告诉Subversion冲突已经<quote>解决了</quote>。关于解决冲突更深入的考虑可以查看<xref linkend="svn.tour.cycle.resolve"/>。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>否</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--depth ARG
--quiet (-q)
--recursive (-R)
--targets FILENAME
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>如果你在更新时得到冲突，你的工作拷贝会产生三个新的文件：</para>
            <screen>
$ svn update
C  foo.c
Updated to revision 31.
$ ls
foo.c
foo.c.mine
foo.c.r30
foo.c.r31
</screen>
            <para>当你解决了<filename>foo.c</filename>的冲突，并且准备提交，运行<command>svn resolved</command>让你的工作拷贝知道你已经完成了所有事情。</para>
            <warning>
              <para>你<emphasis>可以</emphasis>仅仅删除冲突的文件并且提交，但是<command>svn resolved</command>除了删除冲突文件，还修正了一些记录在工作拷贝管理区域的记录数据，所以我们推荐你使用这个命令。</para>
            </warning>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.revert">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>revert</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn revert</refname>
            <refpurpose>取消所有的本地编辑。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn revert PATH...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>恢复所有对文件和目录的修改，并且解决所有的冲突状态。<command>svn revert</command>不会只是恢复工作拷贝中一个项目的内容，也包括了对属性修改的恢复。最终，你可以使用它来取消所有已经做过的预定操作(例如，文件预定要添加或删除可以<quote>恢复</quote>)。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>否</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--targets FILENAME
--depth ARG
--quiet (-q)
--config-dir DIR
--changelist ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>丢弃对一个文件的修改：</para>
            <screen>
$ svn revert foo.c
Reverted foo.c
</screen>
            <para>如果你希望恢复一整个目录的文件，可以使用<option>--depth=infinity</option>选项：</para>
            <screen>
$ svn revert --depth=infinity .
Reverted newdir/afile
Reverted foo.c
Reverted bar.txt
</screen>
            <para>最后，你可以取消预定的操作：</para>
            <screen>
$ svn add mistake.txt whoops
A         mistake.txt
A         whoops
A         whoops/oopsie.c

$ svn revert mistake.txt whoops
Reverted mistake.txt
Reverted whoops

$ svn status
?      mistake.txt
?      whoops
</screen>
            <warning>
              <para><command>svn revert</command>本身有固有的危险，因为它的目的是放弃数据―未提交的修改。一旦你选择了恢复，Subversion<emphasis>没有方法</emphasis>找回未提交的修改。</para>
              <para>如果你没有给<command>svn revert</command>提供了目标，它不会做任何事情―为了保护你不小心失去对工作拷贝的修改，<command>svn revert</command>需要你提供至少一个目标。</para>
            </warning>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.status">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>status</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn status</refname>
            <refpurpose>打印工作拷贝文件和目录的状态。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn status [PATH...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印工作拷贝文件和目录的状态。如果没有参数，只会打印本地修改的项目(不会访问版本库)，使用<option>--show-updates</option>选项，会添加工作修订版本和服务器过期信息。使用<option>--verbose</option>会打印每个项目的完全修订版本信息，使用<option>--quiet</option>，会打印本地修改条目的总结信息。</para>
            <para>输出的前六列都是一个字符宽，每一列给出了工作拷贝项目的每一方面的信息。</para>
            <para>第一列指出一个项目的是添加、删除还是其它的修改。</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>' '</literal>
                </term>
                <listitem>
                  <para>没有修改。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'A'</literal>
                </term>
                <listitem>
                  <para>预定要添加的项目。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'D'</literal>
                </term>
                <listitem>
                  <para>预定要删除的项目。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'M'</literal>
                </term>
                <listitem>
                  <para>项目已经修改了。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'R'</literal>
                </term>
                <listitem>
                  <para>项目在工作拷贝中已经被替换了。这意味着文件预定要删除，然后有一个同样名称的文件要在同一个位置替换它。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'C'</literal>
                </term>
                <listitem>
                  <para>项目的内容(相对于属性)与更新得到的数据冲突了。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'X'</literal>
                </term>
                <listitem>
                  <para>项目与外部定义相关。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'I'</literal>
                </term>
                <listitem>
                  <para>项目被忽略(例如使用<literal>svn:ignore</literal>属性)。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'?'</literal>
                </term>
                <listitem>
                  <para>项目不在版本控制之下。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'!'</literal>
                </term>
                <listitem>
                  <para>项目已经丢失(例如，你使用<command>svn</command>移动或者删除了它)。这也说明了一个目录不是完整的(一个检出或更新中断)。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'~'</literal>
                </term>
                <listitem>
                  <para>项目作为一种对象(文件、目录或链接)纳入版本控制，但是已经被另一种对象替代。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>第二列告诉一个文件或目录的属性的状态。</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>' '</literal>
                </term>
                <listitem>
                  <para>没有修改。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'M'</literal>
                </term>
                <listitem>
                  <para>这个项目的属性已经修改。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'C'</literal>
                </term>
                <listitem>
                  <para>这个项目的属性与从版本库得到的更新有冲突。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>第三列只在工作拷贝锁定时才会出现。(见<xref linkend="svn.tour.cleanup"/>。)</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>' '</literal>
                </term>
                <listitem>
                  <para>项目没有锁定。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'L'</literal>
                </term>
                <listitem>
                  <para>项目已经锁定。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>第四列只在预定包含历史添加的项目出现。</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>' '</literal>
                </term>
                <listitem>
                  <para>没有历史预定要提交。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'+'</literal>
                </term>
                <listitem>
                  <para>历史预定要伴随提交。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>第五列只在项目跳转到相对于它的父目录时出现(见<xref linkend="svn.branchmerge.switchwc"/>)。</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>' '</literal>
                </term>
                <listitem>
                  <para>项目是它的父目录的孩子。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'S'</literal>
                </term>
                <listitem>
                  <para>项目已经转换。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>第六列显示锁定信息。</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>' '</literal>
                </term>
                <listitem>
                  <para>当使用<option>--show-updates</option>，文件没有锁定。如果<emphasis>不</emphasis>使用<option>--show-updates</option>，这意味着文件在工作拷贝被锁定。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>K</term>
                <listitem>
                  <para>文件锁定在工作拷贝。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>O</term>
                <listitem>
                  <para>文件被另一个用户或另一个工作拷贝锁定，只有在使用<option>--show-updates</option>时显示。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>T</term>
                <listitem>
                  <para>文件锁定在工作拷贝，但是锁定被<quote>窃取</quote>而不可用。文件当前锁定在版本库，只有在使用<option>--show-updates</option>时显示。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>B</term>
                <listitem>
                  <para>文件锁定在工作拷贝，但是锁定被<quote>破坏</quote>而不可用。文件当前锁定在版本库，只有在使用<option>--show-updates</option>时显示。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>过期信息出现在第七列(只在使用<option>--show-updates</option>选项时出现)。</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>' '</literal>
                </term>
                <listitem>
                  <para>这个项目在工作拷贝是最新的。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'*'</literal>
                </term>
                <listitem>
                  <para>在服务器这个项目有了新的修订版本。</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>余下的字段是可变得宽度且使用空格分隔，如果使用<option>--show-updates</option>或<option>--verbose</option>选项，工作修订版本是下一个字段。</para>
            <para>如果传递<option>--verbose</option>选项，最后提交的修订版本和最后的提交作者会在后面显示。</para>
            <para>工作拷贝路径永远是最后一个字段，所以它可以包括空格。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>无2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>只有使用<option>--show-updates</option>时会访问</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--changelist ARG
--depth ARG
--ignore-externals
--incremental
--no-ignore
--quiet (-q)
--show-updates (-u)
--verbose (-v)
--xml
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这是查看你在工作拷贝所做的修改的最简单的方法。</para>
            <screen>
$ svn status wc
 M     wc/bar.c
A  +   wc/qax.c
</screen>
            <para>如果你希望找出工作拷贝哪些文件是最新的，使用<option>--show-updates</option>选项(这不会对工作拷贝有任何修改)。这里你会看到<filename>wc/foo.c</filename>在上次更新后有了修改：</para>
            <screen>
$ svn status --show-updates wc
 M           965    wc/bar.c
       *     965    wc/foo.c
A  +         965    wc/qax.c
Status against revision:    981
</screen>
            <note>
              <para><option>--show-updates</option><emphasis>只会</emphasis>在过期的项目(如果你运行<command>svn update</command>，就会更新的项目)旁边安置一个星号。<option>--show-updates</option>不会导致状态列表反映项目的版本库版本(尽管你可以通过<option>--verbose</option>选项查看版本库的修订版本号)。</para>
            </note>
            <para>最后，是你能从status子命令得到的所有信息：</para>
            <screen>
$ svn status --show-updates --verbose wc
 M           965       938 sally        wc/bar.c
       *     965       922 harry        wc/foo.c
A  +         965       687 harry        wc/qax.c
             965       687 harry        wc/zig.c
Head revision:   981
</screen>
            <para>Lastly, you can get <command>svn status</command>
            output in XML format with the <option>--xml</option>
            option:</para>
            <screen>
$ svn status --xml wc
&lt;?xml version="1.0"?&gt;
&lt;status&gt;
&lt;target
   path="wc"&gt;
&lt;entry
   path="qax.c"&gt;
&lt;wc-status
   props="none"
   item="added"
   revision="0"&gt;
&lt;/wc-status&gt;
&lt;/entry&gt;
&lt;entry
   path="bar.c"&gt;
&lt;wc-status
   props="normal"
   item="modified"
   revision="965"&gt;
&lt;commit
   revision="965"&gt;
&lt;author&gt;sally&lt;/author&gt;
&lt;date&gt;2008-05-28T06:35:53.048870Z&lt;/date&gt;
&lt;/commit&gt;
&lt;/wc-status&gt;
&lt;/entry&gt;
&lt;/target&gt;
&lt;/status&gt;
</screen>
            <para>关于<command>svn status</command>的更多例子可以见<xref linkend="svn.tour.cycle.examine.status"/>。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.switch">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>switch</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn switch</refname>
            <refpurpose>把工作拷贝更新到别的URL。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn switch URL[@PEGREV] [PATH]</programlisting>
            <programlisting>switch --relocate FROM TO [PATH...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>这个子命令(没有<option>--relocate</option>选项)更新你的工作拷贝来反映新的URL―通常是一个与你的工作拷贝分享共同祖先的URL，尽管这不是必需的。这是Subversion移动工作拷贝到分支的方式。更深入的了解请见<xref linkend="svn.branchmerge.switchwc"/>。</para>
            <para>If <option>--force</option> is used, unversioned
            obstructing paths in the working copy do not automatically
            cause a failure if the switch attempts to add the same
            path.  If the obstructing path is the same type (file or
            directory) as the corresponding path in the repository, it
            becomes versioned but its contents are left untouched in
            the working copy.  This means that an obstructing
            directory's unversioned children may also obstruct and
            become versioned.  For files, any content differences
            between the obstruction and the repository are treated
            like a local modification to the working copy.  All
            properties from the repository are applied to the
            obstructing path.</para>
            <para>As with most subcommands, you can limit the scope of
            the switch operation to a particular tree depth using the
            <option>--depth</option> option.  Alternatively, you can
            use the <option>--set-depth</option> option to set a new
            <quote>sticky</quote> working copy depth on the switch
            target.  Currently, the depth of a working copy directory
            can only be increased (telescoped more deeply); you cannot
            make a directory more shallow.</para>
            <para><option>--relocate</option>选项导致<command>svn switch</command>做不同的事情：它更新你的工作拷贝指向到<emphasis>同一个</emphasis>版本库目录，但是不同的URL(通常因为管理员将版本库转移了服务器，或到了同一个服务器的另一个URL)。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>sw</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--accept ARG
--depth ARG
--diff3-cmd CMD
--force
--ignore-externals
--quiet (-q)
--relocate
--revision (-r) REV
--set-depth ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>如果你目前所在目录<filename>vendors</filename>分支到<filename>vendors-with-fix</filename>，你希望转移到那个分支：</para>
            <screen>
$ svn switch http://svn.red-bean.com/repos/branches/vendors-with-fix .
U  myproj/foo.txt
U  myproj/bar.txt
U  myproj/baz.c
U  myproj/qux.c
Updated to revision 31.
</screen>
            <para>为了跳转回来，只需要提供最初取出工作拷贝的版本库URL：</para>
            <screen>
$ svn switch http://svn.red-bean.com/repos/trunk/vendors .
U  myproj/foo.txt
U  myproj/bar.txt
U  myproj/baz.c
U  myproj/qux.c
Updated to revision 31.
</screen>
            <tip>
              <para>如果你不希望跳转所有的工作拷贝，你可以只跳转一部分。</para>
            </tip>
            <para>有时候管理员会修改版本库的<quote>基本位置</quote>―换句话说，版本库的内容并不改变，但是访问根的主URL变了。举个例子，主机名变了、URL模式变了或者是URL中的任何一部分改变了。我们不选择重新检出一个工作拷贝，你可以使用<command>svn switch</command>来重写版本库所有URL的开头。如果使用带<option>--relocate</option>选项的<command>svn switch</command>来做这种替换，Subversion会访问版本库来验证重定位请求(当然是查看新URL的版本库)，然后重写元数据。此类switch操作不会修改文件内容―是一个只修改元数据的工作拷贝修改。</para>
            <screen>
$ svn checkout file:///var/svn/repos test
A  test/a
A  test/b
…

$ mv repos newlocation
$ cd test/

$ svn update
svn: Unable to open an ra_local session to URL
svn: Unable to open repository 'file:///var/svn/repos'

$ svn switch --relocate file:///var/svn/repos file:///tmp/newlocation .
$ svn update
At revision 3.
</screen>
            <warning>
              <para>小心使用<option>--relocate</option>选项，如果你输入了错误的选项，你会在工作拷贝创建无意义的URL，会导致整个工作区不可用并且难于修复。理解何时应该使用<option>--relocate</option>也是非常重要的，下面是一些规则：</para>
              <itemizedlist>
                <listitem>
                  <para>如果工作拷贝需要反映一个版本库的新目录，只需要使用<command>svn switch</command>。</para>
                </listitem>
                <listitem>
                  <para>如果你的工作拷贝还是反映相同的版本库目录，但是版本库本身的位置改变了，使用<command>svn switch --relocate</command>。</para>
                </listitem>
              </itemizedlist>
            </warning>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.unlock">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>unlock</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn unlock</refname>
            <refpurpose>解锁工作拷贝路径或URL。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn unlock TARGET...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>解锁每个<replaceable>TARGET</replaceable>。如果任何另一个用户锁定了<replaceable>TARGET</replaceable>，或者没有正确工作拷贝的锁定令牌，打印警告并继续解锁余下的<replaceable>TARGET</replaceable>。使用<option>--force</option>可以打破其它用户或工作拷贝的锁定。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝，版本库</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--force
--targets FILENAME
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>解锁工作拷贝中的两个文件：</para>
            <screen>
$ svn unlock tree.jpg house.jpg
'tree.jpg' unlocked.
'house.jpg' unlocked.
</screen>
            <para>解锁工作拷贝的一个被其他用户锁定的文件：</para>
            <screen>
$ svn unlock tree.jpg
svn: 'tree.jpg' is not locked in this working copy
$ svn unlock --force tree.jpg
'tree.jpg' unlocked.
</screen>
            <para>没有工作拷贝时解锁一个文件：</para>
            <screen>
$ svn unlock http://svn.red-bean.com/repos/test/tree.jpg
'tree.jpg unlocked.
</screen>
            <para>更多细节见<xref linkend="svn.advanced.locking"/>。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svn.c.update">
          <indexterm>
            <primary>svn</primary>
            <secondary>子命令</secondary>
            <tertiary>update</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svn update</refname>
            <refpurpose>更新你的工作拷贝。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svn update [PATH...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para><command>svn update</command>会把版本库的修改带到工作拷贝，如果没有给定修订版本，它会把你的工作拷贝更新到<literal>HEAD</literal>修订版本，否则，它会把工作拷贝更新到你用<option>--revision</option>指定的修订版本。为了保持同步，<command>svn update</command>也会删除所有在工作拷贝发现的无效锁定(见<xref linkend="svn.tour.cleanup"/>)。</para>
            <para>对于每一个更新的项目开头都有一个表示所做动作的字符，这些字符有下面的意思：</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>A</literal>
                </term>
                <listitem>
                  <para>添加</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>B</literal>
                </term>
                <listitem>
                  <para>Broken lock (third column only)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>D</literal>
                </term>
                <listitem>
                  <para>删除</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>U</literal>
                </term>
                <listitem>
                  <para>更新</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>C</literal>
                </term>
                <listitem>
                  <para>冲突</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>G</literal>
                </term>
                <listitem>
                  <para>合并</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>E</literal>
                </term>
                <listitem>
                  <para>Existed</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>第一列的字符反映文件本身的更新，而第二列会反映文件属性的更新，锁定信息打印在第三列。</para>
            <para>As with most subcommands, you can limit the scope of
            the update operation to a particular tree depth using the
            <option>--depth</option> option.  Alternatively, you can
            use the <option>--set-depth</option> option to set a new
            <quote>sticky</quote> working copy depth on the update
            target.  Currently, the depth of a working copy directory
            can only be increased (telescoped more deeply); you cannot
            make a directory more shallow.</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>up</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>改变</title>
            </info>
            <para>工作拷贝2</para>
          </refsection>
          <refsection>
            <info>
              <title>访问版本库</title>
            </info>
            <para>是</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--accept ARG
--changelist
--depth ARG
--diff3-cmd CMD
--editor-cmd ARG
--force
--ignore-externals
--quiet (-q)
--revision (-r) REV
--set-depth ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>获取你上次更新之后版本库的修改：</para>
            <screen>
$ svn update
A  newdir/toggle.c
A  newdir/disclose.c
A  newdir/launch.c
D  newdir/README
Updated to revision 32.
</screen>
            <para>你也可以将工作拷贝更新到旧的修订版本(Subversion没有CVS的<quote>sticky</quote>文件的概念；见<xref linkend="svn.forcvs"/>)：</para>
            <screen>
$ svn update -r30
A  newdir/README
D  newdir/toggle.c
D  newdir/disclose.c
D  newdir/launch.c
U  foo.c
Updated to revision 30.
</screen>
            <tip>
              <para>如果你希望检查单个文件的旧的修订版本，你会希望使用<command>svn cat</command>。</para>
            </tip>
          </refsection>
        </refentry>
      </section>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.svnadmin">
      <info>
        <title>svnadmin</title>
      </info>
      <para><command>svnadmin</command>是一个用来监控和修改Subversion版本库的管理工具，详情请见<xref linkend="svn.reposadmin.maint.tk.svnadmin"/>。</para>
      <para>因为<command>svnadmin</command>直接访问版本库(因此只可以在存放版本库的机器上使用)，它通过路径访问版本库，而不是URL。</para>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svnadmin.sw">
        <info>
          <title><command>svnadmin</command> 选项</title>
        </info>
        <para>这个命令同<command>svn copy</command>加一个<command>svn delete</command>等同。</para>
        <variablelist>
          <varlistentry>
            <term>
              <option>--bdb-log-keep</option>
            </term>
            <listitem>
              <para>(Berkeley DB特定)关闭数据库日志文件的自动删除，保留这些文件可以帮助你在灾难性版本库故障时更加便利。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--bdb-txn-nosync</option>
            </term>
            <listitem>
              <para>(Berkeley DB特定)在提交数据库事务时关闭fsync。可以在<command>svnadmin create</command>命令创建Berkeley DB后端时开启<literal>DB_TXN_NOSYNC</literal>(可以改进速度，但是有相关的风险)。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--bypass-hooks</option>
            </term>
            <listitem>
              <para>绕过版本库钩子系统。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--clean-logs</option>
            </term>
            <listitem>
              <para>删除不使用的Berkeley DB日志。</para>
            </listitem>
          </varlistentry>
          <!-- TODO config-dir?  Only 'svnadmin create' accepts it, and -->
          <!-- the underlying logic doesn't even use it.                -->
          <varlistentry>
            <term>
              <option>--force-uuid</option>
            </term>
            <listitem>
              <para>缺省情况下，当版本库加载已经包含修订版本的数据时<command>svnadmin</command>会忽略流中的<literal>UUID</literal>，这个选项会导致版本库的<literal>UUID</literal>设置为流的<literal>UUID</literal>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-uuid</option>
            </term>
            <listitem>
              <para>缺省情况下，当加载空版本库时，<command>svnadmin</command>会使用来自流中的<literal>UUID</literal>，这个选项会导致忽略UUID(如果你的配置文件已经设置了<option>--force-uuid</option>，将会用于将其覆盖)。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--incremental</option>
            </term>
            <listitem>
              <para>导出一个修订版本针对前一个修订版本的区别，而不是通常的完全结果。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--parent-dir <replaceable>DIR</replaceable></option>
            </term>
            <listitem>
              <para>当加载一个转储文件时，根路径为<replaceable>DIR</replaceable>而不是<filename>/</filename>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--pre-1.4-compatible</option>
            </term>
            <listitem>
              <para>When creating a new repository, use a format that is
            compatible with versions of Subversion earlier than
            Subversion 1.4.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--pre-1.5-compatible</option>
            </term>
            <listitem>
              <para>When creating a new repository, use a format that is
            compatible with versions of Subversion earlier than
            Subversion 1.5.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--revision</option> (<option>-r</option>) <replaceable>ARG</replaceable></term>
            <listitem>
              <para>指定一个操作的修订版本。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--quiet</option>
            </term>
            <listitem>
              <para>不显示通常的过程―只显示错误。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--use-post-commit-hook</option>
            </term>
            <listitem>
              <para>当导入使用一个转储文件时，在每次新的修订版本产生时运行版本库post-commit钩子。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--use-post-revprop-change-hook</option>
            </term>
            <listitem>
              <para>当修改一个修订版本属性时，在每次修改修订版本产生后运行版本库post-revprop-change钩子。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--use-pre-commit-hook</option>
            </term>
            <listitem>
              <para>当加载一个转储文件时，每次新加修订版本之前运行版本库的pre-commit钩子。如果钩子失败，终止提交并中断加载进程。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--use-pre-revprop-change-hook</option>
            </term>
            <listitem>
              <para>当修改一个修订版本属性，在修改修订版本之前运行版本库的pre-revprop-change钩子，如果钩子失败，中断修改并终止。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svnadmin.c">
        <info>
          <title>svnadmin 子命令</title>
        </info>
        <para>有许多不同方法运行<command>svnserve</command>：</para>
        <refentry xml:id="svn.ref.svnadmin.c.crashtest">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>crashtest</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin crashtest</refname>
            <refpurpose>Simulate a process that crashes.</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin crashtest REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Open the repository at <replaceable>REPOS_PATH</replaceable>, then abort, thus
              simulating a process that crashes while holding an open
              repository handle.  This is used for testing automatic
              repository recovery (a new feature in Berkeley DB 4.4).
              It's unlikely that you'll need to run this
              command.</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <screen>
$ svnadmin crashtest /var/svn/repos
Aborted
</screen>
            <para>Exciting, isn't it?</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.create">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>create</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin create</refname>
            <refpurpose>创建一个新的空的版本库。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin create REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>在提供的路径上创建一个新的空的版本库，如果提供的目录不存在，它会为你创建。<footnote><para>记住<command>svnadmin</command>只工作在本地<emphasis>路径</emphasis>，而不是<emphasis>URL</emphasis>。</para></footnote>对于Subversion 1.2，<command>svnadmin</command>缺省使用<literal>fsfs</literal>文件系统后端创建版本库。</para>
            <para>While <command>svnadmin create</command> will create
              the base directory for a new repository, it will not
              create intermediate directories.  For example, if you
              have an empty directory named
              <filename>/var/svn</filename>, creating
              <filename>/var/svn/repos</filename> will work, while
              attempting to create
              <filename>/var/svn/subdirectory/repos</filename> will
              fail with an error.</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--bdb-log-keep
--bdb-txn-nosync
--config-dir DIR
--fs-type TYPE
--pre-1.4-compatible
--pre-1.5-compatible
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>创建一个版本库就是这样简单：</para>
            <screen>
$ svnadmin create /var/svn/repos
</screen>
            <para>在Subversion 1.0，一定会创建一个Berkeley DB版本库，在Subversion 1.1，Berkeley DB版本库是缺省类型，但是一个FSFS版本库也是可以创建，使用<option>--fs-type</option>选项：</para>
            <screen>
$ svnadmin create /var/svn/repos --fs-type fsfs
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.deltify">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>deltify</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin deltify</refname>
            <refpurpose>修订版本范围的路径的增量变化。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin deltify [-r LOWER[:UPPER]] REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para><command>svnadmin deltify</command>因为历史原因而存在，这个命令已经废弃，不再需要。</para>
            <para>它开始于当Subversion提供了管理员控制版本库压缩策略的能力，结果是复杂工作得到了<emphasis>非常</emphasis>小的收益，所以这个<quote>特性</quote>被废弃了。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--show-ids
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.dump">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>dump</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin dump</refname>
            <refpurpose>将文件系统的内容转储到标准输出。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin dump REPOS_PATH [-r LOWER[:UPPER]] [--incremental]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>使用<quote>dumpfile</quote>可移植格式将文件系统的内容转储到标准输出，将反馈发送到标准错误，导出的修订版本从<replaceable>LOWER</replaceable>到<replaceable>UPPER</replaceable>。如果没有提供修订版本，会导出所有的修订版本树，如果只提供<replaceable>LOWER</replaceable>，导出一个修订版本树，通常的用法见<xref linkend="svn.reposadmin.maint.migrate"/>。</para>
            <para>缺省情况下，Subversion的转储流包含了一个包括所有文件和目录的单独修订版本(请求的修订版本范围的第一个)，后面是其它的只包含本修订所修改的文件和目录的修订版本(请求范围的其它版本)。对于修改的文件，转储文件包括所有的内容和属性，对于目录，包括所有的属性。</para>
            <para>有一对有用的选项可以改变转储文件产生的方式，第一个是<option>--incremental</option>，使得第一个修订版本只显示其修改的文件和目录，而不是战士为添加整个目录树，就同转储文件中的其它修订版本一样。这对产生一个准备导入到已经有数据的版本库时非常有用。</para>
            <para>第二个有用的选项是<option>--deltas</option>，这个选项导致<command>svnadmin dump</command>不会保留修改文件的所有内容，而只是记录修改的部分。这样减少(有些情况下是非常大的)了<command>svnadmin dump</command>产生的转储文件的大小。然而，也有缺点―增量转储文件需要更多的CPU来创建，也不可以用<command>svndumpfilter</command>操作，也不如非增量文件容易被如<command>gzip</command>和<command>bzip2</command>等第三方工具压缩。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--incremental
--quiet (-q)
--deltas
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>转储整个版本库：</para>
            <screen>
$ svnadmin dump /var/svn/repos &gt; repos-dumpfile
* Dumped revision 0.
* Dumped revision 1.
* Dumped revision 2.
* Dumped revision 3.
…
$
</screen>
            <para>从版本库增量转储一个单独的事务：</para>
            <screen>
$ svnadmin verify /var/svn/repos/ 
* Verified revision 1729.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.help">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>help</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin help</refname>
            <refpurpose>求助！</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin help [SUBCOMMAND...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>当你困于一个没有网络连接和本书的沙漠岛屿时，这个子命令非常有用。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.hotcopy">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>hotcopy</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin hotcopy</refname>
            <refpurpose>制作一个版本库的热备份。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin hotcopy REPOS_PATH NEW_REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>这个子命令会制作一个版本库的完全<quote>热</quote>拷贝，包括所有的钩子，配置文件，当然还有数据库文件。如果你传递<option>--clean-logs</option>选项，<command>svnadmin</command>会执行热拷贝操作，然后删除不用的Berkeley DB日志文件。你可以在任何时候运行这个命令得到一个版本库的安全拷贝，不管其它进程是否使用这个版本库。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--clean-logs
</screen>
            <warning>
              <para>就像<xref linkend="svn.reposadmin.basics.backends.bdb"/>描述的，热拷贝的Berkeley DB版本库<emphasis>不能</emphasis>跨操作系统移植，也不能在不同<quote>字节续</quote>的主机上工作。</para>
            </warning>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.list-dblogs">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>list-dblogs</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin list-dblogs</refname>
            <refpurpose>询问Berkeley DB在给定的Subversion版本库有哪些日志文件存在(只有在版本库使用<literal>bdb</literal>作为后端时使用)。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin list-dblogs REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Berkeley DB创建了记录所有版本库修改的日志，允许我们在面对大灾难时恢复。除非你开启了<literal>DB_LOG_AUTOREMOVE</literal>，否则日志文件会累积，尽管大多数是不再使用可以从磁盘删除得到空间。详情见<xref linkend="svn.reposadmin.maint.diskspace"/>。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.list-unused-dblogs">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>list-unused-dblogs</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin list-unused-dblogs</refname>
            <refpurpose>询问Berkeley DB哪些日志文件可以安全的删除(只有在版本库使用<literal>bdb</literal>作为后端时使用)。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin list-unused-dblogs REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Berkeley DB创建了记录所有版本库修改的日志，允许我们在面对大灾难时恢复。除非你开启了<literal>DB_LOG_AUTOREMOVE</literal>，否则日志文件会累积，尽管大多数是不再使用可以从磁盘删除得到空间。详情见<xref linkend="svn.reposadmin.maint.diskspace"/>。</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>从版本库删除所有的未用日志文件：</para>
            <screen>
$ svnadmin list-unused-dblogs /var/svn/repos
/var/svn/repos/log.0000000031
/var/svn/repos/log.0000000032
/var/svn/repos/log.0000000033

$ svnadmin list-unused-dblogs /var/svn/repos | xargs rm
## disk space reclaimed!
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.load">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>load</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin load</refname>
            <refpurpose>打印版本库的<filename>svnadmin</filename>。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin load REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>从标准输入读取格式化流<quote>dumpfile</quote>，提交新修订版本到版本库的文件系统，在标准输出返回进度。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--quiet (-q)
--ignore-uuid
--force-uuid
--use-pre-commit-hook
--use-post-commit-hook
--parent-dir
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这里显示了加载一个备份文件到版本库(当然，使用<command>svnadmin dump</command>)：</para>
            <screen>
$ svnadmin load /var/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
…
</screen>
            <para>或者你希望加载到一个子目录：</para>
            <screen>
$ svnadmin load --parent-dir new/subdir/for/project /var/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
…
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.lslocks">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>lslocks</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin lslocks</refname>
            <refpurpose>打印所有锁定的描述。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook lock REPOS_PATH PATH_IN_REPOS</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印<replaceable>PATH_IN_REPOS</replaceable>锁定的所有信息，如果<replaceable>PATH_IN_REPOS</replaceable>没有锁定，则不打印任何内容。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>显示了版本库<filename>/var/svn/repos</filename>中一个锁定的文件：</para>
            <screen>
$ svnadmin lslocks /var/svn/repos
Path: /tree.jpg
UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753
Owner: harry
Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005)
Expires: 
Comment (1 line):
Rework the uppermost branches on the bald cypress in the foreground.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.lstxns">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>lstxns</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin lstxns</refname>
            <refpurpose>打印所有未提交的事物名称。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin lstxns REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印所有未提交的事物名称。关于未提交事物是怎样创建和如何使用的信息见<xref linkend="svn.reposadmin.maint.diskspace.deadtxns"/>。</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>列出版本库所有突出的事物。</para>
            <screen>
$ svnadmin lstxns /var/svn/repos/ 
1w
1x
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.recover">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>recover</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin recover</refname>
            <refpurpose>将版本库数据库恢复到稳定状态(只有在版本库使用<literal>bdb</literal>作为后端时使用)，此外，如果<filename>repos/conf/passwd</filename>不存在，它会创建一个默认的密码文件。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin recover REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>在你得到的错误说明你需要恢复版本库时运行这个命令。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--wait
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>恢复挂起的版本库：</para>
            <screen>
$ svnadmin recover /var/svn/repos/ 
Repository lock acquired.
Please wait; recovering the repository may take some time...

Recovery completed.
The latest repos revision is 34.
</screen>
            <para>恢复数据库需要一个版本库的独占锁(这是一个<quote>数据库锁</quote>；见<xref linkend="svn.advanced.locking.meanings"/>)，如果另一个进程访问版本库，<command>svnadmin recover</command>会出错：</para>
            <screen>
$ svnadmin recover /var/svn/repos
svn: Failed to get exclusive repository access; perhaps another process
such as httpd, svnserve or svn has it open?

$
</screen>
            <para><option>--wait</option>选项可以导致<command>svnadmin recover</command>一直等待其它进程断开连接：</para>
            <screen>
$ svnadmin recover /var/svn/repos --wait
Waiting on repository lock; perhaps another process has it open?

### time goes by…

Repository lock acquired.
Please wait; recovering the repository may take some time...

Recovery completed.
The latest repos revision is 34.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.rmlocks">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>rmlocks</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin rmlocks</refname>
            <refpurpose>无条件的删除版本库的一个或多个锁定。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin rmlocks REPOS_PATH LOCKED_PATH...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>从<replaceable>LOCKED_PATH</replaceable>删除没个锁定。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这删除了版本库<filename>/var/svn/repos</filename>里<filename>tree.jpg</filename>和<filename>house.jpg</filename>文件上的锁定：</para>
            <screen>
$ svnadmin rmlocks /var/svn/repos tree.jpg house.jpg
Removed lock on '/tree.jpg.
Removed lock on '/house.jpg.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.rmtxns">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>rmtxns</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin rmtxns</refname>
            <refpurpose>从版本库删除事物。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin rmtxns REPOS_PATH TXN_NAME...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>删除版本库的事物，更多细节在<xref linkend="svn.reposadmin.maint.diskspace.deadtxns"/>。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--quiet (-q)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>删除命名的事物：</para>
            <screen>
$ svnadmin rmtxns /var/svn/repos/ 1w 1x
</screen>
            <para>很幸运，<command>lstxns</command>的输出作为<command>rmtxns</command>输入工作良好：</para>
            <screen>
$ svnadmin rmtxns /var/svn/repos/  `svnadmin lstxns /var/svn/repos/`
</screen>
            <para>从版本库删除所有未提交的事务。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.setlog">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>setlog</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin setlog</refname>
            <refpurpose>设置某个修订版本的日志信息。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin setlog REPOS_PATH -r REVISION FILE</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>设置修订版本<replaceable>REVISION</replaceable>的日志信息为<replaceable>FILE</replaceable>的内容。</para>
            <para>这与使用<command>svn propset --revprop</command>设置某一修订版本的<literal>svn:log</literal>属性效果一样，除了你也可以使用<option>--bypass-hooks</option>选项绕过的所有pre-或post-commit的钩子脚本，这在pre-revprop-change钩子脚本中禁止修改修订版本属性时非常有用。</para>
            <warning>
              <para>修订版本属性不在版本控制之下的，所以这个命令会永久覆盖前一个日志信息。</para>
            </warning>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--show-ids
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>设置修订版本19的日志信息为文件<filename>msg</filename>的内容：</para>
            <screen>
$ svnadmin setlog /var/svn/repos/ -r 19 msg
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.setrevprop">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>setrevprop</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin setrevprop</refname>
            <refpurpose>设置某个修订版本的属性名。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin setrevprop REPOS_PATH -r REVISION NAME FILE</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Set the property <replaceable>NAME</replaceable> on
              revision <replaceable>REVISION</replaceable> to the
              contents of <replaceable>FILE</replaceable>. Use
              <option>--use-pre-revprop-change-hook</option>
              or <option>--use-post-revprop-change-hook</option> to
              trigger the revision property-related hooks (e.g., if
              you want an email notification sent from your <literal>post-revprop-change-hook</literal>).</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) ARG
--use-post-revprop-change-hook
--use-pre-revprop-change-hook
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>设置修订版本19的日志信息为文件<filename>msg</filename>的内容：</para>
            <screen>
$svnadmin setrevprop /var/svn/repos -r 0 repository-photo sandwich.png
</screen>
            <para>As you can see, <command>svnadmin setrevprop</command>
            has no output upon success.</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.setuuid">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>setuuid</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin setuuid</refname>
            <refpurpose>重置版本库的UUID。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin setuuid REPOS_PATH [NEW_UUID]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Reset the repository UUID for the repository located
              at <replaceable>REPOS_PATH</replaceable>.
              If <replaceable>NEW_UUID</replaceable> is provided, use
              that as the new repository UUID; otherwise, generate a
              brand-new UUID for the repository.</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>If you've <command>svnsync</command>ed <filename>/var/svn/repos</filename>
            to <filename>/var/svn/repos-new</filename> and intend to use <filename>repos-new</filename> as your
            canonical repository, you may want to change the UUID for
            <filename>repos-new</filename> to the UUID of <filename>repos</filename> so that your users don't
            have to check out a new working copy to accommodate the
            change:</para>
            <screen>
$ svnadmin setuuid /var/svn/repos-new 2109a8dd-854f-0410-ad31-d604008985ab
</screen>
            <para>As you can see, <command>svnadmin setuuid</command>
            has no output upon success.</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnadmin.c.upgrade">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>upgrade</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin upgrade</refname>
            <refpurpose>Upgrade a repository to the latest supported
            schema version.</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin upgrade REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Upgrade the repository located
              at <replaceable>REPOS_PATH</replaceable> to the latest
              supported schema version.</para>
            <para>This functionality is provided as a convenience for
              repository administrators who wish to make use of new
              Subversion functionality without having to undertake a
              potentially costly full repository dump and load
              operation.  As such, the upgrade performs only the
              minimum amount of work needed to accomplish this while
              still maintaining the integrity of the repository.
              While a dump and subsequent load guarantee the most
              optimized repository state, <command>svnadmin
              upgrade</command> does not.</para>
            <warning>
              <para>You should <emphasis>always</emphasis> back up your
                repository before upgrading.</para>
            </warning>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>升级路径<filename>/var/repos/svn</filename>的版本库</para>
            <screen>
$ svnadmin upgrade /var/repos/svn
Repository lock acquired.
Please wait; upgrading the repository may take some time...

Upgrade completed.
</screen>
          </refsection>
        </refentry>
        <!-- this could use a lot more explanation.  When should I use
      it?  What do I do if it fails? -->
        <refentry xml:id="svn.ref.svnadmin.c.verify">
          <indexterm>
            <primary>svnadmin</primary>
            <secondary>子命令</secondary>
            <tertiary>verify</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnadmin verify</refname>
            <refpurpose>验证版本库保存的数据。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin verify REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>如果你希望验证版本库的完整性可以运行这个命令，这样会遍历版本库的所有的修订版本，导出修订版本并丢弃输出―有规律的执行这个命令来防止磁盘失败会是一个好方法，如果这个命令失败了―这是发生问题的第一个征兆―这表明你的版本库至少有一个损坏的修订版本，你必须从备份恢复损坏的修订版本(你需要备份，你没有吗？)。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--quiet (-q)
--revision (-r) ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>检验挂起的版本库：</para>
            <screen>
$ svnadmin verify /var/svn/repos/ 
* Verified revision 1729.
</screen>
          </refsection>
        </refentry>
      </section>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.svnlook">
      <info>
        <title>svnlook</title>
      </info>
      <para><command>svnlook</command>是检验Subversion版本库不同方面的命令行工具，它不会对版本库有任何修改―它只是用来<quote>看</quote>―<command>svnlook</command>通常被版本库钩子使用，但是版本库管理也会发现它在诊断目的上也非常有用。</para>
      <para>因为<command>svnlook</command>通过直接版本库访问(因此只可以在保存版本库的机器上工作)工作，所以他通过版本库的路径访问，而不是URL。</para>
      <para>如果没有指定修订版本或事物，<command>svnlook</command>缺省的是版本库最年轻的(最新的)修订版本。</para>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svnlook.sw">
        <info>
          <title>svnlook 选项</title>
        </info>
        <para><command>svnlook</command>的选项是全局的，就像<command>svn</command>和<command>svnadmin</command>；然而，大多数选项只会应用到一个子命令，因为<command>svnlook</command>的功能是(有意的)限制在一定范围的。</para>
        <variablelist>
          <varlistentry>
            <term>
              <option>--copy-info</option>
            </term>
            <listitem>
              <para>Causes <command>svnlook changed</command> to show
              detailed copy source information.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-diff-deleted</option>
            </term>
            <listitem>
              <para>防止<command>svnlook diff</command>打印删除文件的区别，缺省的行为方式是当一个文件在一次事物/修订版本中删除后，得到的结果与保留这个文件的内容变成空相同。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-diff-added</option>
            </term>
            <listitem>
              <para>防止<command>svnlook diff</command>打印添加文件的区别。缺省的行为方式是，当添加一个文件时，<command>svn diff</command>打印的信息和比较一个空白文件相同。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--revision</option> (<option>-r</option>)</term>
            <listitem>
              <para>指定要进行检查的特定修订版本。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--revprop</option>
            </term>
            <listitem>
              <para>操作针对修订版本属性，而不是Subversion文件或目录的属性。这个选项需要你传递<option>--revision</option>(<option>-r</option>)参数。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--transaction</option> (<option>-t</option>)</term>
            <listitem>
              <para>指定一个希望检查的特定事物ID。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--show-ids</option>
            </term>
            <listitem>
              <para>显示文件系统树中每条路径的文件系统节点修订版本ID。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svnlook.c">
        <info>
          <title>svnlook 子命令</title>
        </info>
        <para>有许多不同方法运行<command>svnserve</command>：</para>
        <refentry xml:id="svn.ref.svnlook.c.author">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>author</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook author</refname>
            <refpurpose>打印作者。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook author REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印版本库一个修订版本或者事物的作者。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para><command>svnlook author</command>垂手可得，但是并不令人激动：</para>
            <screen>
$ svnlook author -r 40 /var/svn/repos 
sally
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.cat">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>cat</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook cat</refname>
            <refpurpose>打印一个文件的内容。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook cat REPOS_PATH PATH_IN_REPOS</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印一个文件的内容。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这会显示事物<literal>ax8</literal>中一个文件的内容，位于<filename>/trunk/README</filename>：</para>
            <screen>
$ svnlook cat -t ax8 /var/svn/repos /trunk/README

               Subversion, a version control system.
               =====================================

$LastChangedDate: 2003-07-17 10:45:25 -0500 (Thu, 17 Jul 2003) $

Contents:

     I. A FEW POINTERS
    II. DOCUMENTATION
   III. PARTICIPATING IN THE SUBVERSION COMMUNITY
…
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.changed">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>changed</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook changed</refname>
            <refpurpose>打印修改的路径。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook changed REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印在特定修订版本或事物修改的路径，也是在前两列使用<quote>svn update样式的</quote>状态字符：</para>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>'A '</literal>
                </term>
                <listitem>
                  <para>条目添加到版本库</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'D '</literal>
                </term>
                <listitem>
                  <para>条目从版本库删除</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'U '</literal>
                </term>
                <listitem>
                  <para>文件内容改变了</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'U '</literal>
                </term>
                <listitem>
                  <para>条目属性改变了；注意开头的空格。</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>'UU'</literal>
                </term>
                <listitem>
                  <para>文件内容和属性修改了</para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>文件和目录可以区分，目录路径后面会显示字符<quote><literal>/</literal></quote>。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这里显示了在测试版本库中修订版本39改变的文件和目录，注意修改的第一个项目是一个目录，证据就是结尾的<literal>/</literal>：</para>
            <screen>
$ svnlook changed -r 39 /var/svn/repos
A   trunk/vendors/deli/
A   trunk/vendors/deli/chips.txt
A   trunk/vendors/deli/sandwich.txt
A   trunk/vendors/deli/pickle.txt
U   trunk/vendors/baker/bagel.txt
 U  trunk/vendors/baker/croissant.txt
UU  trunk/vendors/baker/pretzel.txt
D   trunk/vendors/baker/baguette.txt
</screen>
            <para>如下是显示文件重命名修订版本的例子：</para>
            <screen>
$ svnlook changed -r 64 /var/svn/repos
A   trunk/vendors/baker/toast.txt
D   trunk/vendors/baker/bread.txt
</screen>
            <para>Unfortunately, nothing in the preceding output reveals
            the connection between the deleted and added files.  Use
            the <option>--copy-info</option> option to make this
            relationship more apparent:</para>
            <screen>
$ svnlook changed -r 64 /var/svn/repos
A   trunk/vendors/baker/toast.txt
D   trunk/vendors/baker/bread.txt
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.date">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>date</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook date</refname>
            <refpurpose>打印时间戳。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook date REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印版本库一个修订版本或事物的时间戳。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>显示测试版本库修订版本40的日期：</para>
            <screen>
$ svnlook date -r 40 /var/svn/repos/
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.diff">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>diff</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook diff</refname>
            <refpurpose>打印修改的文件和属性的区别。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook diff REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印版本库中GNU样式的文件和属性修改区别。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--diff-copy-from
--no-diff-added
--no-diff-deleted
--revision (-r) REV
--transaction (-t) TXN
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这显示了一个新添加的(空的)文件，一个删除的文件和一个拷贝的文件：</para>
            <screen>
$ svnlook diff -r 40 /var/svn/repos/
Copied: egg.txt (from rev 39, trunk/vendors/deli/pickle.txt)

Added: trunk/vendors/deli/soda.txt
==============================================================================

Modified: trunk/vendors/deli/sandwich.txt
==============================================================================
--- trunk/vendors/deli/sandwich.txt	(original)
+++ trunk/vendors/deli/sandwich.txt	2003-02-22 17:45:04.000000000 -0600
@@ -0,0 +1 @@
+Don't forget the mayo!

Modified: trunk/vendors/deli/logo.jpg
==============================================================================
(Binary files differ)

Deleted: trunk/vendors/deli/chips.txt
==============================================================================

Deleted: trunk/vendors/deli/pickle.txt
==============================================================================
</screen>
            <para>如果一个文件有非文本的<literal>svn:mime-type</literal>属性，区别不会明确显示。</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.dirs-changed">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>dirs-changed</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook dirs-changed</refname>
            <refpurpose>打印本身修改的目录。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook dirs-changed REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印本身修改(属性编辑)或子文件修改的目录。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这显示了在我们的实例版本库中在修订版本40修改的目录：</para>
            <screen>
$ svnlook dirs-changed -r 40 /var/svn/repos
trunk/vendors/deli/
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.help">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>help</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook help</refname>
            <refpurpose>求助！</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>也可以是svnlook -h和svnlook -?。</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>显示<command>svnlook</command>的帮助信息，这个命令如同<command>svn help</command>的兄弟，也是你的朋友，即使你从不调用它，并且忘掉了邀请它加入你的上一次聚会。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.history">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>history</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook history</refname>
            <refpurpose>打印版本库(如果没有路径，则是根目录)某一个路径的历史。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook history REPOS_PATH
            [PATH_IN_REPOS]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印版本库(如果没有路径，则是根目录)某一个路径的历史。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--show-ids
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这显示了实例版本库中作为修订版本20的路径<filename>/tags/1.0</filename>的历史输出。</para>
            <screen>
$ svnlook history -r 20 /var/svn/repos /tags/1.0 --show-ids
REVISION   PATH &lt;ID&gt;
--------   ---------
      19   /tags/1.0 &lt;1.2.12&gt;
      17   /branches/1.0-rc2 &lt;1.1.10&gt;
      16   /branches/1.0-rc2 &lt;1.1.x&gt;
      14   /trunk &lt;1.0.q&gt;
      13   /trunk &lt;1.0.o&gt;
      11   /trunk &lt;1.0.k&gt;
       9   /trunk &lt;1.0.g&gt;
       8   /trunk &lt;1.0.e&gt;
       7   /trunk &lt;1.0.b&gt;
       6   /trunk &lt;1.0.9&gt;
       5   /trunk &lt;1.0.7&gt;
       4   /trunk &lt;1.0.6&gt;
       2   /trunk &lt;1.0.3&gt;
       1   /trunk &lt;1.0.2&gt;
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.info">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>info</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook info</refname>
            <refpurpose>打印作者、时间戳、日志信息大小和日志信息。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook info REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印作者、时间戳、日志信息大小(字节)和日志信息，然后是一个换行符。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>显示了你的实例版本库在修订版本40的信息输出：</para>
            <screen>
$ svnlook info -r 40 /var/svn/repos
sally
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
16
Rearrange lunch.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.lock">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>lock</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook lock</refname>
            <refpurpose>如果版本库路径已经被锁定，描述它。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook lock REPOS_PATH PATH_IN_REPOS</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印<replaceable>PATH_IN_REPOS</replaceable>锁定的所有信息，如果<replaceable>PATH_IN_REPOS</replaceable>没有锁定，则不打印任何内容。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这描述了文件<filename>tree.jpg</filename>的锁定。</para>
            <screen>
$ svnlook lock /var/svn/repos tree.jpg
UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753
Owner: harry
Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005)
Expires: 
Comment (1 line):
Rework the uppermost branches on the bald cypress in the foreground.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.log">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>log</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook log</refname>
            <refpurpose>日志信息本身， 后接换行。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook log REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印日志信息。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这显示了实例版本库在修订版本40的日志输出：</para>
            <screen>
$ svnlook log /var/svn/repos/
Rearrange lunch.
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.propget">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>propget</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook propget</refname>
            <refpurpose>打印版本库中一个路径一个属性的原始值。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook propget REPOS_PATH PROPNAME [PATH_IN_REPOS]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>列出版本库中一个路径一个属性的值。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这显示了<literal>HEAD</literal>修订版本中文件<filename>/trunk/sandwich</filename>的<quote>seasonings</quote>属性的值：</para>
            <screen>
$ svnlook pg /var/svn/repos seasonings /trunk/sandwich
mustard
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.proplist">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>proplist</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook proplist</refname>
            <refpurpose>打印版本化的文件和目录的属性名称和值。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook proplist REPOS_PATH [PATH_IN_REPOS]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>列出版本库中一个路径的属性，使用<option>--verbose</option>选项也会显示所有的属性值。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>使用<command>svnserve</command>通过<command>inetd</command></para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
--verbose (-v)
--revprop
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这显示了<literal>HEAD</literal>修订版本中<filename>/trunk/README</filename>的属性名称：</para>
            <screen>
$ svnlook proplist /var/svn/repos /trunk/README
  original-author
  svn:mime-type
</screen>
            <para>这与前一个例子是同一个命令，但是同时显示了属性值：</para>
            <screen>
$ svnlook --verbose proplist /var/svn/repos /trunk/README
  original-author : harry
  svn:mime-type : text/plain
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.tree">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>tree</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook tree</refname>
            <refpurpose>打印树。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook tree REPOS_PATH [PATH_IN_REPOS]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印树，从<replaceable>PATH_IN_REPOS</replaceable>(如果提供，会作为树的根)开始，可以选择显示节点修订版本ID。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--revision (-r) REV
--transaction (-t)
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这会显示实例版本库中修订版本40的树输出(包括节点ID(nodeIDs))：</para>
            <screen>
$ svnlook tree -r 40 /var/svn/repos --show-ids
/ &lt;0.0.2j&gt;
 trunk/ &lt;p.0.2j&gt;
  vendors/ &lt;q.0.2j&gt;
   deli/ &lt;1g.0.2j&gt;
    egg.txt &lt;1i.e.2j&gt;
    soda.txt &lt;1k.0.2j&gt;
    sandwich.txt &lt;1j.0.2j&gt;
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.uuid">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>uuid</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook uuid</refname>
            <refpurpose>打印版本库的<literal>UUID</literal>。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook uuid REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印版本库的<literal>UUID</literal>，UUID是版本库的<emphasis>u</emphasis>niversal <emphasis>u</emphasis>nique<emphasis>id</emphasis>entifier(全局唯一标示)，Subversion客户端可以使用这个标示区分不同的版本库。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <screen>
$ svnlook uuid /var/svn/repos
e7fe1b91-8cd5-0310-98dd-2f12e793c5e8
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnlook.c.youngest">
          <indexterm>
            <primary>svnlook</primary>
            <secondary>子命令</secondary>
            <tertiary>youngest</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnlook youngest</refname>
            <refpurpose>显示最年轻的修订版本号。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnlook youngest REPOS_PATH</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>打印一个版本库最年轻的修订版本号。</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>这显示了在实例版本库显示最年轻的修订版本：</para>
            <screen>
$ svnlook youngest /var/svn/repos/ 
42
</screen>
          </refsection>
        </refentry>
      </section>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.svnsync">
      <info>
        <title>svnsync</title>
      </info>
      <para><command>svnsync</command>是Subversion的远程版本库镜像工具，它允许你把一个版本库的内容录入到另一个。</para>
      <para>在任何镜像场景中，有两个版本库：源版本库，镜像(或<quote>sink</quote>)版本库，源版本库就是<command>svnsync</command>获取修订版本的库，镜像版本库是源版本库修订版本的目标，两个版本库可以是在本地或远程―它们只是通过URL跟踪。</para>
      <para><command>svnsync</command>进程只需要对源版本库有读权限；它不会尝试修改它。但是很明显，<command>svnsync</command>可以读写访问镜像版本库。</para>
      <warning>
        <para><command>svnsync</command>对于不能作为镜像操作一部分的修改非常敏感，为了防止发生这个情况，最好保证<command>svnsync</command>是唯一可以修改镜像版本库的进程。</para>
      </warning>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svnsync.sw">
        <info>
          <title>svnsync 选项</title>
        </info>
        <para>这个命令同<command>svn copy</command>加一个<command>svn delete</command>等同。</para>
        <variablelist>
          <varlistentry>
            <term>
              <option>--config-dir</option>
              <replaceable>DIR</replaceable>
            </term>
            <listitem>
              <para>指导Subversion从指定目录而不是默认位置(用户主目录的<filename>.subversion</filename>)读取配置信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--no-auth-cache</option>
            </term>
            <listitem>
              <para>阻止在Subversion管理区缓存认证信息(如用户名密码)。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--non-interactive</option>
            </term>
            <listitem>
              <para>如果认证失败，或者是不充分的凭证时，防止出现要求凭证的提示(例如用户名和密码)。这在运行自动脚本时非常有用，只是让Subversion失败而不是提示更多的信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--quiet</option> (<option>-q</option>)</term>
            <listitem>
              <para>请求客户端在执行操作时只显示重要信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>store-passwords</option>
              <replaceable>PASS</replaceable>
            </term>
            <listitem>
              <para>Specifies the password for the Subversion server
              from which you are syncing.  If not provided, or if
              incorrect, Subversion will prompt you for this
              information as needed.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--username</option>
              <replaceable>NAME</replaceable>
            </term>
            <listitem>
              <para>Specifies the username for the Subversion server
              from which you are syncing.  If not provided, or if
              incorrect, Subversion will prompt you for this
              information as needed.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--password</option>
              <replaceable>PASS</replaceable>
            </term>
            <listitem>
              <para>Specifies the password for the Subversion server to
              which you are syncing.  If not provided, or if
              incorrect, Subversion will prompt you for this
              information as needed.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--username</option>
              <replaceable>NAME</replaceable>
            </term>
            <listitem>
              <para>Specifies the username for the Subversion server to
              which you are syncing.  If not provided, or if
              incorrect, Subversion will prompt you for this
              information as needed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svnsync.c">
        <info>
          <title>svnsync 子命令</title>
        </info>
        <para>有许多不同方法运行<command>svnserve</command>：</para>
        <refentry xml:id="svn.ref.svnsync.c.copy-revprops">
          <indexterm>
            <primary>svnsync</primary>
            <secondary>子命令</secondary>
            <tertiary>copy-revprops</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnsync copy-revprops</refname>
            <refpurpose>从源版本库拷贝所有的修订版本属性到镜像版本库。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnsync copy-revprops DEST_URL REV</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>因为Subversion修订版本属性可以在任何时候修改，很有可能有一些修订版本的属性会在已经同步后改变，因为<command>svnsync synchronize</command>不会对没有同步的修订版本范围进行操作，而不会注意修改范围之外的属性修改。这样导致了修订版本属性在源版本库与目标版本库的偏离，<command>svnsync copy-revprops</command>是这个问题的答案，用它可以同步特定修订版本的属性。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--config-dir DIR
--no-auth-cache
--non-interactive
--quiet (-q)
--source-password ARG
--source-username ARG
--sync-password ARG
--sync-username ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>为单个修订版本重新同步修订版本属性：</para>
            <screen>
$ svnsync copy-revprops file:///var/svn/repos-mirror 6
Copied properties for revision 6.
$
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnsync.c.help">
          <indexterm>
            <primary>svnsync</primary>
            <secondary>子命令</secondary>
            <tertiary>help</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnsync help</refname>
            <refpurpose>求助！</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnsync help</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>This subcommand is useful when you're trapped in a
            foreign prison with neither a Net connection nor a copy of
            this book, but you do have a local Wi-Fi network running
            and you'd like to sync a copy of your repository over to
            the backup server that Ira The Knife is running over in
            cell block D.</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>无</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnsync.c.init">
          <indexterm>
            <primary>svnsync</primary>
            <secondary>子命令</secondary>
            <tertiary>initialize</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnsync initialize</refname>
            <refpurpose>为与另一个版本库的同步初而始化目标版本库。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnsync initialize DEST_URL SOURCE_URL</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para><command>svnsync initialize</command>检验版本库是否满足了新镜像版本库的需求―它必须没有存在的版本历史，并允许修订版本修改―记录镜像版本库与源版本库关联的初始管理信息，这是对即将镜像的版本库的第一个<command>svnsync</command>操作。</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>init</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--config-dir DIR
--no-auth-cache
--non-interactive
--quiet (-q)
--source-password ARG
--source-username ARG
--sync-password ARG
--sync-username ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>因为无法修改修订版本属性而初始化镜像版本库失败：</para>
            <screen>
$ svnsync initialize file:///var/svn/repos-mirror http://svn.example.com/repos
svnsync: Repository has not been enabled to accept revision propchanges;
ask the administrator to create a pre-revprop-change hook
$
</screen>
            <para>以镜像初始化版本库，包含已创建允许所有修订版本属性修改的<literal>pre-revprop-change</literal>钩子：</para>
            <screen>
$ svnsync initialize file:///var/svn/repos-mirror http://svn.example.com/repos
Copied properties for revision 0.
$
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svnsync.c.sync">
          <indexterm>
            <primary>svnsync</primary>
            <secondary>子命令</secondary>
            <tertiary>synchronize</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svnsync synchronize</refname>
            <refpurpose>将所有未完成的修订版本从源版本库转移到镜像版本库。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnsync synchronize DEST_URL</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para><command>svnsync synchronize</command>命令做了版本库镜像工作的所有体力活，通过讯问镜像版本库来查看已经拷贝的修订版本，然后开始拷贝未镜像修订版本到镜像版本库。</para>
            <para><command>svnsync synchronize</command>可以优雅的取消并重新开始。</para>
            <para>As of Subversion 1.5, you can limit <command>svnsync</command> to a
            subdirectory of the source repository by specifying the
            subdirectory as part of
            the <replaceable>SOURCE_URL</replaceable>.</para>
          </refsection>
          <refsection>
            <info>
              <title>别名</title>
            </info>
            <para>
              <command>sync</command>
            </para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--config-dir DIR
--no-auth-cache
--non-interactive
--quiet (-q)
--source-password ARG
--source-username ARG
--sync-password ARG
--sync-username ARG
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>从源版本库拷贝未同步修订版本到镜像版本库：</para>
            <screen>
$ svnsync synchronize file:///var/svn/repos-mirror
Committed revision 1.
Copied properties for revision 1.
Committed revision 2.
Copied properties for revision 2.
Committed revision 3.
Copied properties for revision 3.
…
Committed revision 45.
Copied properties for revision 45.
Committed revision 46.
Copied properties for revision 46.
Committed revision 47.
Copied properties for revision 47.
$
</screen>
          </refsection>
        </refentry>
      </section>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.svnserve">
      <info>
        <title>svnserve</title>
      </info>
      <para>当对远程源版本库使用<command>svnsync</command>时，使用Subversion的自定义网络协议。</para>
      <para><command>svnserve</command>允许Subversion版本库使用<literal>svn</literal>网络协议，你可以作为独立服务器进程运行svnserve，或者是使用其它进程，如<command>inetd</command>、<command>xinetd</command>(也是<literal>svn://</literal>)或使用<literal>svn+ssh://</literal>访问方法的<command>sshd</command>为你启动进程。</para>
      <para>一旦客户端已经选择了一个版本库来传递它的URL，<command>svnserve</command>会读取版本库目录的<filename>conf/svnserve.conf</filename>文件，来检测版本库特定的设置，如使用哪个认证数据库和应用怎样的授权策略。关于<filename>svnserve.conf</filename>文件的详情见<xref linkend="svn.serverconfig.svnserve"/>。</para>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svnserve.sw">
        <info>
          <title>svnserve 选项</title>
        </info>
        <para>不象前面描述的命令，<command>svnserve</command>没有子命令―<command>svnserve</command>完全通过选项控制。</para>
        <variablelist>
          <varlistentry>
            <term><option>--daemon</option> (<option>-d</option>)</term>
            <listitem>
              <para>导致<command>svnserve</command>以守护进程方式运行，<command>svnserve</command>维护本身并且接受和服务svn端口(缺省3690)的TCP/IP连接。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--foreground</option>
            </term>
            <listitem>
              <para>当与<option>-d</option>一起使用，会导致<command>svnserve</command>停留在前台，主要用来调试。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--inetd</option> (<option>-i</option>)</term>
            <listitem>
              <para>导致<command>svnserve</command>使用标准输出/标准输入文件描述符，更准确的是使用<command>inetd</command>作为守护进程。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--help</option> (<option>-h</option>)</term>
            <listitem>
              <para>显示有用的摘要和选项。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--listen-host</option>=<replaceable>HOST</replaceable></term>
            <listitem>
              <para><command>svnserve</command>监听的<replaceable>HOST</replaceable>，可能是一个主机名或是一个IP地址。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--listen-once</option> (<option>-X</option>)</term>
            <listitem>
              <para>导致<command>svnserve</command>在svn端口接受一个连接，并为之服务，完成后退出。这个选项主要用来调试。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--listen-port</option>=<replaceable>PORT</replaceable></term>
            <listitem>
              <para>在守护进程模式时导致svnserve监听<replaceable>PORT</replaceable>端口。(FreeBSD守护进程缺省只监听tcp6―这个选项告诉他们监听tcp4。)</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--pid-file <replaceable>FILENAME</replaceable></option>
            </term>
            <listitem>
              <para>导致<command>svnserve</command>将进程ID写入<replaceable>FILENAME</replaceable>，必须对于运行的<command>svnserve</command>的用户可写。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--root</option>=<replaceable>ROOT</replaceable> (<option>-r</option>=<replaceable>ROOT</replaceable>)</term>
            <listitem>
              <para>设置<command>svnserve</command>服务的版本库的虚拟根，客户端提供的URL中显示的路径会解释为这个根的相对路径，不会允许离开这个根。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--threads</option> (<option>-T</option>)</term>
            <listitem>
              <para>当以守护进程模式运行，导致<command>svnserve</command>为每个连接产生一个线程而不是一个进程(例如在Windows中运行时)，<command>svnserve</command>进程本身在启动后会一直在后台。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>--tunnel</option> (<option>-t</option>)</term>
            <listitem>
              <para>导致<command>svnserve</command>以管道模式运行，很像<command>inetd</command>操作的模式(两种模式都维护标准输入/标准输出的连接)，除了连接是用当前UID的用户名预先认证过的这一点。这个选项在客户端使用如<command>ssh</command>之类的管道时自动传递，这意味着你很少有必要再去传递这个参数给<command>svnserve</command>，所以如果你发现在命令行输入了<literal>svnserve --tunnel</literal>，并想知道接下来怎么做，可以看<xref linkend="svn.serverconfig.svnserve.sshauth"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--tunnel-user NAME</option>
            </term>
            <listitem>
              <para>与<option>--tunnel</option>选项结合使用；告诉svnserve假定<replaceable>NAME</replaceable>就是认证用户，而不是svnserve进程的UID用户，当希望多个用户通过SSH共享同一个系统帐户，但是维护各自的提交标示符时非常有用。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--version</option>
            </term>
            <listitem>
              <para>显示版本信息，版本库后端存在和可用的模块列表，然后退出。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.svndumpfilter">
      <info>
        <title>svndumpfilter</title>
      </info>
      <para><command>svnadmin</command>是一个用来监控和修改Subversion版本库的管理工具，详情请见<xref linkend="svn.reposadmin.maint.tk.svnadmin"/>。</para>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svndumpfilter.options">
        <info>
          <title>svndumpfilter 选项</title>
        </info>
        <para>这个命令同<command>svn copy</command>加一个<command>svn delete</command>等同。</para>
        <variablelist>
          <varlistentry>
            <term>
              <option>--drop-empty-revs</option>
            </term>
            <listitem>
              <para>If filtering causes any revision to be empty (i.e.,
              causes no change to the repository), removes these
              revisions from the final dump file.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--renumber-revs</option>
            </term>
            <listitem>
              <para>Renumbers revisions that remain after
              filtering.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--skip-missing-merge-sources</option>
            </term>
            <listitem>
              <para>Skips merge sources that have been removed as part of
              the filtering.  Without this
              option, <command>svndumpfilter</command> will exit with
              an error if the merge source for a retained path is
              removed by filtering.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--preserve-revprops</option>
            </term>
            <listitem>
              <para>If all nodes in a revision are removed by filtering
              and <option>--drop-empty-revs</option> is not passed,
              the default behavior of <command>svndumpfilter</command>
              is to remove all revision properties except for the date
              and the log message (which will merely indicate that the
              revision is empty).  Passing this option will preserve
              existing revision properties (which may or may not make
              sense since the related content is no longer present in
              the dump file).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--quiet</option>
            </term>
            <listitem>
              <para>Does not display filtering statistics.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <!-- =============================================================== -->
      <section xml:id="svn.ref.svndumpfilter.c">
        <info>
          <title>svndumpfilter 子命令</title>
        </info>
        <para>有许多不同方法运行<command>svnserve</command>：</para>
        <refentry xml:id="svn.ref.svndumpfilter.commands.c.exclude">
          <indexterm>
            <primary>svndumpfilter</primary>
            <secondary>子命令</secondary>
            <tertiary>exclude</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svndumpfilter</refname>
            <refpurpose>将指定路径的数据从转储数据流中排除。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svndumpfilter exclude PATH_PREFIX...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>This can be used to exclude nodes that begin with one or
            more <replaceable>PATH_PREFIX</replaceable>es from a
            filtered dump file.</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--drop-empty-revs
--preserve-revprops
--quiet
--renumber-revs
--skip-missing-merge-sources
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>If we have a dump file from a repository with a number of
          different picnic-related directories in it, but we want to keep
          everything <emphasis>except</emphasis>
          the <filename>sandwiches</filename> part of the repository,
          we'll exclude only that path:</para>
            <screen>
$ svndumpfilter exclude sandwiches &lt; dumpfile &gt; filtered-dumpfile
Excluding prefixes:
   '/sandwiches'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 1 node(s):
   '/sandwiches'
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svndumpfilter.commands.c.include">
          <indexterm>
            <primary>svndumpfilter</primary>
            <secondary>子命令</secondary>
            <tertiary>include</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svndumpfilter</refname>
            <refpurpose>将指定路径的数据从转储数据流中排除。</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svndumpfilter include PATH_PREFIX...</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Can be used to include nodes that begin with one or
            more <replaceable>PATH_PREFIX</replaceable>es in a
            filtered dump file (thus excluding all other paths).</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <screen>
--drop-empty-revs
--preserve-revprops
--quiet
--renumber-revs
--skip-missing-merge-sources
</screen>
          </refsection>
          <refsection>
            <info>
              <title>例子</title>
            </info>
            <para>If we have a dump file from a repository with a number of
          different picnic-related directories in it, but want to
          keep only the <filename>sandwiches</filename> part of the
          repository, we'll include only that path:</para>
            <screen>
$ svndumpfilter include sandwiches &lt; dumpfile &gt; filtered-dumpfile
Including prefixes:
   '/sandwiches'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 3 node(s):
   '/drinks'
   '/snacks'
   '/supplies'
</screen>
          </refsection>
        </refentry>
        <refentry xml:id="svn.ref.svndumpfilter.commands.c.help">
          <indexterm>
            <primary>svndumpfilter</primary>
            <secondary>子命令</secondary>
            <tertiary>help</tertiary>
          </indexterm>
          <refnamediv>
            <refname>svndumpfilter</refname>
            <refpurpose>求助！</refpurpose>
          </refnamediv>
          <refsection>
            <info>
              <title>概要</title>
            </info>
            <programlisting>svnadmin help [SUBCOMMAND...]</programlisting>
          </refsection>
          <refsection>
            <info>
              <title>描述</title>
            </info>
            <para>Displays the help message
            for <command>svndumpfilter</command>.  Unlike other help
            commands documented in this chapter, there is no witty
            commentary for this help command.  The authors of this
            book deeply regret the omission.</para>
          </refsection>
          <refsection>
            <info>
              <title>选项</title>
            </info>
            <para>无</para>
          </refsection>
        </refentry>
      </section>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.svnversion">
      <info>
        <title>svnversion</title>
      </info>
      <refentry xml:id="svn.ref.svnversion.re">
        <indexterm>
          <primary>svnversion</primary>
        </indexterm>
        <refnamediv>
          <refname>svnversion</refname>
          <refpurpose>总结工作拷贝的本地修订版本。</refpurpose>
        </refnamediv>
        <refsection xml:id="svn.ref.svnversion.re.syn">
          <info>
            <title>概要</title>
          </info>
          <programlisting>svnversion [OPTIONS] [WC_PATH [TRAIL_URL]]</programlisting>
        </refsection>
        <refsection xml:id="svn.ref.svnversion.re.desc">
          <info>
            <title>描述</title>
          </info>
          <para><command>svnversion</command>是用来总结工作拷贝修订版本混合的程序，结果修订版本号或范围会写到标准输出。</para>
          <para>通常在构建过程中利用其输出定义程序的版本号码。</para>
          <para>如果提供<replaceable>TRAIL_URL</replaceable>，URL的尾端部分用来监测是否<replaceable>WC_PATH</replaceable>本身已经跳转(监测<replaceable>WC_PATH</replaceable>的跳转不需要依赖<replaceable>TRAIL_URL</replaceable>)。</para>
          <para>当没有定义<replaceable>WC_PATH</replaceable>，会使用当前路径作为工作拷贝路径，如果没有显式定义<replaceable>WC_PATH</replaceable>，<replaceable>TRAIL_URL</replaceable>将无法定义。</para>
        </refsection>
        <refsection xml:id="svn.ref.svnversion.re.sw">
          <info>
            <title>选项</title>
          </info>
          <para>像<command>svnserve</command>，<command>svnversion</command>没有子命令―只有选项。</para>
          <variablelist>
            <varlistentry>
              <term><option>--no-newline</option> (<option>-n</option>)</term>
              <listitem>
                <para>忽略输出的尾端新行。.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><option>--committed</option> (<option>-c</option>)</term>
              <listitem>
                <para>使用最后修改修订版本而不是当前的(例如，本地存在的最高修订版本)修订版本。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><option>--help</option> (<option>-h</option>)</term>
              <listitem>
                <para>打印帮助摘要。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <option>--version</option>
              </term>
              <listitem>
                <para>打印<command>svnversion</command>，如果没有错误则退出。</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </refsection>
        <refsection xml:id="svn.ref.svnversion.re.examples">
          <info>
            <title>例子</title>
          </info>
          <para>如果工作拷贝都是一样的修订版本(例如，在更新后那一刻)，会打印修订版本：</para>
          <screen>
$ svnversion
4168
</screen>
          <para>添加<replaceable>TRAIL_URL</replaceable>来展示工作拷贝不是从你希望的地方跳转过来的，注意这个命令需要<replaceable>WC_PATH</replaceable>：</para>
          <screen>
$ svnversion . /var/svn/trunk
4168
</screen>
          <para>对于混合修订版本的工作拷贝，修订版本的范围会被打印：</para>
          <screen>
$ svnversion
4123:4168
</screen>
          <para>如果工作拷贝包含修改，后面会紧跟一个"M"：</para>
          <screen>
$ svnversion
4168M
</screen>
          <para>如果工作拷贝已经跳转，后面会有一个"S"：</para>
          <screen>
$ svnversion
4168S
</screen>
          <para>因此，这里是一个混合修订版本，跳转的工作拷贝包含了一些本地修改：</para>
          <screen>
$ svnversion
4212:4168MS
</screen>
          <para>如果从一个目录而不是工作拷贝调用，<command>svnversion</command>假定它是一个导出的工作拷贝并且打印"exported"：</para>
          <screen>
$ svnversion
exported
</screen>
        </refsection>
      </refentry>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.mod_dav_svn">
      <info>
        <title>mod_dav_svn</title>
      </info>
      <refentry xml:id="svn.ref.mod_dav_svn.conf">
        <refnamediv>
          <refname><placeholder-1/> Configuration Directives</refname>
          <refpurpose>Apache通过Apache HTTP服务器用来维护Subversion版本库配置指示。</refpurpose>
        </refnamediv>
        <refsection xml:id="svn.ref.mod_dav_svn.conf.desc">
          <info>
            <title>描述</title>
          </info>
          <para>这个小节主要描述了Subversion Apache配置的每个指示，关于Apache配置Subversion的更多信息见<xref linkend="svn.serverconfig.httpd"/>。</para>
        </refsection>
        <refsection xml:id="svn.ref.mod_dav_svn.conf.directives">
          <info>
            <title>指示</title>
          </info>
          <para>These are the <filename>httpd.conf</filename> directives
          that apply to <command>mod_dav_svn</command>:</para>
          <variablelist>
            <varlistentry>
              <term>
                <literal>DAV svn</literal>
              </term>
              <listitem>
                <para>这个指示必须包含在所有Subversion版本库的<literal>Directory</literal>或<literal>Location</literal>块中，它告诉httpd使用Subversion的后端，用<literal>mod_dav</literal>来处理所有的请求。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNAllowBulkUpdates On|Off</literal>
              </term>
              <listitem>
                <para>Toggles support for all-inclusive
                responses to update-style <literal>REPORT</literal>
                requests.  Subversion clients use
                <literal>REPORT</literal> requests to get information
                about directory tree checkouts and updates from
                <command>mod_dav_svn</command>.  They can ask the
                server to send that information in one of two ways:
                with the entirety of the tree's information in one
                massive response, or with a
                <firstterm>skelta</firstterm> (a skeletal
                representation of a tree delta) which contains just
                enough information for the client to know what
                <emphasis>additional</emphasis> data to request from
                the server.  When this directive is included with a
                value of <literal>Off</literal>,
                <command>mod_dav_svn</command> will only ever respond
                to these <literal>REPORT</literal> requests with
                skelta responses, regardless of the type of responses
                requested by the client.</para>
                <para>Most folks won't need to use this directive at
                all.  It primarily exists for administrators who
                wish―for security or auditing reasons―to
                force Subversion clients to fetch individually all the
                files and directories needed for updates and
                checkouts, thus leaving an audit trail of
                <literal>GET</literal> and <literal>PROPFIND</literal>
                requests in Apache's logs.  The default value of this
                directive is <literal>On</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNAutoversioning On|Off</literal>
              </term>
              <listitem>
                <para>这个指示允许WebDAV客户端的请求导致自动提交，每个修订版本会产生一个普通的日志信息。如果你开启了自动版本化，你很可能需要设置<literal>ModMimeUsePathInfo On</literal>，这样<literal>mod_mime</literal>可以自动的(像<literal>mod_mime</literal>一样好，当然)将<literal>svn:mime-type</literal>设置为正确的<literal>svn:mime-type</literal>值。更多信息见<xref linkend="svn.webdav"/>。这个指示的缺省值是<literal>off</literal>。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNPath <replaceable>directory-path</replaceable></literal>
              </term>
              <listitem>
                <para>这个指示指定Subversion版本库文件文件系统的位置，在一个Subversion版本库的配置块里，必须提供这个指示或<literal>SVNParentPath</literal>，但不能同时存在。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNSpecialURI <replaceable>component</replaceable></literal>
              </term>
              <listitem>
                <para>指定特定Subversion资源的URI部分(命名空间)，缺省是<quote><literal>!svn</literal></quote>，大多数管理员不会用到这个指示。只有那些必须要在版本库中放一个名字为<filename>!svn</filename>的文件时需要设置。如果你在一个已经使用中的服务器上这样修改，它会破坏所有的工作拷贝，你的用户会拿着叉子和火把追杀你。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNReposName <replaceable>名称</replaceable></literal>
              </term>
              <listitem>
                <para>指定Subversion版本库在<literal>HTTP GET</literal>请求中使用的名字，这个值会作为所有目录列表(当你用web浏览器察看Subversion版本库时会看到)的标题，这个指示是可选的。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNIndexXSLT <replaceable>directory-path</replaceable></literal>
              </term>
              <listitem>
                <para>目录列表所使用的XSL转化的URI，这个指示可选。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNParentPath <replaceable>directory-path</replaceable></literal>
              </term>
              <listitem>
                <para>指定子目录会是版本库的父目录在文件系统的位置，在一个Subversion版本库的配置块里，必须提供这个指示或<literal>SVNPath</literal>，但不能同时存在。</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNPathAuthz On|Off|short_circuit</literal>
              </term>
              <listitem>
                <para>Controls path-based authorization by enabling
                subrequests (<literal>On</literal>), disabling
                subrequests (<literal>Off</literal>; see <xref linkend="svn.serverconfig.httpd.authz.pathauthzoff"/>),
                or querying <command>mod_authz_svn</command> directly
                (<literal>short_circuit</literal>).  The default
                value of this directive is <literal>On</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNListParentPath On|Off</literal>
              </term>
              <listitem>
                <para>When set to <literal>On</literal>, allows
                a <literal>GET</literal>
                of <literal>SVNParentPath</literal>, which results in
                a listing of all repositories under that path.  The
                default setting is
                <literal>Off</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNMasterURI <replaceable>url</replaceable></literal>
              </term>
              <listitem>
                <para>Specifies a URI to the master Subversion
                repository (used for a write-through proxy).</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNActivitiesDB <replaceable>directory-path</replaceable></literal>
              </term>
              <listitem>
                <para>Specifies the location in the filesystem where the
                activities database should be stored.  By default,
                <command>mod_dav_svn</command> creates and uses a directory in the
                repository
                called <filename>dav/activities.d</filename>.  The
                path specified with this option must be an absolute
                path.</para>
                <para>If specified for
                an <literal>SVNParentPath</literal> area, <command>mod_dav_svn</command>
                appends the basename of the repository to the path
                specified here.  For example:</para>
                <screen>
&lt;Location /svn&gt;
  DAV svn

  # any "/svn/foo" URL will map to a repository in 
  # /net/svn.nfs/repositories/foo
  SVNParentPath         "/net/svn.nfs/repositories"

  # any "/svn/foo" URL will map to an activities db in
  #  /var/db/svn/activities/foo
  SVNActivitiesDB       "/var/db/svn/activities"
&lt;/Location&gt;
</screen>
              </listitem>
            </varlistentry>
          </variablelist>
        </refsection>
        <refsection xml:id="svn.ref.mod_dav_svn.conf.logging">
          <info>
            <title>高级日志</title>
          </info>
          <para>This is a list of Subversion action log messages
          produced by Apache's high-level logging mechanism, followed
          by an example of the log message.  See <xref linkend="svn.serverconfig.httpd.extra.logging"/> for details
          on logging.</para>
          <variablelist>
            <varlistentry>
              <term>Checkout or export</term>
              <listitem>
                <para>
                  <literal>checkout-or-export /path r62
            depth=infinity</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Commit</term>
              <listitem>
                <para>
                  <literal>commit harry r100</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Diffs</term>
              <listitem>
                <para>
                  <literal>diff /path r15:20 depth=infinity ignore-ancestry</literal>
                </para>
                <para>
                  <literal>diff /path1@15 /path2@20 depth=infinity ignore-ancestry</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>移动一个文件或目录。</term>
              <listitem>
                <para>
                  <literal>get-dir /trunk r17 text</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Fetch a file</term>
              <listitem>
                <para>
                  <literal>get-file /path r20 props</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>最后修改的修订版本</term>
              <listitem>
                <para>
                  <literal>get-file-revs /path r12:15 include-merged-revisions</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>获取合并信息</term>
              <listitem>
                <para>
                  <literal>get-mergeinfo (/path1 /path2)</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Lock</term>
              <listitem>
                <para>
                  <literal>lock /path steal</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Log</term>
              <listitem>
                <para>
                  <literal>log (/path1,/path2,/path3) r20:90
            discover-changed-paths revprops=()</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Replay revisions (svnsync)</term>
              <listitem>
                <para>
                  <literal>replay /path r19</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>修订版本属性修改</term>
              <listitem>
                <para>
                  <literal>change-rev-prop r50
            propertyname</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>修订版本属性列表</term>
              <listitem>
                <para>
                  <literal>rev-proplist r34</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>状态</term>
              <listitem>
                <para>
                  <literal>status /path r62
                depth=infinity</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Switch</term>
              <listitem>
                <para>
                  <literal>switch /pathA /pathB@50 depth=infinity</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Unlock</term>
              <listitem>
                <para>
                  <literal>unlock /path break</literal>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>更新</term>
              <listitem>
                <para>
                  <literal>update /path r17 send-copyfrom-args</literal>
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </refsection>
      </refentry>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.mod_authz_svn">
      <info>
        <title>mod_authz_svn</title>
      </info>
      <refentry xml:id="svn.ref.mod_authz_svn.conf">
        <refnamediv>
          <refname><placeholder-1/> Configuration Directives</refname>
          <refpurpose>Apache通过Apache HTTP服务器用来维护Subversion版本库配置指示。</refpurpose>
        </refnamediv>
        <refsection xml:id="svn.ref.mod_authz_svn.conf.desc">
          <info>
            <title>描述</title>
          </info>
          <para>这个小节主要描述了Subversion Apache配置的每个指示，关于Apache配置Subversion的更多信息见<xref linkend="svn.serverconfig.httpd"/>。</para>
        </refsection>
        <refsection xml:id="svn.ref.mod_authz_svn.conf.directives">
          <info>
            <title>指示</title>
          </info>
          <para>These are the <filename>httpd.conf</filename> directives
          that apply to <command>mod_authz_svn</command>:</para>
          <variablelist>
            <varlistentry>
              <term>
                <literal>SVNReposName <replaceable>file-path</replaceable></literal>
              </term>
              <listitem>
                <para>Consult <replaceable>file-path</replaceable> for
                access rules describing the permissions for paths in
                Subversion repository.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>AuthzSVNAnonymous On|Off</literal>
              </term>
              <listitem>
                <para>Set to <literal>Off</literal> to disable two
                special-case behaviours of this module: interaction
                with the <literal>Satisfy Any</literal> directive and
                enforcement of the authorization policy even when no
                <literal>Require</literal> directives are present.
                The default value of this directive is
                <literal>On</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>SVNAutoversioning On|Off</literal>
              </term>
              <listitem>
                <para>Set to <literal>Off</literal> to allow access
                control to be passed along to lower modules.  The
                default value of this directive is
                <literal>On</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>AuthzSVNNoAuthWhenAnonymousAllowed On|Off</literal>
              </term>
              <listitem>
                <para>Set to <literal>On</literal> to suppress
                authentication and authorization for requests which
                anonymous users are allowed to perform.  The default
                value of this directive is
                <literal>On</literal>.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </refsection>
      </refentry>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.properties">
      <info>
        <title>Subversion 属性</title>
      </info>
      <para>Subversion允许用户在文件或目录上发明任意名称的版本化属性和非版本化属性，唯一的限制就是<quote>svn:</quote>是Subversion本身的保留前缀，用户可以设置这些属性来改变Subversion的行为方式，用户不能发明新的<quote>svn:</quote>属性。</para>
      <section xml:id="svn.ref.properties.versioned-props">
        <info>
          <title>版本控制的属性</title>
        </info>
        <para>These are the versioned properties that Subversion reserves
        for its own use:</para>
        <variablelist>
          <varlistentry>
            <term>
              <literal>svn:executable</literal>
            </term>
            <listitem>
              <para>如果出现在一个文件上，客户端会将此文件在Unix工作拷贝中设置为可执行，见<xref linkend="svn.advanced.props.special.executable"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:mime-type</literal>
            </term>
            <listitem>
              <para>如果出现在一个文件，这个值表示了文件的mime-type，这允许客户端在执行更新时决定以行为依据的合并是否安全，同时也会影响使用浏览器浏览文件时的行为方式。见<xref linkend="svn.advanced.props.special.mime-type"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:ignore</literal>
            </term>
            <listitem>
              <para>如果出现在目录上，这是一组<command>svn status</command>和其它命令可以忽略的未版本化文件的名称模式，见<xref linkend="svn.advanced.props.special.ignore"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:keywords</literal>
            </term>
            <listitem>
              <para>如果出现在一个文件上，这个值告诉客户端如何扩展文件的特定关键字，见<xref linkend="svn.advanced.props.special.keywords"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:eol-style</literal>
            </term>
            <listitem>
              <para>如果出现在一个文件上，这个值告诉客户端如何处理工作拷贝中的文件的行结束符，见<xref linkend="svn.advanced.props.special.eol-style"/>和<xref linkend="svn.ref.svn.c.export"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:externals</literal>
            </term>
            <listitem>
              <para>如果出现在一个目录上，则这个值就是客户端必须要检出的路径和URL列表。见<xref linkend="svn.advanced.externals"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:special</literal>
            </term>
            <listitem>
              <para>如果出现在一个文件上，表示了那个文件不是一个普通的文件，而是一个符号链或者是其他特殊的对象<footnote><para>此时，符号链是唯一的<quote>特别</quote>对象，但是以后，也许Subversion会有更多的特别对象。</para></footnote>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:needs-lock</literal>
            </term>
            <listitem>
              <para>如果出现在一个文件上，告诉客户端在工作拷贝将文件置为只读，可以提醒我们在修改以前必须解锁。见<xref linkend="svn.advanced.locking.lock-communication"/>。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:mergeinfo</literal>
            </term>
            <listitem>
              <para>Used by Subversion to track merge data.  See
              <xref linkend="svn.branchmerge.basicmerging.mergeinfo"/>
              for details, but you should never edit this property
              unless you <emphasis>really</emphasis> know what you're
              doing.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="svn.ref.properties.unversioned-props">
        <info>
          <title>未版本控制的属性</title>
        </info>
        <para>These are the unversioned properties that Subversion reserves
        for its own use:</para>
        <variablelist>
          <varlistentry>
            <term>
              <literal>svn:author</literal>
            </term>
            <listitem>
              <para>如果出现，则保存了创建这个修订版本的认证用户名。(如果没有出现，则修订版本是匿名提交的。)</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:date</literal>
            </term>
            <listitem>
              <para>保存了ISO 8601格式的修订版本创建UTC时间，这个值来自服务器主机时钟，不是客户端的。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:log</literal>
            </term>
            <listitem>
              <para>保存了描述修订版本的日志信息。</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>svn:autoversioned</literal>
            </term>
            <listitem>
              <para>如果出现，则修订版本是通过自动版本化特性创建，见<xref linkend="svn.webdav.autoversioning"/>。</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <!-- ================================================================= -->
    <section xml:id="svn.ref.reposhooks">
      <info>
        <title>版本库钩子</title>
      </info>
      <para>These are the repository hooks that Subversion provides:</para>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.start-commit">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>start-commit</tertiary>
        </indexterm>
        <refnamediv>
          <refname>start-commit</refname>
          <refpurpose>开始提交的通知</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para> start-commit在开始事务之前执行，通常是用来确定用户是否有提交权限。</para>
          <para>如果start-commit钩子程序返回非零值，提交就会在创建之前停止，标准错误的任何输出都会返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>认证过的尝试提交的用户名</para>
            </listitem>
            <listitem>
              <para>Colon-separated list of
              capabilities that a client passes to the server,
              including <literal>depth</literal>,
              <literal>mergeinfo</literal>, and
              <literal>log-revprops</literal> (new in Subversion 1.5).</para>
            </listitem>
          </orderedlist>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>Access control (e.g., temporarily lock out commits for
          some reason).</para>
          <para>A means to allow access only from clients that have
          certain capabilities.</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.pre-commit">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>pre-commit</tertiary>
        </indexterm>
        <refnamediv>
          <refname>pre-commit</refname>
          <refpurpose>在提交结束之前提醒。</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>pre-commit</literal>钩子在事务完成提交之前运行，通常这个钩子是用来保护因为内容或位置(例如，你要求所有到一个特定分支的提交必须包括一个bug追踪的ticket号，或者是要求日志信息不为空)而不允许的提交。</para>
          <para>如果<literal>pre-commit</literal>钩子返回非零值，提交会退出，提交事务被删除，所有标准错误的输出返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>提交事务的名称</para>
            </listitem>
          </orderedlist>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>修改确认和控制</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.post-commit">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>post-commit</tertiary>
        </indexterm>
        <refnamediv>
          <refname>post-commit</refname>
          <refpurpose>成功提交的通知。</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>post-commit</literal>钩子在事务完成后运行，创建一个新的修订版本。大多数人用这个钩子来发送关于提交的描述性电子邮件，或者用来提醒其它工具(例如问题跟踪)。一些配置也使用这个钩子触发版本库的备份进程。</para>
          <para>如果<literal>pre-commit</literal>钩子返回非零值，提交会退出，提交事务被删除，所有标准错误的输出返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>提交创建的修订版本号</para>
            </listitem>
          </orderedlist>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>提交通知；工具集成</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.pre-revprop-change">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>pre-revprop-change</tertiary>
        </indexterm>
        <refnamediv>
          <refname>pre-revprop-change</refname>
          <refpurpose>修订版本属性修改的通知。</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>pre-revprop-change</literal>钩子在修订版本属性修改之前，正常提交范围之外被执行，不象其他钩子，这个钩子默认是拒绝所有的属性修改，钩子必须实际存在并且返回一个零值，这样属性修改才能实现。</para>
          <para>如果<literal>pre-revprop-change</literal>钩子没有实现或返回一个非零值，对属性的修改就不会成功，所有的标准错误输出会返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>要修改属性的修订版本</para>
            </listitem>
            <listitem>
              <para>企图修改属性的认证用户名</para>
            </listitem>
            <listitem>
              <para>属性名称已修改</para>
            </listitem>
            <listitem>
              <para>变更描述：<literal>A</literal> (添加的)，<literal>D</literal> (删除的)或<literal>M</literal> (修改的)</para>
            </listitem>
          </orderedlist>
          <para>此外，Subversion通过标准输入将属性值传递给钩子程序。</para>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>访问控制；变更确认和控制</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.post-revprop-change">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>post-revprop-change</tertiary>
        </indexterm>
        <refnamediv>
          <refname>post-revprop-change</refname>
          <refpurpose>修订版本属性修改成功的通知</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>post-revprop-change</literal>钩子会在修订版本属性修改后立即执行，在提交范围之外。可以从其对应物<literal>pre-revprop-change</literal>知道，如果没有实现<literal>pre-revprop-change</literal>钩子就不会执行。它通常用来在属性修改后发送邮件通知。</para>
          <para>如果<literal>pre-commit</literal>钩子返回非零值，提交会退出，提交事务被删除，所有标准错误的输出返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>已经修改属性的修订版本</para>
            </listitem>
            <listitem>
              <para>做出修改的认证用户名</para>
            </listitem>
            <listitem>
              <para>属性名称已修改</para>
            </listitem>
            <listitem>
              <para>变更描述：<literal>A</literal> (添加的)，<literal>D</literal> (删除的)或<literal>M</literal> (修改的)</para>
            </listitem>
          </orderedlist>
          <para>此外，Subversion通过标准输入将属性的前一个值传递给钩子。</para>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>属性修改通知</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.pre-lock">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>pre-lock</tertiary>
        </indexterm>
        <refnamediv>
          <refname>pre-lock</refname>
          <refpurpose>路径锁定尝试的通知。</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>pre-lock</literal>钩子会在每次有人尝试锁定文件时执行，可以防止完全的锁定，或者用来指定控制哪些用户可以锁定特定路径的复杂策略，如果钩子发现已存在的钩子，也可以决定是否<quote>窃取</quote>这个钩子。</para>
          <para>如果<literal>pre-lock</literal>钩子返回非零值，锁定动作会退出，并将标准错误返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>将要锁定的版本化路径</para>
            </listitem>
            <listitem>
              <para>尝试锁定的认证用户名</para>
            </listitem>
          </orderedlist>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>访问控制</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.post-lock">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>post-lock</tertiary>
        </indexterm>
        <refnamediv>
          <refname>post-lock</refname>
          <refpurpose>成功锁定路径的通知。</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>post-lock</literal>在路径锁定后执行，通常用来发送锁定事件邮件通知。</para>
          <para>如果<literal>pre-lock</literal>钩子返回非零值，锁定动作会退出，并将标准错误返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>锁定路径的认证用户名</para>
            </listitem>
          </orderedlist>
          <para>此外，锁定路径通过标准输入传递给钩子程序，每行一个路径。</para>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>锁定通知</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.pre-unlock">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>pre-unlock</tertiary>
        </indexterm>
        <refnamediv>
          <refname>pre-unlock</refname>
          <refpurpose>路径解锁尝试的通知。</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>pre-unlock</literal>钩子在某人企图删除一个文件上的钩子时发生，可以用来制定哪些用户可以解除文件锁定的策略。制定破坏锁定的策略非常重要，如果一个用户A锁定了一个文件，允许用户B打开这个锁？如果这个锁已经一周了呢？这种事情可以通过钩子决定并执行。</para>
          <para>如果<literal>pre-unlock</literal>返回非零值，解锁过程就会退出，标准错误返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>将要锁定的版本化路径</para>
            </listitem>
            <listitem>
              <para>尝试锁定的认证用户名</para>
            </listitem>
          </orderedlist>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>访问控制</para>
        </refsection>
      </refentry>
      <!-- =============================================================== -->
      <refentry xml:id="svn.ref.reposhooks.post-unlock">
        <indexterm>
          <primary>版本库</primary>
          <secondary>hooks</secondary>
          <tertiary>post-unlock</tertiary>
        </indexterm>
        <refnamediv>
          <refname>post-unlock</refname>
          <refpurpose>路径成功解锁的通知。</refpurpose>
        </refnamediv>
        <refsection>
          <info>
            <title>描述</title>
          </info>
          <para><literal>post-unlock</literal>在一个或多个路径已经被解锁后执行，通常用来发送解锁事件通知邮件。</para>
          <para>如果<literal>pre-unlock</literal>返回非零值，解锁过程就会退出，标准错误返回到客户端。</para>
        </refsection>
        <refsection>
          <info>
            <title>输入参数</title>
          </info>
          <para>传递给你钩子程序的命令行参数，按照顺序是：</para>
          <orderedlist inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>版本库路径</para>
            </listitem>
            <listitem>
              <para>路径解锁的认证用户名</para>
            </listitem>
          </orderedlist>
          <para>此外，解锁路径通过标准输入传递给钩子程序，每行一个路径。</para>
        </refsection>
        <refsection>
          <info>
            <title>普通用户</title>
          </info>
          <para>解锁通知</para>
        </refsection>
      </refentry>
    </section>
  </chapter>
  <!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->